
==================== FINAL INTERFACE ====================
2017-02-12 20:02:50.0812608 UTC

interface Gluon-0.1.0.0-2zM8ehVFg6FFhvYw0f6srV:DirectoryServer [family instance module] 8001
  interface hash: 829ca107a23dac46bdec9705fe9626b4
  ABI hash: a702a213a0a7855eb90f310a02580853
  export-list hash: 60061404a213ecdc39912050d06acb3f
  orphan hash: 64dc6f83a662a143e5902237a1928e98
  flag hash: e86faf246ab80a8d5a1b92fcc1360c46
  sig of: Nothing
  used TH splices: False
  where
exports:
  DirectoryServer.closeFile
  DirectoryServer.deleteDatabases
  DirectoryServer.directoryApp
  DirectoryServer.directoryServer
  DirectoryServer.downloadFromFileServer
  DirectoryServer.findFileMapping
  DirectoryServer.getAllFileMappings
  DirectoryServer.getAllFileServers
  DirectoryServer.getFiles
  DirectoryServer.getFilesFromFileServer
  DirectoryServer.joinServer
  DirectoryServer.mkDirectoryServer
  DirectoryServer.openFile
  DirectoryServer.resources
  DirectoryServer.uploadToFileServer
  DirectoryServer.upsertFileMapping
  DirectoryServer.upsertFileServer
  DirectoryServer.FileMapping{DirectoryServer.FileMapping fileName identity}
module dependencies: CommonServer CommonServerApi MongoDbConnector
package dependencies: MonadRandom-0.4.2.3@MonadRandom-0.4.2.3-8TfCm6PGvGYB7omozORhov
                      Win32-2.3.1.1@Win32-2.3.1.1
                      aeson-0.11.2.1@aeson-0.11.2.1-5ZQWuTFmffALcfpzDCXoOz
                      appar-0.1.4@appar-0.1.4-1in4Ewd8JBkAYDZSWXLSe0
                      array-0.5.1.1@array-0.5.1.1
                      async-2.1.1@async-2.1.1-xFiBzw9xoB8HPZAuxUY2o
                      attoparsec-0.13.1.0@attoparsec-0.13.1.0-5Olk1S76r1CDYzFS6V3sZR
                      auto-update-0.1.4@auto-update-0.1.4-GAesfFmqoZzBz6e09kRyzb
                      base-4.9.0.0
                      base-compat-0.9.1@base-compat-0.9.1-Jorka5wAHbt82D18A4gF6b
                      base16-bytestring-0.1.1.6@base16-bytestring-0.1.1.6-5dPoF8dzhwzBaEB2MvnmIS
                      base64-bytestring-1.0.0.1@base64-bytestring-1.0.0.1-In9M41tLtcS9QYt3QpGpNY
                      binary-0.8.3.0@binary-0.8.3.0
                      blaze-builder-0.4.0.2@blaze-builder-0.4.0.2-KWDLbdBYSBoALiMW0LHIz1
                      blaze-html-0.8.1.3@blaze-html-0.8.1.3-8MBPJsFNBtBBD2gWERenva
                      blaze-markup-0.7.1.1@blaze-markup-0.7.1.1-IE161DWDHNXF9O8bBguli5
                      bson-0.3.2.3@bson-0.3.2.3-EE4NjCypFvQ16toPJxQaT3
                      bson-generic-0.0.8@bson-generic-0.0.8-HCUlC9mFzScEiZ90dYsZ4F
                      byteable-0.1.1@byteable-0.1.1-15aIBCArSOBEnGxArzrDTM
                      byteorder-1.0.4@byteorder-1.0.4-BbL4c17EpZrL9PcZm0xys9
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      case-insensitive-1.2.0.7@case-insensitive-1.2.0.7-FlqweN7AuKj9EdU2arVEt4
                      cipher-aes-0.2.11@cipher-aes-0.2.11-6IDqXzfBW6B3WK2bKJbiBh
                      containers-0.5.7.1@containers-0.5.7.1
                      cookie-0.4.2.1@cookie-0.4.2.1-2a2c54yIyBn79Ul3iLWclJ
                      cprng-aes-0.6.1@cprng-aes-0.6.1-FC7oaZWVuSwGLsSRmNtnfS
                      crypto-cipher-types-0.0.9@crypto-cipher-types-0.0.9-Iwzx9devSK6HQoOjujg46u
                      crypto-random-0.0.9@crypto-random-0.0.9-AGKuDxkGmdkICMALIbcYDi
                      cryptohash-0.11.9@cryptohash-0.11.9-AKA83W6XJLuJ6ooDzY2r0l
                      cryptonite-0.19@cryptonite-0.19-JQTQGTq5BGQJS9F2vRxlj
                      data-binary-ieee754-0.4.4@data-binary-ieee754-0.4.4-F1HjhwdV1xx5grS0eMjeg2
                      data-default-class-0.1.2.0@data-default-class-0.1.2.0-FYQpjIylblBDctdkHAFeXA
                      deepseq-1.4.2.0@deepseq-1.4.2.0 directory-1.2.6.2@directory-1.2.6.2
                      dlist-0.8.0.2@dlist-0.8.0.2-GWAMmbX9rLg3tqrbOizHGv
                      exceptions-0.8.3@exceptions-0.8.3-7py7fmRxowDFpHmiHGKrTb
                      file-embed-0.0.10@file-embed-0.0.10-IXfudWSq57y1Athysk5ifZ
                      filepath-1.4.1.0@filepath-1.4.1.0
                      ghc-boot-th-8.0.1@ghc-boot-th-8.0.1 ghc-prim-0.5.0.0
                      hashable-1.2.4.0@hashable-1.2.4.0-EMu4H7FB10MAl6hwKw992G
                      hashtables-1.2.1.0@hashtables-1.2.1.0-97BixhaJIWTIDAaThqJujl
                      hslogger-1.2.10@hslogger-1.2.10-sT57JmCNO02KPQ07k0Jv6
                      http-api-data-0.3.2@http-api-data-0.3.2-A22DPUhAmUlrIoBZ4qkGB
                      http-client-0.4.31.2@http-client-0.4.31.2-6gyf7twhhmv8yfbRVNkl4Z
                      http-date-0.0.6.1@http-date-0.0.6.1-150spKQYCuoIrltdbMmYGs
                      http-media-0.6.4@http-media-0.6.4-82jDVCpdN5H696EFF5l5I4
                      http-types-0.9.1@http-types-0.9.1-8WdUZL4twHzANJbxvb1Aoj
                      http2-1.6.2@http2-1.6.2-8AbNCX9FS8K1gUe78Emp1g integer-gmp-1.0.0.1
                      iproute-1.7.1@iproute-1.7.1-EsJa15Wmnfj5pBTvNuT9V3
                      lifted-base-0.2.3.8@lifted-base-0.2.3.8-KLkd0w1UJqu6nE8oVTTEBy
                      memory-0.13@memory-0.13-ABHR5331zHK9scHPRr7afU
                      mime-types-0.1.0.7@mime-types-0.1.0.7-AxQ64wFjikqCSdK5pSeZvh
                      mmorph-1.0.9@mmorph-1.0.9-DmSwQqk5nLj7roLAcydGz
                      monad-control-1.0.1.0@monad-control-1.0.1.0-HoNEBoNfniX3vjSfkI7WTT
                      mongoDB-2.1.1.1@mongoDB-2.1.1.1-8pQlEjBJ8J0LRyS8YhkcGi
                      mtl-2.2.1@mtl-2.2.1-6qsR1PHUy5lL47Hpoa4jCM
                      network-2.6.3.1@network-2.6.3.1-nK9qnsiJR03CWuPIGMmX
                      network-uri-2.6.1.0@network-uri-2.6.1.0-DDHh2FNiPirBRgkuU9DEt2
                      nonce-1.0.2@nonce-1.0.2-5AJC5Z1QNmbDHXkdC0qzs0
                      parsec-3.1.11@parsec-3.1.11-BCos4GEVCuDB8dnOCBHO6X
                      pretty-1.1.3.3@pretty-1.1.3.3
                      primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa
                      psqueues-0.2.2.3@psqueues-0.2.2.3-YN2xKllZOMJLtAgRHlkEw
                      random-1.1@random-1.1-54KmMHXjttlERYcr1mvsAe
                      random-shuffle-0.0.4@random-shuffle-0.0.4-LfeDYNPfwrQ2o9p6tw2M9l
                      resourcet-1.1.8.1@resourcet-1.1.8.1-1XWaZ7RmVde330DM5PRI3Z
                      safe-0.3.10@safe-0.3.10-1VyrsjWhmjvGnGud5lgW7f
                      scientific-0.3.4.9@scientific-0.3.4.9-6oTYuCcx6H5BsTGU7D2Gk3
                      securemem-0.1.9@securemem-0.1.9-AlUbMorzPNe4lwnV15ASIa
                      servant-0.9.1.1@servant-0.9.1.1-EoAfArKoSMJ7jHATkoG3y1
                      servant-client-0.9.1.1@servant-client-0.9.1.1-ImsO92JUyoChIUnTgPFGf
                      servant-server-0.9.1.1@servant-server-0.9.1.1-D3Xggiyf9x2HIcMjhXbQ8H
                      stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF
                      streaming-commons-0.1.16@streaming-commons-0.1.16-1CT5SENqavw7Xg1mdSO0ef
                      string-conversions-0.4@string-conversions-0.4-8T0UFmRDEly2gsNJzmHrNQ
                      tagged-0.8.5@tagged-0.8.5-CtgV6EcN0do8F92i1S6iYx
                      template-haskell-2.11.0.0
                      text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s
                      time-1.6.0.1@time-1.6.0.1
                      time-locale-compat-0.1.1.3@time-locale-compat-0.1.1.3-1j5dGjxxtiTDuAsO86iSk0
                      transformers-0.5.2.0@transformers-0.5.2.0
                      transformers-base-0.4.4@transformers-base-0.4.4-25SoAegOdaF8rLEnnb5jPI
                      unix-compat-0.4.3.1@unix-compat-0.4.3.1-GfTEbzsMzf3JahCxeP2fig
                      unordered-containers-0.2.7.1@unordered-containers-0.2.7.1-Eo9jd5DMz45DhBLCG8skzW
                      uri-bytestring-0.2.2.1@uri-bytestring-0.2.2.1-LMJUdG9s1QpIQ10mPWMO6d
                      utf8-string-1.0.1.1@utf8-string-1.0.1.1-2T8mBCuEDlXDo8zed8Onw4
                      uuid-types-1.0.3@uuid-types-1.0.3-1qmdgBeDGlbCUibOmxVGqx
                      vault-0.3.0.6@vault-0.3.0.6-CA9Xj82tAPe9nD32xVMgDG
                      vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6
                      wai-3.2.1.1@wai-3.2.1.1-GVNFJ2NUhhADT18B8nh1gg
                      wai-app-static-3.1.6.1@wai-app-static-3.1.6.1-CvwBnPxNZ8M8ekSMP3oFNw
                      warp-3.2.9@warp-3.2.9-3hyX88L3Ey11UVH92i8P4R
                      word8-0.1.2@word8-0.1.2-2E1SgvvAV2fK8vZPDHbRan
                      zlib-0.6.1.2@zlib-0.6.1.2-4CWLN1T27kOJhNvXgy46ZV
orphans: Gluon-0.1.0.0-2zM8ehVFg6FFhvYw0f6srV:CommonServer
         MonadRandom-0.4.2.3@MonadRandom-0.4.2.3-8TfCm6PGvGYB7omozORhov:Control.Monad.Random
         aeson-0.11.2.1@aeson-0.11.2.1-5ZQWuTFmffALcfpzDCXoOz:Data.Aeson.Types.Generic
         aeson-0.11.2.1@aeson-0.11.2.1-5ZQWuTFmffALcfpzDCXoOz:Data.Aeson.Types.Instances
         attoparsec-0.13.1.0@attoparsec-0.13.1.0-5Olk1S76r1CDYzFS6V3sZR:Data.Attoparsec.ByteString.Char8
         attoparsec-0.13.1.0@attoparsec-0.13.1.0-5Olk1S76r1CDYzFS6V3sZR:Data.Attoparsec.Text.Internal
         base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bson-generic-0.0.8@bson-generic-0.0.8-HCUlC9mFzScEiZ90dYsZ4F:Data.Bson.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         hashable-1.2.4.0@hashable-1.2.4.0-EMu4H7FB10MAl6hwKw992G:Data.Hashable.Generic
         http-client-0.4.31.2@http-client-0.4.31.2-6gyf7twhhmv8yfbRVNkl4Z:Network.HTTP.Client.Request
         mongoDB-2.1.1.1@mongoDB-2.1.1.1-8pQlEjBJ8J0LRyS8YhkcGi:Database.MongoDB.Internal.Util
         network-2.6.3.1@network-2.6.3.1-nK9qnsiJR03CWuPIGMmX:Network.Socket
         stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF:Control.Monad.STM
         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text
         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text.Lazy
         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text.Show
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Fusion.Bundle
         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Unboxed
family instance modules: Gluon-0.1.0.0-2zM8ehVFg6FFhvYw0f6srV:CommonServer
                         attoparsec-0.13.1.0@attoparsec-0.13.1.0-5Olk1S76r1CDYzFS6V3sZR:Data.Attoparsec.Internal.Types
                         base-4.9.0.0:Control.Applicative base-4.9.0.0:Data.Complex
                         base-4.9.0.0:Data.Either base-4.9.0.0:Data.Functor.Compose
                         base-4.9.0.0:Data.Functor.Const base-4.9.0.0:Data.Functor.Identity
                         base-4.9.0.0:Data.Functor.Product base-4.9.0.0:Data.List.NonEmpty
                         base-4.9.0.0:Data.Monoid base-4.9.0.0:Data.Semigroup
                         base-4.9.0.0:Data.Type.Equality base-4.9.0.0:Data.Version
                         base-4.9.0.0:Data.Void base-4.9.0.0:GHC.Exts
                         base-4.9.0.0:GHC.Generics base-4.9.0.0:GHC.IO.Exception
                         base-4.9.0.0:GHC.TypeLits
                         bson-generic-0.0.8@bson-generic-0.0.8-HCUlC9mFzScEiZ90dYsZ4F:Data.Bson.Generic
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         dlist-0.8.0.2@dlist-0.8.0.2-GWAMmbX9rLg3tqrbOizHGv:Data.DList
                         ghc-boot-th-8.0.1@ghc-boot-th-8.0.1:GHC.LanguageExtensions.Type
                         http-api-data-0.3.2@http-api-data-0.3.2-A22DPUhAmUlrIoBZ4qkGB:Web.Internal.FormUrlEncoded
                         http-client-0.4.31.2@http-client-0.4.31.2-6gyf7twhhmv8yfbRVNkl4Z:Network.HTTP.Client
                         iproute-1.7.1@iproute-1.7.1-EsJa15Wmnfj5pBTvNuT9V3:Data.IP.Addr
                         iproute-1.7.1@iproute-1.7.1-EsJa15Wmnfj5pBTvNuT9V3:Data.IP.Range
                         monad-control-1.0.1.0@monad-control-1.0.1.0-HoNEBoNfniX3vjSfkI7WTT:Control.Monad.Trans.Control
                         network-uri-2.6.1.0@network-uri-2.6.1.0-DDHh2FNiPirBRgkuU9DEt2:Network.URI
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa:Control.Monad.Primitive
                         resourcet-1.1.8.1@resourcet-1.1.8.1-1XWaZ7RmVde330DM5PRI3Z:Control.Monad.Trans.Resource.Internal
                         servant-0.9.1.1@servant-0.9.1.1-EoAfArKoSMJ7jHATkoG3y1:Servant.API.ContentTypes
                         servant-0.9.1.1@servant-0.9.1.1-EoAfArKoSMJ7jHATkoG3y1:Servant.API.IsSecure
                         servant-0.9.1.1@servant-0.9.1.1-EoAfArKoSMJ7jHATkoG3y1:Servant.API.Verbs
                         servant-0.9.1.1@servant-0.9.1.1-EoAfArKoSMJ7jHATkoG3y1:Servant.Utils.Links
                         servant-client-0.9.1.1@servant-client-0.9.1.1-ImsO92JUyoChIUnTgPFGf:Servant.Client
                         servant-client-0.9.1.1@servant-client-0.9.1.1-ImsO92JUyoChIUnTgPFGf:Servant.Common.BaseUrl
                         servant-client-0.9.1.1@servant-client-0.9.1.1-ImsO92JUyoChIUnTgPFGf:Servant.Common.Req
                         servant-server-0.9.1.1@servant-server-0.9.1.1-D3Xggiyf9x2HIcMjhXbQ8H:Servant.Server.Internal
                         servant-server-0.9.1.1@servant-server-0.9.1.1-D3Xggiyf9x2HIcMjhXbQ8H:Servant.Server.Internal.BasicAuth
                         tagged-0.8.5@tagged-0.8.5-CtgV6EcN0do8F92i1S6iYx:Data.Tagged
                         template-haskell-2.11.0.0:Language.Haskell.TH.Syntax
                         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text
                         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text.Lazy
                         unordered-containers-0.2.7.1@unordered-containers-0.2.7.1-Eo9jd5DMz45DhBLCG8skzW:Data.HashMap.Base
                         unordered-containers-0.2.7.1@unordered-containers-0.2.7.1-Eo9jd5DMz45DhBLCG8skzW:Data.HashSet
                         uri-bytestring-0.2.2.1@uri-bytestring-0.2.2.1-LMJUdG9s1QpIQ10mPWMO6d:URI.ByteString.Types
                         uuid-types-1.0.3@uuid-types-1.0.3-1qmdgBeDGlbCUibOmxVGqx:Data.UUID.Types.Internal
                         uuid-types-1.0.3@uuid-types-1.0.3-1qmdgBeDGlbCUibOmxVGqx:Data.UUID.Types.Internal.Builder
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Primitive
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Storable
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Unboxed
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Unboxed.Base
                         zlib-0.6.1.2@zlib-0.6.1.2-4CWLN1T27kOJhNvXgy46ZV:Codec.Compression.Zlib.Stream
import  -/  CommonServer c97a515c78f7768ec91c7dfa1a025850
  exports: bab40333970dde4e0ef7e3781538ed5e
  DirectoryJoinSuccess a74421b53524c21e5e05e3794b2458d8
  File 63acd181f9f9808d13b9852425d30aae
  File 8d521a44de24d4da78ec642044502577
  FileUploadError f09c4074ea6a3d9418b4235324f50e2e
  Identity 1420bde85252e777e686e1e637f66e4d
  Resources 3eedfa21843d31060a26c830017589e3
  Resources 6dcd1258aefe8ac46625c0bde7dae835
  Response 465b2df700c059d58569d1d258ab3d2b
  Response 1420bde85252e777e686e1e637f66e4d
  address 5f4ddb540995a1969d8177ec93d7711f
  directoryServerIdentity e918a6ea83bfc5204d4b34cdd0957917
  fileName 5b226094337c8810b8d0ac598e8cb4cf
  getIdentityPort 2f8c58cf0f3a1a5c8f7bf3a30804edb2
  getIdentitySafeString 9b83aa792032eb2b5866cbe823bc6c44
  getIdentityString f4d2858a2594a132b25ab9cbcccb879e
  logAction 67521feb2c9d16e2eec4df6d06dc82c5
  logConnection b0739c4def4ef1f0e0da147e98bac21c
  logDatabase 65440336b0af3847526c77e22df70dad
  logError a7b65c5b3e362bf1dc96001c19bb3ea1
  logHeading 43eec4262a13ef3f88ad28d1fada7b6f
  logTrailing 1ef388b4add1c6112f1109f876c2a420
  path ba61456f9fa12984f2b731c13e779f06
  port af42485b4bfcd0674fbb854775afe3bb
import  -/  CommonServerApi a07feff7ef0955d0c76830663ff0cb1f
  exports: f71dcb6898944b6700c02a4565718ec0
  ApiHandler 231c7e4613e81ffd1be884fe0c4b6817
  DirectoryApi 73c9de4e5c4aa55e0f918b08d7db59a6
  directoryApi 8cb4bbf856aa4240dd545dd490124ebc
  fileClientDownload 85fc47f986ddee3837c1d988e7537a68
  fileClientFiles bf5bc82fbd9ee075793b26e3a5fc2ae7
  fileClientUpload e1ded9f6c1db5e7eebad0ec81a8c2fe2
import  -/  MongoDbConnector e6043e92a69386ef6dbd0263147cfeef
  exports: 195ced448d1d936e2baf506ab3de4d5a
  connectToDatabase 497c812f9c1b3e78d2c14152b3b904b9
  drainCursor 7895b3e0ad324d7adee083b6255f57cf
import  -/  aeson-0.11.2.1@aeson-0.11.2.1-5ZQWuTFmffALcfpzDCXoOz:Data.Aeson b323887803b1d3b16a4828adfc247669
import  -/  aeson-0.11.2.1@aeson-0.11.2.1-5ZQWuTFmffALcfpzDCXoOz:Data.Aeson.Types.Class 398d5f8a1c840e1122bb76cc4083aabf
import  -/  base-4.9.0.0:Control.Monad.IO.Class 6093ce5ace985d5ea81901bb51e28805
import  -/  base-4.9.0.0:Data.Either 4cef602ce360a0155ac0dd580a5b4863
import  -/  base-4.9.0.0:Data.Foldable 3cbed01c922be29649c33015287c82ca
import  -/  base-4.9.0.0:Data.List d711f98b49ef5d33e5b3d404631ed073
import  -/  base-4.9.0.0:Data.Maybe 086a84053ef7f7810663b5f03b7ec3f7
import  -/  base-4.9.0.0:Data.OldList 3c899c6d8e6204063769214449ac0954
import  -/  base-4.9.0.0:GHC.Base dd8044a8d640eee51828c17c476a6ba7
import  -/  base-4.9.0.0:GHC.Generics cdf72cc575895201800451f77c6e6810
import  -/  base-4.9.0.0:GHC.IO 1429985c1cb03cc0778fa4876799f1d2
import  -/  base-4.9.0.0:GHC.List 47d436dfb7454bb1883fb4d943e3f389
import  -/  base-4.9.0.0:GHC.Show 0b5845243cb2ec62b57dd6963d276ec6
import  -/  base-4.9.0.0:Prelude 2d9cd8b0ec3d728f62b734df888d2e34
import  -/  base-4.9.0.0:System.IO c1068c4f4231e3198e330f99a58145b0
import  -/  base-4.9.0.0:Text.Read 575a1becf4a56881b7def2de5a4c3776
import  -/  bson-0.3.2.3@bson-0.3.2.3-EE4NjCypFvQ16toPJxQaT3:Data.Bson 9dcb4fcd7c61220f1f6ae15ef9a1c054
import  -/  bson-generic-0.0.8@bson-generic-0.0.8-HCUlC9mFzScEiZ90dYsZ4F:Data.Bson.Generic 4ab95dcee9ff70a284f7b097542ed4a3
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Map 59ba4f128d7d19046010538c416f3875
import  -/  directory-1.2.6.2@directory-1.2.6.2:System.Directory 6ab32ada667d61db0e6e44603c58043c
import  -/  ghc-prim-0.5.0.0:GHC.Classes 16d48e012d23eaef9bca91ccdd572c02
import  -/  ghc-prim-0.5.0.0:GHC.Types 7378e41b7749213c8c88ceb6b0665d4c
import  -/  http-client-0.4.31.2@http-client-0.4.31.2-6gyf7twhhmv8yfbRVNkl4Z:Network.HTTP.Client 7efdeaf13b646bc90b9c711f77bcc9f3
import  -/  http-client-0.4.31.2@http-client-0.4.31.2-6gyf7twhhmv8yfbRVNkl4Z:Network.HTTP.Client.Manager 68a9222fb6d1dffab8bc2f88cd588a49
import  -/  mongoDB-2.1.1.1@mongoDB-2.1.1.1-8pQlEjBJ8J0LRyS8YhkcGi:Database.MongoDB 1e4125e4412f09f4fc240a6f540ad3a8
import  -/  mongoDB-2.1.1.1@mongoDB-2.1.1.1-8pQlEjBJ8J0LRyS8YhkcGi:Database.MongoDB.Query b4ba7e1d7397a420856343870367af87
import  -/  random-1.1@random-1.1-54KmMHXjttlERYcr1mvsAe:System.Random 8483439f8ec14d68196250b2c4a4fa4e
import  -/  servant-0.9.1.1@servant-0.9.1.1-EoAfArKoSMJ7jHATkoG3y1:Servant.API 6dde1d3e22332830052f8cc1ca7a8a6c
import  -/  servant-0.9.1.1@servant-0.9.1.1-EoAfArKoSMJ7jHATkoG3y1:Servant.API.Alternative dfcc311e19328d6b33108c0cab489271
import  -/  servant-client-0.9.1.1@servant-client-0.9.1.1-ImsO92JUyoChIUnTgPFGf:Servant.Client 5cc92c61c5d3da5052e499d328290814
import  -/  servant-client-0.9.1.1@servant-client-0.9.1.1-ImsO92JUyoChIUnTgPFGf:Servant.Common.BaseUrl a238b544b2a45d87311356060a30f125
import  -/  servant-client-0.9.1.1@servant-client-0.9.1.1-ImsO92JUyoChIUnTgPFGf:Servant.Common.Req 736a42de892bc16aef2006861258f123
import  -/  servant-server-0.9.1.1@servant-server-0.9.1.1-D3Xggiyf9x2HIcMjhXbQ8H:Servant 4410ab1a7de886d950f97ca9d8b6de88
import  -/  servant-server-0.9.1.1@servant-server-0.9.1.1-D3Xggiyf9x2HIcMjhXbQ8H:Servant.Server 5679d15364362071343eeaa38fabdc6b
import  -/  servant-server-0.9.1.1@servant-server-0.9.1.1-D3Xggiyf9x2HIcMjhXbQ8H:Servant.Server.Internal 82b8ebff2e05af1ae04bc25ea2fec1fd
import  -/  text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text 8dbacab9fc008bc20f8ced1c7c1f4b82
import  -/  time-1.6.0.1@time-1.6.0.1:Data.Time feb04036d549fe1fa913ff01e216d803
import  -/  time-1.6.0.1@time-1.6.0.1:Data.Time.Clock 23d666c4496b6f7bf555419424731ccb
import  -/  time-1.6.0.1@time-1.6.0.1:Data.Time.Format 6cdceb8cd3a2bb55a28d431357c4ce3d
import  -/  transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Except 7818a7c6346c90815c8b961a98146fb3
import  -/  wai-3.2.1.1@wai-3.2.1.1-GVNFJ2NUhhADT18B8nh1gg:Network.Wai 6802161fda2a254e932e92defc21d045
import  -/  warp-3.2.9@warp-3.2.9-3hyX88L3Ey11UVH92i8P4R:Network.Wai.Handler.Warp 80364e098a21cbf3e268e5ee24bf0351
import  -/  warp-3.2.9@warp-3.2.9-3hyX88L3Ey11UVH92i8P4R:Network.Wai.Handler.Warp.Run 1dbf1f4e5768a75efe6facb4e0c716b3
fedcee52520b8702af78f71ba2b57c4b
  $fEqFileMapping :: GHC.Classes.Eq DirectoryServer.FileMapping
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ DirectoryServer.FileMapping
                  DirectoryServer.$fEqFileMapping_$c==
                  DirectoryServer.$fEqFileMapping_$c/= -}
fedcee52520b8702af78f71ba2b57c4b
  $fEqFileMapping_$c/= ::
    DirectoryServer.FileMapping
    -> DirectoryServer.FileMapping -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SL),1*U(1*U,1*U(1*U,1*U,1*U))><S(SL),1*U(1*U,1*U(1*U,1*U,1*U))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: DirectoryServer.FileMapping)
                   (w1 :: DirectoryServer.FileMapping) ->
                 case w of ww { DirectoryServer.FileMapping ww1 ww2 ->
                 case w1 of ww3 { DirectoryServer.FileMapping ww4 ww5 ->
                 DirectoryServer.$w$c/= ww1 ww2 ww4 ww5 } }) -}
fedcee52520b8702af78f71ba2b57c4b
  $fEqFileMapping_$c== ::
    DirectoryServer.FileMapping
    -> DirectoryServer.FileMapping -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SL),1*U(1*U,1*U(1*U,1*U,1*U))><S(SL),1*U(1*U,1*U(1*U,1*U,1*U))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: DirectoryServer.FileMapping)
                   (w1 :: DirectoryServer.FileMapping) ->
                 case w of ww { DirectoryServer.FileMapping ww1 ww2 ->
                 case w1 of ww3 { DirectoryServer.FileMapping ww4 ww5 ->
                 DirectoryServer.$w$c== ww1 ww2 ww4 ww5 } }) -}
fedcee52520b8702af78f71ba2b57c4b
  $fFromBSONFileMapping ::
    Data.Bson.Generic.FromBSON DirectoryServer.FileMapping
  DFunId
  {- Arity: 1, Strictness: <S,U>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                DirectoryServer.$fFromBSONFileMapping_$cfromBSON
                  `cast`
                (Sym (Data.Bson.Generic.N:FromBSON[0]
                          <DirectoryServer.FileMapping>_N)) -}
61b8a7d978f6a13f98feef9ad982585b
  $fFromBSONFileMapping1 ::
    GHC.Generics.SingI ('GHC.Base.Just "identity")
  {- Unfolding: InlineRule (0, True, True)
                DirectoryServer.$fFromBSONFileMapping2
                  `cast`
                (Trans
                     (Sym (GHC.Generics.D:R:SingMaybeb0[0] <GHC.Types.Symbol>_N))
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Base.Maybe
                                                       GHC.Types.Symbol>_N) <'GHC.Base.Just
                                                                               "identity">_N) -}
9e73d3936da550deda9eb6df2823b304
  $fFromBSONFileMapping2 ::
    GHC.Generics.R:SingMaybeb
      GHC.Types.Symbol ('GHC.Base.Just "identity")
  {- Unfolding: (GHC.Generics.SJust
                   @ GHC.Types.Symbol
                   @ ('GHC.Base.Just "identity")
                   @ "identity"
                   @~ <'GHC.Base.Just "identity">_N
                   DirectoryServer.$fFromBSONFileMapping3
                     `cast`
                   (Sym (GHC.Generics.D:R:SingSymbols0[0]) <"identity">_N)) -}
932a1e1b90d4880e0b18884a1aced127
  $fFromBSONFileMapping3 :: GHC.Generics.R:SingSymbols "identity"
  {- Strictness: m,
     Unfolding: (GHC.Generics.SSym
                   @ "identity"
                   DirectoryServer.$fFromBSONFileMapping4
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SSymbol[0] <"identity">_P))
                        (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"identity">_N))) -}
c5feaf9ceb6ccdc6837d61527e1a407b
  $fFromBSONFileMapping4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "identity"#) -}
fedcee52520b8702af78f71ba2b57c4b
  $fFromBSONFileMapping_$cfromBSON ::
    Data.Bson.Document -> GHC.Base.Maybe DirectoryServer.FileMapping
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (doc :: Data.Bson.Document) ->
                 case Data.Bson.Generic.$w$cgenericFromBSON
                        @ [GHC.Types.Char]
                        @ ('GHC.Generics.MetaSel
                             ('GHC.Base.Just "fileName")
                             'GHC.Generics.NoSourceUnpackedness
                             'GHC.Generics.NoSourceStrictness
                             'GHC.Generics.DecidedLazy)
                        @ GHC.Generics.R
                        Data.Bson.Generic.$fGFromBSONM12_$s$fVal[]
                        CommonServer.$fFromJSONFile_$s$fSelectorMetaMetaSel
                        @ GHC.Prim.Any
                        doc of wild {
                   GHC.Base.Nothing -> GHC.Base.Nothing @ DirectoryServer.FileMapping
                   GHC.Base.Just x
                   -> case Data.Bson.Generic.$w$cgenericFromBSON
                             @ CommonServer.Identity
                             @ ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "identity")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                             @ GHC.Generics.R
                             CommonServer.$fFromBSONResponse_$s$fVala
                             DirectoryServer.$fFromBSONFileMapping_$s$fSelectorMetaMetaSel
                             @ GHC.Prim.Any
                             doc of wild1 {
                        GHC.Base.Nothing -> GHC.Base.Nothing @ DirectoryServer.FileMapping
                        GHC.Base.Just x1
                        -> GHC.Base.Just
                             @ DirectoryServer.FileMapping
                             (DirectoryServer.FileMapping
                                x `cast`
                                (Trans
                                     (GHC.Generics.N:M1[0]
                                          <GHC.Generics.S>_P
                                          <'GHC.Generics.MetaSel
                                             ('GHC.Base.Just "fileName")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy>_P
                                          <GHC.Generics.K1
                                             GHC.Generics.R GHC.IO.FilePath>_R <GHC.Prim.Any>_N)
                                     (GHC.Generics.N:K1[0]
                                          <GHC.Generics.R>_P <GHC.IO.FilePath>_R <GHC.Prim.Any>_P))
                                x1
                                  `cast`
                                (Trans
                                     (GHC.Generics.N:M1[0]
                                          <GHC.Generics.S>_P
                                          <'GHC.Generics.MetaSel
                                             ('GHC.Base.Just "identity")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy>_P
                                          <GHC.Generics.K1
                                             GHC.Generics.R
                                             CommonServer.Identity>_R <GHC.Prim.Any>_N)
                                     (GHC.Generics.N:K1[0]
                                          <GHC.Generics.R>_P
                                          <CommonServer.Identity>_R
                                          <GHC.Prim.Any>_P))) } }) -}
4a6fc5f8e3206052f6ed503723a7cef9
  $fFromBSONFileMapping_$s$fSelectorMetaMetaSel ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "identity")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Base.Just "identity")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  DirectoryServer.$fFromBSONFileMapping_$s$fSelectorMetaMetaSel_$cselName
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceUnpackedness
                     @ ('GHC.Base.Just "identity")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     DirectoryServer.$fFromBSONFileMapping1
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceStrictness
                     @ ('GHC.Base.Just "identity")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     DirectoryServer.$fFromBSONFileMapping1
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselDecidedStrictness
                     @ ('GHC.Base.Just "identity")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     DirectoryServer.$fFromBSONFileMapping1
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N)) -}
c714bf98eef8f231c18346ace69cd6b4
  $fFromBSONFileMapping_$s$fSelectorMetaMetaSel_$cselName ::
    forall k (t :: GHC.Generics.Meta
                   -> (GHC.Types.* -> GHC.Types.*) -> k -> *) (f :: GHC.Types.*
                                                                    -> GHC.Types.*) (a :: k).
    t ('GHC.Generics.MetaSel
         ('GHC.Base.Just "identity")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy) f a
    -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ k
                   @ (t :: GHC.Generics.Meta
                           -> (GHC.Types.* -> GHC.Types.*) -> k -> *)
                   @ (f :: GHC.Types.* -> GHC.Types.*)
                   @ (a :: k)
                   (ds1 :: t ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "identity")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy) f a) ->
                 DirectoryServer.$fFromBSONFileMapping4) -}
fedcee52520b8702af78f71ba2b57c4b
  $fFromJSONFileMapping ::
    Data.Aeson.Types.Class.FromJSON DirectoryServer.FileMapping
  DFunId
  {- Arity: 1, Strictness: <L,U>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                DirectoryServer.$fFromJSONFileMapping_$cparseJSON
                  `cast`
                (Sym (Data.Aeson.Types.Class.N:FromJSON[0]
                          <DirectoryServer.FileMapping>_N)) -}
15a020b8013b0e7aa2bf8f52df5e384f
  $fFromJSONFileMapping1 ::
    Data.Aeson.Types.Internal.Options
    -> GHC.Base.Maybe Data.Text.Internal.Text
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Generic.Tagged
         Data.Aeson.Types.Generic.True
         (Data.Aeson.Types.Internal.Parser
            ((GHC.Generics.:*:)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "fileName")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 GHC.IO.FilePath))
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "identity")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 CommonServer.Identity))
               a))
  {- Arity: 3, Strictness: <L,U(U,U,U,U,U,U)><L,A><S,1*U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, True)
                (\ @ a
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: GHC.Base.Maybe Data.Text.Internal.Text)
                   (w2 :: Data.Aeson.Types.Internal.Value) ->
                 DirectoryServer.$w$dConsFromJSON' @ a w w2) -}
aeedc48275dadc6b73695724060a5306
  $fFromJSONFileMapping2 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1)
  {- Arity: 2, Strictness: <L,A><L,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, True)
                (\ @ a1
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: Data.Aeson.Types.Internal.Value) ->
                 DirectoryServer.$w$dGFromJSON @ a1 w1) -}
6bed1d4384014016c909f1fa15355e59
  $fFromJSONFileMapping3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "String"#) -}
a4990318ff0b3767fce90d3bce3bd4b4
  $fFromJSONFileMapping4 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.K1 GHC.Generics.R CommonServer.Identity a1)
  {- Arity: 2, Strictness: <L,A><L,U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, True)
                (\ @ a1
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: Data.Aeson.Types.Internal.Value) ->
                 DirectoryServer.$w$dGFromJSON1 @ a1 w1) -}
058d735c81c3c8009d2818da80ab3b64
  $fFromJSONFileMapping5 ::
    (GHC.Generics.:*:)
      (GHC.Generics.M1
         GHC.Generics.S
         ('GHC.Generics.MetaSel
            ('GHC.Base.Just "fileName")
            'GHC.Generics.NoSourceUnpackedness
            'GHC.Generics.NoSourceStrictness
            'GHC.Generics.DecidedLazy)
         (GHC.Generics.Rec0 GHC.IO.FilePath))
      (GHC.Generics.M1
         GHC.Generics.S
         ('GHC.Generics.MetaSel
            ('GHC.Base.Just "identity")
            'GHC.Generics.NoSourceUnpackedness
            'GHC.Generics.NoSourceStrictness
            'GHC.Generics.DecidedLazy)
         (GHC.Generics.Rec0 CommonServer.Identity))
      a
    -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ a
                   (eta :: (GHC.Generics.:*:)
                             (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "fileName")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 GHC.IO.FilePath))
                             (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "identity")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 CommonServer.Identity))
                             a) ->
                 GHC.Types.False) -}
fedcee52520b8702af78f71ba2b57c4b
  $fFromJSONFileMapping_$cparseJSON ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser DirectoryServer.FileMapping
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (x :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser
                          ((GHC.Generics.:*:)
                             (GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "fileName")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 GHC.IO.FilePath))
                             (GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "identity")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 CommonServer.Identity))
                             GHC.Prim.Any)
                   = Data.Aeson.Types.Generic.$fConsFromJSONf_$cconsParseJSON
                       @ (GHC.Generics.S1
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "fileName")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.Rec0 GHC.IO.FilePath)
                          GHC.Generics.:*: GHC.Generics.S1
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "identity")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.Rec0 CommonServer.Identity))
                       @ Data.Aeson.Types.Generic.True
                       DirectoryServer.$fFromJSONFileMapping5
                         `cast`
                       (Sym (Data.Aeson.Types.Generic.N:IsRecord[0]
                                 <GHC.Generics.M1
                                    GHC.Generics.S
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "fileName")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.IO.FilePath)
                                  GHC.Generics.:*: GHC.Generics.M1
                                                     GHC.Generics.S
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "identity")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0 CommonServer.Identity)>_N
                                 <Data.Aeson.Types.Generic.True>_N))
                       DirectoryServer.$fFromJSONFileMapping1
                         `cast`
                       (Sym (Data.Aeson.Types.Generic.N:ConsFromJSON'[0]
                                 <GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "fileName")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.IO.FilePath)
                                  GHC.Generics.:*: GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "identity")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0 CommonServer.Identity)>_N
                                 <Data.Aeson.Types.Generic.True>_N))
                       @ GHC.Prim.Any
                       Data.Aeson.Types.Internal.defaultOptions
                       x
                 } in
                 (\ @ (f1 :: * -> *)
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f1 r)
                    (ks :: Data.Aeson.Types.Internal.Success
                             DirectoryServer.FileMapping f1 r) ->
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0]
                       <(GHC.Generics.:*:)
                          (GHC.Generics.S1
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "fileName")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 GHC.IO.FilePath))
                          (GHC.Generics.S1
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "identity")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 CommonServer.Identity))
                          GHC.Prim.Any>_R)
                    @ f1
                    @ r
                    path
                    kf
                    (\ (a2 :: (GHC.Generics.:*:)
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "fileName")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.IO.FilePath))
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "identity")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 CommonServer.Identity))
                                GHC.Prim.Any) ->
                     ks
                       (case a2 of wild { GHC.Generics.:*: ds ds1 ->
                        DirectoryServer.FileMapping
                          ds
                            `cast`
                          (Trans
                               (GHC.Generics.N:M1[0]
                                    <GHC.Generics.S>_P
                                    <'GHC.Generics.MetaSel
                                       ('GHC.Base.Just "fileName")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy>_P
                                    <GHC.Generics.K1
                                       GHC.Generics.R GHC.IO.FilePath>_R <GHC.Prim.Any>_N)
                               (GHC.Generics.N:K1[0]
                                    <GHC.Generics.R>_P <GHC.IO.FilePath>_R <GHC.Prim.Any>_P))
                          ds1
                            `cast`
                          (Trans
                               (GHC.Generics.N:M1[0]
                                    <GHC.Generics.S>_P
                                    <'GHC.Generics.MetaSel
                                       ('GHC.Base.Just "identity")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy>_P
                                    <GHC.Generics.K1
                                       GHC.Generics.R CommonServer.Identity>_R <GHC.Prim.Any>_N)
                               (GHC.Generics.N:K1[0]
                                    <GHC.Generics.R>_P
                                    <CommonServer.Identity>_R
                                    <GHC.Prim.Any>_P)) })))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                           <DirectoryServer.FileMapping>_R))) -}
fedcee52520b8702af78f71ba2b57c4b
  $fGenericFileMapping ::
    GHC.Generics.Generic DirectoryServer.FileMapping
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ DirectoryServer.FileMapping
                  DirectoryServer.$fGenericFileMapping_$cfrom
                  DirectoryServer.$fGenericFileMapping_$cto -}
fedcee52520b8702af78f71ba2b57c4b
  $fGenericFileMapping_$cfrom ::
    DirectoryServer.FileMapping
    -> GHC.Generics.Rep DirectoryServer.FileMapping x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (ds :: DirectoryServer.FileMapping) ->
                 case ds of wild { DirectoryServer.FileMapping g1 g2 ->
                 (GHC.Generics.:*:
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "fileName")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R GHC.IO.FilePath))
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "identity")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R CommonServer.Identity))
                    @ x
                    g1
                      `cast`
                    (Trans
                         (Sym (GHC.Generics.N:K1[0]
                                   <GHC.Generics.R>_P <GHC.IO.FilePath>_R <x>_P))
                         (Sym (GHC.Generics.N:M1[0]
                                   <GHC.Generics.S>_P
                                   <'GHC.Generics.MetaSel
                                      ('GHC.Base.Just "fileName")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy>_P
                                   <GHC.Generics.K1 GHC.Generics.R GHC.IO.FilePath>_R) <x>_N))
                    g2
                      `cast`
                    (Trans
                         (Sym (GHC.Generics.N:K1[0]
                                   <GHC.Generics.R>_P <CommonServer.Identity>_R <x>_P))
                         (Sym (GHC.Generics.N:M1[0]
                                   <GHC.Generics.S>_P
                                   <'GHC.Generics.MetaSel
                                      ('GHC.Base.Just "identity")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy>_P
                                   <GHC.Generics.K1
                                      GHC.Generics.R CommonServer.Identity>_R) <x>_N)))
                   `cast`
                 (Trans
                      (Sym (GHC.Generics.N:M1[0]
                                <GHC.Generics.C>_P
                                <'GHC.Generics.MetaCons
                                   "FileMapping" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                <GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "fileName")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1 GHC.Generics.R GHC.IO.FilePath)
                                 GHC.Generics.:*: GHC.Generics.M1
                                                    GHC.Generics.S
                                                    ('GHC.Generics.MetaSel
                                                       ('GHC.Base.Just "identity")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.K1
                                                       GHC.Generics.R CommonServer.Identity)>_R))
                      (Trans
                           (Sym (GHC.Generics.N:M1[0]
                                     <GHC.Generics.D>_P
                                     <'GHC.Generics.MetaData
                                        "FileMapping"
                                        "DirectoryServer"
                                        "Gluon-0.1.0.0-2zM8ehVFg6FFhvYw0f6srV"
                                        'GHC.Types.False>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.C
                                        ('GHC.Generics.MetaCons
                                           "FileMapping" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                        (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "fileName")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1 GHC.Generics.R GHC.IO.FilePath)
                                         GHC.Generics.:*: GHC.Generics.M1
                                                            GHC.Generics.S
                                                            ('GHC.Generics.MetaSel
                                                               ('GHC.Base.Just "identity")
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy)
                                                            (GHC.Generics.K1
                                                               GHC.Generics.R
                                                               CommonServer.Identity))>_R))
                           (Sub (Sym (DirectoryServer.Rep_FileMapping[0])))) <x>_N) }) -}
fedcee52520b8702af78f71ba2b57c4b
  $fGenericFileMapping_$cto ::
    GHC.Generics.Rep DirectoryServer.FileMapping x
    -> DirectoryServer.FileMapping
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (ds :: GHC.Generics.Rep DirectoryServer.FileMapping x) ->
                 case ds
                        `cast`
                      (Trans
                           (Sub (DirectoryServer.Rep_FileMapping[0]))
                           (Trans
                                (GHC.Generics.N:M1[0]
                                     <GHC.Generics.D>_P
                                     <'GHC.Generics.MetaData
                                        "FileMapping"
                                        "DirectoryServer"
                                        "Gluon-0.1.0.0-2zM8ehVFg6FFhvYw0f6srV"
                                        'GHC.Types.False>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.C
                                        ('GHC.Generics.MetaCons
                                           "FileMapping" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                        (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "fileName")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1 GHC.Generics.R GHC.IO.FilePath)
                                         GHC.Generics.:*: GHC.Generics.M1
                                                            GHC.Generics.S
                                                            ('GHC.Generics.MetaSel
                                                               ('GHC.Base.Just "identity")
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy)
                                                            (GHC.Generics.K1
                                                               GHC.Generics.R
                                                               CommonServer.Identity))>_R)
                                (GHC.Generics.N:M1[0]
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "FileMapping" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Base.Just "fileName")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.K1 GHC.Generics.R GHC.IO.FilePath)
                                      GHC.Generics.:*: GHC.Generics.M1
                                                         GHC.Generics.S
                                                         ('GHC.Generics.MetaSel
                                                            ('GHC.Base.Just "identity")
                                                            'GHC.Generics.NoSourceUnpackedness
                                                            'GHC.Generics.NoSourceStrictness
                                                            'GHC.Generics.DecidedLazy)
                                                         (GHC.Generics.K1
                                                            GHC.Generics.R
                                                            CommonServer.Identity)>_R)) <x>_N) of wild { GHC.Generics.:*: ds1 ds2 ->
                 DirectoryServer.FileMapping
                   ds1
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "fileName")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.IO.FilePath>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <GHC.IO.FilePath>_R <x>_P))
                   ds2
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "identity")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R CommonServer.Identity>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <CommonServer.Identity>_R <x>_P)) }) -}
fedcee52520b8702af78f71ba2b57c4b
  $fShowFileMapping :: GHC.Show.Show DirectoryServer.FileMapping
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ DirectoryServer.FileMapping
                  DirectoryServer.$fShowFileMapping_$cshowsPrec
                  DirectoryServer.$fShowFileMapping_$cshow
                  DirectoryServer.$fShowFileMapping_$cshowList -}
fedcee52520b8702af78f71ba2b57c4b
  $fShowFileMapping1 :: DirectoryServer.FileMapping -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (\ (w :: DirectoryServer.FileMapping)
                   (w1 :: GHC.Base.String) ->
                 case w of ww { DirectoryServer.FileMapping ww1 ww2 ->
                 DirectoryServer.$w$cshowsPrec 0# ww1 ww2 w1 }) -}
37c449d8d5513a8aad8850407a4ba384
  $fShowFileMapping2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "}"#) -}
7bf9d169fd615de5b29fe03adbeb9c9c
  $fShowFileMapping3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "identity = "#) -}
aba217bb3eef106e3436e8be743a8a73
  $fShowFileMapping4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# ", "#) -}
d2d6cfd5a98b9fb91954ee2f97b0c841
  $fShowFileMapping5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "fileName = "#) -}
15c43ca241cfc9a16c7ccbafbb01fd92
  $fShowFileMapping6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "FileMapping {"#) -}
fedcee52520b8702af78f71ba2b57c4b
  $fShowFileMapping_$cshow ::
    DirectoryServer.FileMapping -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U(1*U,1*U,1*U))>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: DirectoryServer.FileMapping) ->
                 DirectoryServer.$fShowFileMapping_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
fedcee52520b8702af78f71ba2b57c4b
  $fShowFileMapping_$cshowList ::
    [DirectoryServer.FileMapping] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ DirectoryServer.FileMapping
                   DirectoryServer.$fShowFileMapping1) -}
fedcee52520b8702af78f71ba2b57c4b
  $fShowFileMapping_$cshowsPrec ::
    GHC.Types.Int -> DirectoryServer.FileMapping -> GHC.Show.ShowS
  {- Arity: 3,
     Strictness: <S(S),1*U(U)><S,1*U(1*U,1*U(1*U,1*U,1*U))><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: DirectoryServer.FileMapping)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { DirectoryServer.FileMapping ww3 ww4 ->
                 DirectoryServer.$w$cshowsPrec ww1 ww3 ww4 w2 } }) -}
fedcee52520b8702af78f71ba2b57c4b
  $fToBSONFileMapping ::
    Data.Bson.Generic.ToBSON DirectoryServer.FileMapping
  DFunId
  {- Arity: 1, Strictness: <L,1*U(U,U)>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                DirectoryServer.$fToBSONFileMapping_$ctoBSON
                  `cast`
                (Sym (Data.Bson.Generic.N:ToBSON[0]
                          <DirectoryServer.FileMapping>_N)) -}
637612e5ffe3178f6c165db9facfd384
  $fToBSONFileMapping1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "FileMapping"#) -}
dff48d8d6c84fb0a67db6207114ab435
  $fToBSONFileMapping2 ::
    GHC.Types.Int
    -> (GHC.Generics.:*:)
         (GHC.Generics.M1
            GHC.Generics.S
            ('GHC.Generics.MetaSel
               ('GHC.Base.Just "fileName")
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.Rec0 GHC.IO.FilePath))
         (GHC.Generics.M1
            GHC.Generics.S
            ('GHC.Generics.MetaSel
               ('GHC.Base.Just "identity")
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.Rec0 CommonServer.Identity))
         a1
    -> [Data.Bson.Field]
  {- Arity: 2, Strictness: <L,A><S,1*U(1*U,1*U(U,U,U))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ @ a1
                   (w :: GHC.Types.Int)
                   (w1 :: (GHC.Generics.:*:)
                            (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "fileName")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.Rec0 GHC.IO.FilePath))
                            (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "identity")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.Rec0 CommonServer.Identity))
                            a1) ->
                 case w1 of ww { GHC.Generics.:*: ww1 ww2 ->
                 DirectoryServer.$w$dGToBSON @ a1 ww1 ww2 }) -}
cca0a91a84b1182da7a1b01b7d34b4db
  $fToBSONFileMapping3 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        8#
                        s1 of ds1 { (#,#) ipv ipv1 ->
                 Data.Bson.Generic.$wouter2
                   (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                   Data.Bson.Generic.$fFromBSONObjectKey5
                   DirectoryServer.$fFromBSONFileMapping4
                   0#
                   ipv }) -}
686eed62af84e11f96dbf04b7a6e12be
  $fToBSONFileMapping4 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        8#
                        s1 of ds1 { (#,#) ipv ipv1 ->
                 Data.Bson.Generic.$wouter2
                   (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                   Data.Bson.Generic.$fFromBSONObjectKey5
                   CommonServer.$fFromJSONFile5
                   0#
                   ipv }) -}
fedcee52520b8702af78f71ba2b57c4b
  $fToBSONFileMapping_$ctoBSON ::
    DirectoryServer.FileMapping -> Data.Bson.Document
  {- Arity: 1, Strictness: <L,1*U(U,U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (a1 :: DirectoryServer.FileMapping) ->
                 Data.Bson.Generic.$w$cgenericToBSON1
                   @ (GHC.Generics.S1
                        ('GHC.Generics.MetaSel
                           ('GHC.Base.Just "fileName")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy)
                        (GHC.Generics.Rec0 GHC.IO.FilePath)
                      GHC.Generics.:*: GHC.Generics.S1
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "identity")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.Rec0 CommonServer.Identity))
                   @ ('GHC.Generics.MetaCons
                        "FileMapping" 'GHC.Generics.PrefixI 'GHC.Types.True)
                   DirectoryServer.$fToBSONFileMapping2
                     `cast`
                   (Sym (Data.Bson.Generic.N:GToBSON[0]
                             <GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "fileName")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 GHC.IO.FilePath)
                              GHC.Generics.:*: GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "identity")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.Rec0 CommonServer.Identity)>_N))
                   DirectoryServer.$fToBSONFileMapping_$s$fConstructorMetaMetaCons
                   @ GHC.Prim.Any
                   1#
                   (case a1 of wild { DirectoryServer.FileMapping g1 g2 ->
                    (GHC.Generics.:*:
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "fileName")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R GHC.IO.FilePath))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "identity")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R CommonServer.Identity))
                       @ GHC.Prim.Any
                       g1
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <GHC.Generics.R>_P <GHC.IO.FilePath>_R <GHC.Prim.Any>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "fileName")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1
                                         GHC.Generics.R GHC.IO.FilePath>_R) <GHC.Prim.Any>_N))
                       g2
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <GHC.Generics.R>_P
                                      <CommonServer.Identity>_R
                                      <GHC.Prim.Any>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "identity")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1
                                         GHC.Generics.R
                                         CommonServer.Identity>_R) <GHC.Prim.Any>_N)))
                      `cast`
                    (Sym (GHC.Generics.N:M1[0]
                              <GHC.Generics.C>_P
                              <'GHC.Generics.MetaCons
                                 "FileMapping" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                              <GHC.Generics.M1
                                 GHC.Generics.S
                                 ('GHC.Generics.MetaSel
                                    ('GHC.Base.Just "fileName")
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.K1 GHC.Generics.R GHC.IO.FilePath)
                               GHC.Generics.:*: GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     ('GHC.Base.Just "identity")
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R
                                                     CommonServer.Identity)>_R) <GHC.Prim.Any>_N) })) -}
0c77ce56d26900028ebd15ef420fc475
  $fToBSONFileMapping_$s$fConstructorMetaMetaCons ::
    GHC.Generics.Constructor
      ('GHC.Generics.MetaCons
         "FileMapping" 'GHC.Generics.PrefixI 'GHC.Types.True)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaCons
                       "FileMapping" 'GHC.Generics.PrefixI 'GHC.Types.True)
                  (GHC.Generics.$fConstructorMetaMetaCons_$cconName
                     @ "FileMapping"
                     @ 'GHC.Generics.PrefixI
                     @ 'GHC.Types.True
                     DirectoryServer.$fToBSONFileMapping1
                       `cast`
                     (Trans
                          (Sym (GHC.TypeLits.N:SSymbol[0] <"FileMapping">_P))
                          (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"FileMapping">_N))
                     GHC.Generics.$WSPrefix
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.FixityI>_N <'GHC.Generics.PrefixI>_N)
                     GHC.Generics.$WSTrue
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Types.Bool>_N <'GHC.Types.True>_N))
                  (GHC.Generics.$fConstructorMetaMetaCons_$cconFixity
                     @ "FileMapping"
                     @ 'GHC.Generics.PrefixI
                     @ 'GHC.Types.True
                     DirectoryServer.$fToBSONFileMapping1
                       `cast`
                     (Trans
                          (Sym (GHC.TypeLits.N:SSymbol[0] <"FileMapping">_P))
                          (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"FileMapping">_N))
                     GHC.Generics.$WSPrefix
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.FixityI>_N <'GHC.Generics.PrefixI>_N)
                     GHC.Generics.$WSTrue
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Types.Bool>_N <'GHC.Types.True>_N))
                  (GHC.Generics.$fConstructorMetaMetaCons_$cconIsRecord
                     @ "FileMapping"
                     @ 'GHC.Generics.PrefixI
                     @ 'GHC.Types.True
                     DirectoryServer.$fToBSONFileMapping1
                       `cast`
                     (Trans
                          (Sym (GHC.TypeLits.N:SSymbol[0] <"FileMapping">_P))
                          (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"FileMapping">_N))
                     GHC.Generics.$WSPrefix
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.FixityI>_N <'GHC.Generics.PrefixI>_N)
                     GHC.Generics.$WSTrue
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Types.Bool>_N <'GHC.Types.True>_N)) -}
fedcee52520b8702af78f71ba2b57c4b
  $fToJSONFileMapping ::
    Data.Aeson.Types.Class.ToJSON DirectoryServer.FileMapping
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ DirectoryServer.FileMapping
                  DirectoryServer.$fToJSONFileMapping_$ctoJSON
                  DirectoryServer.$fToJSONFileMapping_$ctoEncoding -}
fedcee52520b8702af78f71ba2b57c4b
  $fToJSONFileMapping1 ::
    DirectoryServer.FileMapping
    -> Data.Aeson.Types.Generic.Tagged
         Data.Aeson.Types.Generic.True Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U(U,U,U))>m1,
     Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: DirectoryServer.FileMapping) ->
                 case w of ww { DirectoryServer.FileMapping ww1 ww2 ->
                 case DirectoryServer.$w$ctoJSON ww1 ww2 of ww3 { Unit# ww4 ->
                 (Data.Aeson.Types.Internal.Object ww4)
                   `cast`
                 (Sym (Data.Aeson.Types.Generic.N:Tagged[0]
                           <Data.Aeson.Types.Generic.True>_P
                           <Data.Aeson.Types.Internal.Value>_R)) } }) -}
1639178384d7e2ebb8b5269dc2442527
  $fToJSONFileMapping2 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        DirectoryServer.$fToJSONFileMapping3 of ds7 { (#,#) ipv ipv1 ->
                 ipv1 }) -}
38a2339a55d6eaaac898caacdf264c4d
  $fToJSONFileMapping3 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        8#
                        s1 of ds7 { (#,#) ipv ipv1 ->
                 Data.Aeson.Types.Generic.$wouter6
                   (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                   Data.Aeson.Types.Generic.$fFromPairM2
                   DirectoryServer.$fFromBSONFileMapping4
                   0#
                   ipv }) -}
5ee26ec67bd89b2fca0079652e36ce68
  $fToJSONFileMapping4 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 4#) -}
255ed786be159f3f467819051f67707b
  $fToJSONFileMapping5 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        DirectoryServer.$fToJSONFileMapping6 of ds7 { (#,#) ipv ipv1 ->
                 ipv1 }) -}
67f13b6d8400f4758f5b8203d135834b
  $fToJSONFileMapping6 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        8#
                        s1 of ds7 { (#,#) ipv ipv1 ->
                 Data.Aeson.Types.Generic.$wouter6
                   (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                   Data.Aeson.Types.Generic.$fFromPairM2
                   CommonServer.$fFromJSONFile5
                   0#
                   ipv }) -}
fedcee52520b8702af78f71ba2b57c4b
  $fToJSONFileMapping_$ctoEncoding ::
    DirectoryServer.FileMapping -> Data.Aeson.Types.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U(U,U,U))>,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: DirectoryServer.FileMapping) ->
                 Data.Aeson.Encode.Builder.encodeToBuilder
                   (DirectoryServer.$fToJSONFileMapping_$ctoJSON eta))
                  `cast`
                (<DirectoryServer.FileMapping>_R
                 ->_R Sym (Data.Aeson.Types.Internal.N:Encoding[0])) -}
fedcee52520b8702af78f71ba2b57c4b
  $fToJSONFileMapping_$ctoJSON ::
    DirectoryServer.FileMapping -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U(U,U,U))>m1,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.$fToJSONFileMapping1
                  `cast`
                (<DirectoryServer.FileMapping>_R
                 ->_R Data.Aeson.Types.Generic.N:Tagged[0]
                          <Data.Aeson.Types.Generic.True>_P
                          <Data.Aeson.Types.Internal.Value>_R) -}
af7e223005629ade6da4d2990e4123ee
  $s$fAllCTRender:a ::
    Servant.API.ContentTypes.AllCTRender
      '[Servant.API.ContentTypes.JSON] CommonServer.Response
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ '[Servant.API.ContentTypes.JSON]
                  @ CommonServer.Response
                  (Servant.API.ContentTypes.$fAllCTRender:a_$cp1AllCTRender
                     @ Servant.API.ContentTypes.JSON
                     @ '[]
                     @ CommonServer.Response
                     Servant.API.ContentTypes.$fAcceptTYPEJSON_$ccontentType
                       `cast`
                     (Sym (Servant.API.ContentTypes.N:Accept[0]
                               <*>_N <Servant.API.ContentTypes.JSON>_N))
                     Servant.API.ContentTypes.$fAllMimeUnrender[]a_$callMime
                       `cast`
                     (Sym (Servant.API.ContentTypes.N:AllMime[0] <'[]>_N))
                     DirectoryServer.$s$fAllCTRender:a1)
                  (Servant.API.ContentTypes.$fAllCTRender:a_$chandleAcceptH
                     @ Servant.API.ContentTypes.JSON
                     @ '[]
                     @ CommonServer.Response
                     Servant.API.ContentTypes.$fAcceptTYPEJSON_$ccontentType
                       `cast`
                     (Sym (Servant.API.ContentTypes.N:Accept[0]
                               <*>_N <Servant.API.ContentTypes.JSON>_N))
                     Servant.API.ContentTypes.$fAllMimeUnrender[]a_$callMime
                       `cast`
                     (Sym (Servant.API.ContentTypes.N:AllMime[0] <'[]>_N))
                     DirectoryServer.$s$fAllCTRender:a1) -}
1091a21a3b0e2ba2c0815ec57d0258c8
  $s$fAllCTRender:a1 ::
    Servant.API.ContentTypes.AllMimeRender
      '[Servant.API.ContentTypes.JSON] CommonServer.Response
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.$s$fAllCTRender:a_$s$fAllMimeRender:a0 -}
4816dbdec94fd9ddf379e545003df167
  $s$fAllCTRender:a2 ::
    Data.Proxy.Proxy '[Servant.API.ContentTypes.JSON]
    -> CommonServer.Response
    -> [(Network.HTTP.Media.MediaType.Internal.MediaType,
         Data.ByteString.Lazy.Internal.ByteString)]
  {- Arity: 2, Strictness: <L,A><L,1*U(U,U,U)>m2,
     Unfolding: InlineRule (2, True, False)
                (\ (eta :: Data.Proxy.Proxy '[Servant.API.ContentTypes.JSON])
                   (eta1 :: CommonServer.Response) ->
                 GHC.Types.:
                   @ (Network.HTTP.Media.MediaType.Internal.MediaType,
                      Data.ByteString.Lazy.Internal.ByteString)
                   (Servant.API.ContentTypes.$fAcceptTYPEJSON1,
                    Data.ByteString.Builder.toLazyByteString
                      (Data.Aeson.Encode.Builder.encodeToBuilder
                         (CommonServer.$fToJSONResponse1 eta1)
                           `cast`
                         (Data.Aeson.Types.Generic.N:Tagged[0]
                              <Data.Aeson.Types.Generic.True>_P
                              <Data.Aeson.Types.Internal.Value>_R)))
                   (GHC.Types.[]
                      @ (Network.HTTP.Media.MediaType.Internal.MediaType,
                         Data.ByteString.Lazy.Internal.ByteString))) -}
25e569ed9925d0012bd630fcd446d103
  $s$fAllCTRender:a3 ::
    Servant.API.ContentTypes.MimeRender
      Servant.API.ContentTypes.JSON CommonServer.Response
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.$s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa -}
45b9ef41e713997ee959f22906d6d5fe
  $s$fAllCTRender:a4 ::
    Servant.API.ContentTypes.AllCTRender
      '[Servant.API.ContentTypes.JSON] CommonServer.File
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ '[Servant.API.ContentTypes.JSON]
                  @ CommonServer.File
                  (Servant.API.ContentTypes.$fAllCTRender:a_$cp1AllCTRender
                     @ Servant.API.ContentTypes.JSON
                     @ '[]
                     @ CommonServer.File
                     Servant.API.ContentTypes.$fAcceptTYPEJSON_$ccontentType
                       `cast`
                     (Sym (Servant.API.ContentTypes.N:Accept[0]
                               <*>_N <Servant.API.ContentTypes.JSON>_N))
                     Servant.API.ContentTypes.$fAllMimeUnrender[]a_$callMime
                       `cast`
                     (Sym (Servant.API.ContentTypes.N:AllMime[0] <'[]>_N))
                     DirectoryServer.$s$fAllCTRender:a_$dAllMimeRender)
                  (Servant.API.ContentTypes.$fAllCTRender:a_$chandleAcceptH
                     @ Servant.API.ContentTypes.JSON
                     @ '[]
                     @ CommonServer.File
                     Servant.API.ContentTypes.$fAcceptTYPEJSON_$ccontentType
                       `cast`
                     (Sym (Servant.API.ContentTypes.N:Accept[0]
                               <*>_N <Servant.API.ContentTypes.JSON>_N))
                     Servant.API.ContentTypes.$fAllMimeUnrender[]a_$callMime
                       `cast`
                     (Sym (Servant.API.ContentTypes.N:AllMime[0] <'[]>_N))
                     DirectoryServer.$s$fAllCTRender:a_$dAllMimeRender) -}
01c7515e68aaf4994060b207d39587d8
  $s$fAllCTRender:a5 ::
    Data.Proxy.Proxy '[Servant.API.ContentTypes.JSON]
    -> CommonServer.File
    -> [(Network.HTTP.Media.MediaType.Internal.MediaType,
         Data.ByteString.Lazy.Internal.ByteString)]
  {- Arity: 2, Strictness: <L,A><L,1*U(1*U,1*U)>m2,
     Unfolding: InlineRule (2, True, False)
                (\ (eta :: Data.Proxy.Proxy '[Servant.API.ContentTypes.JSON])
                   (eta1 :: CommonServer.File) ->
                 GHC.Types.:
                   @ (Network.HTTP.Media.MediaType.Internal.MediaType,
                      Data.ByteString.Lazy.Internal.ByteString)
                   (Servant.API.ContentTypes.$fAcceptTYPEJSON1,
                    Data.ByteString.Builder.toLazyByteString
                      (Data.Aeson.Encode.Builder.encodeToBuilder
                         (CommonServer.$fToJSONFile1 eta1)
                           `cast`
                         (Data.Aeson.Types.Generic.N:Tagged[0]
                              <Data.Aeson.Types.Generic.True>_P
                              <Data.Aeson.Types.Internal.Value>_R)))
                   (GHC.Types.[]
                      @ (Network.HTTP.Media.MediaType.Internal.MediaType,
                         Data.ByteString.Lazy.Internal.ByteString))) -}
b596ee1b1722e74ada7f768b206e6aee
  $s$fAllCTRender:a6 ::
    Servant.API.ContentTypes.AllCTRender
      '[Servant.API.ContentTypes.JSON] [GHC.IO.FilePath]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ '[Servant.API.ContentTypes.JSON]
                  @ [GHC.IO.FilePath]
                  (Servant.API.ContentTypes.$fAllCTRender:a_$cp1AllCTRender
                     @ Servant.API.ContentTypes.JSON
                     @ '[]
                     @ [GHC.IO.FilePath]
                     Servant.API.ContentTypes.$fAcceptTYPEJSON_$ccontentType
                       `cast`
                     (Sym (Servant.API.ContentTypes.N:Accept[0]
                               <*>_N <Servant.API.ContentTypes.JSON>_N))
                     Servant.API.ContentTypes.$fAllMimeUnrender[]a_$callMime
                       `cast`
                     (Sym (Servant.API.ContentTypes.N:AllMime[0] <'[]>_N))
                     DirectoryServer.$s$fAllCTRender:a_$dAllMimeRender1)
                  (Servant.API.ContentTypes.$fAllCTRender:a_$chandleAcceptH
                     @ Servant.API.ContentTypes.JSON
                     @ '[]
                     @ [GHC.IO.FilePath]
                     Servant.API.ContentTypes.$fAcceptTYPEJSON_$ccontentType
                       `cast`
                     (Sym (Servant.API.ContentTypes.N:Accept[0]
                               <*>_N <Servant.API.ContentTypes.JSON>_N))
                     Servant.API.ContentTypes.$fAllMimeUnrender[]a_$callMime
                       `cast`
                     (Sym (Servant.API.ContentTypes.N:AllMime[0] <'[]>_N))
                     DirectoryServer.$s$fAllCTRender:a_$dAllMimeRender1) -}
8b96af77b4085e964ee9da7e046eaee1
  $s$fAllCTRender:a_$dAllMimeRender ::
    Servant.API.ContentTypes.AllMimeRender
      '[Servant.API.ContentTypes.JSON] CommonServer.File
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.$s$fAllCTRender:a_$s$fAllMimeRender:a1 -}
4f1a78f98e28e43ac1a5f05802238cfc
  $s$fAllCTRender:a_$dAllMimeRender1 ::
    Servant.API.ContentTypes.AllMimeRender
      '[Servant.API.ContentTypes.JSON] [GHC.IO.FilePath]
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.$s$fAllCTRender:a_$s$fAllMimeRender:a2 -}
ca0b87105ce9eb44aacff0a7a1c10ca4
  $s$fAllCTRender:a_$dMimeRender ::
    Servant.API.ContentTypes.MimeRender
      Servant.API.ContentTypes.JSON CommonServer.File
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.$s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa1 -}
9fe25d3e4f312ba38d26e8bdb0a0473f
  $s$fAllCTRender:a_$dMimeRender1 ::
    Servant.API.ContentTypes.MimeRender
      Servant.API.ContentTypes.JSON [GHC.IO.FilePath]
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.$s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa2 -}
369c54d0242420c12db31166d62ac51e
  $s$fAllCTRender:a_$dToJSON ::
    Data.Aeson.Types.Class.ToJSON [GHC.IO.FilePath]
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.$s$fAllCTRender:a_$s$fToJSON[] -}
c33056bf35edab18f0dcafbebb068be4
  $s$fAllCTRender:a_$s$fAllMimeRender:a0 ::
    Servant.API.ContentTypes.AllMimeRender
      '[Servant.API.ContentTypes.JSON] CommonServer.Response
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ '[Servant.API.ContentTypes.JSON]
                  @ CommonServer.Response
                  (Servant.API.ContentTypes.$fAllMimeRender:a0_$cp1AllMimeRender
                     @ Servant.API.ContentTypes.JSON
                     @ CommonServer.Response
                     DirectoryServer.$s$fAllCTRender:a3)
                  DirectoryServer.$s$fAllCTRender:a2 -}
eb0f6909c835584440479c9d19625211
  $s$fAllCTRender:a_$s$fAllMimeRender:a0_$callMimeRender ::
    Data.Proxy.Proxy '[Servant.API.ContentTypes.JSON]
    -> [GHC.IO.FilePath]
    -> [(Network.HTTP.Media.MediaType.Internal.MediaType,
         Data.ByteString.Lazy.Internal.ByteString)]
  {- Arity: 2, Strictness: <L,A><L,1*U>m2,
     Unfolding: InlineRule (2, True, False)
                (\ (eta :: Data.Proxy.Proxy '[Servant.API.ContentTypes.JSON])
                   (eta1 :: [GHC.IO.FilePath]) ->
                 GHC.Types.:
                   @ (Network.HTTP.Media.MediaType.Internal.MediaType,
                      Data.ByteString.Lazy.Internal.ByteString)
                   ((Servant.API.ContentTypes.$fMimeRenderTYPEJSONa_$cp1MimeRender
                       @ [GHC.IO.FilePath]
                       DirectoryServer.$s$fAllCTRender:a_$dToJSON)
                      `cast`
                    (Servant.API.ContentTypes.N:Accept[0]
                         <GHC.Types.*>_N <Servant.API.ContentTypes.JSON>_N)
                      (Data.Proxy.Proxy @ GHC.Types.* @ Servant.API.ContentTypes.JSON),
                    DirectoryServer.$s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa_$cmimeRender2
                      (Data.Proxy.Proxy @ GHC.Types.* @ Servant.API.ContentTypes.JSON)
                      eta1)
                   (GHC.Types.[]
                      @ (Network.HTTP.Media.MediaType.Internal.MediaType,
                         Data.ByteString.Lazy.Internal.ByteString))) -}
83eaef6e4ca280b94d061379afb3f8e0
  $s$fAllCTRender:a_$s$fAllMimeRender:a1 ::
    Servant.API.ContentTypes.AllMimeRender
      '[Servant.API.ContentTypes.JSON] CommonServer.File
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ '[Servant.API.ContentTypes.JSON]
                  @ CommonServer.File
                  (Servant.API.ContentTypes.$fAllMimeRender:a0_$cp1AllMimeRender
                     @ Servant.API.ContentTypes.JSON
                     @ CommonServer.File
                     DirectoryServer.$s$fAllCTRender:a_$dMimeRender)
                  DirectoryServer.$s$fAllCTRender:a5 -}
ea85de756cd8b5aa9bf861e99eda976d
  $s$fAllCTRender:a_$s$fAllMimeRender:a2 ::
    Servant.API.ContentTypes.AllMimeRender
      '[Servant.API.ContentTypes.JSON] [GHC.IO.FilePath]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ '[Servant.API.ContentTypes.JSON]
                  @ [GHC.IO.FilePath]
                  (Servant.API.ContentTypes.$fAllMimeRender:a0_$cp1AllMimeRender
                     @ Servant.API.ContentTypes.JSON
                     @ [GHC.IO.FilePath]
                     DirectoryServer.$s$fAllCTRender:a_$dMimeRender1)
                  DirectoryServer.$s$fAllCTRender:a_$s$fAllMimeRender:a0_$callMimeRender -}
f9bac53054bac9234cfb0e86d1935669
  $s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa ::
    Servant.API.ContentTypes.MimeRender
      Servant.API.ContentTypes.JSON CommonServer.Response
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ *
                  @ Servant.API.ContentTypes.JSON
                  @ CommonServer.Response
                  (Servant.API.ContentTypes.$fMimeRenderTYPEJSONa_$cp1MimeRender
                     @ CommonServer.Response
                     CommonServer.$fToJSONResponse)
                  DirectoryServer.$s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa_$cmimeRender -}
7b64fb1c2f15037d9b07a1fc37efcebd
  $s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa1 ::
    Servant.API.ContentTypes.MimeRender
      Servant.API.ContentTypes.JSON CommonServer.File
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ *
                  @ Servant.API.ContentTypes.JSON
                  @ CommonServer.File
                  (Servant.API.ContentTypes.$fMimeRenderTYPEJSONa_$cp1MimeRender
                     @ CommonServer.File
                     CommonServer.$fToJSONFile)
                  DirectoryServer.$s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa_$cmimeRender1 -}
5589e79c47a8e3637f75eb4b32e8cd5c
  $s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa2 ::
    Servant.API.ContentTypes.MimeRender
      Servant.API.ContentTypes.JSON [GHC.IO.FilePath]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ *
                  @ Servant.API.ContentTypes.JSON
                  @ [GHC.IO.FilePath]
                  (Servant.API.ContentTypes.$fMimeRenderTYPEJSONa_$cp1MimeRender
                     @ [GHC.IO.FilePath]
                     DirectoryServer.$s$fAllCTRender:a_$dToJSON)
                  DirectoryServer.$s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa_$cmimeRender2 -}
f33586cf2bdd933c53a3488dfa07ef45
  $s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa_$cmimeRender ::
    Data.Proxy.Proxy Servant.API.ContentTypes.JSON
    -> CommonServer.Response
    -> Data.ByteString.Lazy.Internal.ByteString
  {- Arity: 2, Strictness: <L,A><L,1*U(U,U,U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Data.Proxy.Proxy Servant.API.ContentTypes.JSON)
                   (eta :: CommonServer.Response) ->
                 Data.ByteString.Builder.toLazyByteString
                   (Data.Aeson.Types.Internal.fromEncoding
                      (Data.Aeson.Encode.Builder.encodeToBuilder
                         (CommonServer.$fToJSONResponse_$ctoJSON eta))
                        `cast`
                      (Sym (Data.Aeson.Types.Internal.N:Encoding[0])))) -}
0a4e4f2d2f6195bad4844caed841519d
  $s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa_$cmimeRender1 ::
    Data.Proxy.Proxy Servant.API.ContentTypes.JSON
    -> CommonServer.File -> Data.ByteString.Lazy.Internal.ByteString
  {- Arity: 2, Strictness: <L,A><L,1*U(1*U,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Data.Proxy.Proxy Servant.API.ContentTypes.JSON)
                   (eta :: CommonServer.File) ->
                 Data.ByteString.Builder.toLazyByteString
                   (Data.Aeson.Types.Internal.fromEncoding
                      (Data.Aeson.Encode.Builder.encodeToBuilder
                         (CommonServer.$fToJSONFile_$ctoJSON eta))
                        `cast`
                      (Sym (Data.Aeson.Types.Internal.N:Encoding[0])))) -}
c9245e16606cf86496392ecfbeba071e
  $s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa_$cmimeRender2 ::
    Data.Proxy.Proxy Servant.API.ContentTypes.JSON
    -> [GHC.IO.FilePath] -> Data.ByteString.Lazy.Internal.ByteString
  {- Arity: 2, Strictness: <L,A><L,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Data.Proxy.Proxy Servant.API.ContentTypes.JSON)
                   (eta :: [GHC.IO.FilePath]) ->
                 Data.ByteString.Builder.toLazyByteString
                   (case eta of wild {
                      []
                      -> Data.Aeson.Types.Internal.fromEncoding
                           Data.Aeson.Encode.Builder.emptyArray_
                      : x xs
                      -> Data.Aeson.Types.Internal.fromEncoding
                           (GHC.Base.$
                              @ 'GHC.Types.PtrRepLifted
                              @ Data.ByteString.Builder.Internal.Builder
                              @ Data.Aeson.Types.Internal.Encoding
                              (\ (tpl :: Data.ByteString.Builder.Internal.Builder) -> tpl)
                                `cast`
                              (<Data.ByteString.Builder.Internal.Builder>_R
                               ->_R Sym (Data.Aeson.Types.Internal.N:Encoding[0]))
                              (Data.ByteString.Builder.Internal.append
                                 (Data.ByteString.Builder.Prim.primBounded
                                    @ GHC.Types.Char
                                    (Data.ByteString.Builder.Prim.Internal.toB
                                       @ GHC.Types.Char
                                       Data.ByteString.Builder.Prim.ASCII.char7)
                                    (GHC.Types.C# '['#))
                                 (Data.ByteString.Builder.Internal.append
                                    (Data.Aeson.Types.Internal.fromEncoding
                                       (Data.Aeson.Encode.Builder.string x)
                                         `cast`
                                       (Sym (Data.Aeson.Types.Internal.N:Encoding[0])))
                                    (Data.ByteString.Builder.Internal.append
                                       (GHC.Base.foldr
                                          @ [GHC.Types.Char]
                                          @ Data.ByteString.Builder.Internal.Builder
                                          (\ (v :: [GHC.Types.Char])
                                             (vs :: Data.ByteString.Builder.Internal.Builder)[OneShot] ->
                                           Data.ByteString.Builder.Internal.append
                                             (Data.ByteString.Builder.Prim.primBounded
                                                @ GHC.Types.Char
                                                (Data.ByteString.Builder.Prim.Internal.toB
                                                   @ GHC.Types.Char
                                                   Data.ByteString.Builder.Prim.ASCII.char7)
                                                (GHC.Types.C# ','#))
                                             (Data.ByteString.Builder.Internal.append
                                                (Data.Aeson.Types.Internal.fromEncoding
                                                   (Data.Aeson.Encode.Builder.string v)
                                                     `cast`
                                                   (Sym (Data.Aeson.Types.Internal.N:Encoding[0])))
                                                vs))
                                          Data.ByteString.Builder.Internal.empty
                                          xs)
                                       (Data.ByteString.Builder.Prim.primBounded
                                          @ GHC.Types.Char
                                          (Data.ByteString.Builder.Prim.Internal.toB
                                             @ GHC.Types.Char
                                             Data.ByteString.Builder.Prim.ASCII.char7)
                                          (GHC.Types.C# ']'#)))))) })) -}
f0bcc71fdebbfd5059ea092315029b16
  $s$fAllCTRender:a_$s$fToJSON[] ::
    Data.Aeson.Types.Class.ToJSON [[GHC.Types.Char]]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ [[GHC.Types.Char]]
                  (\ (eta :: [[GHC.Types.Char]]) ->
                   case Data.Vector.Generic.new
                          @ Data.Vector.Vector
                          @ Data.Aeson.Types.Internal.Value
                          (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                          (Data.Vector.Generic.New.unstream
                             @ Data.Vector.Vector
                             @ Data.Aeson.Types.Internal.Value
                             (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                             (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                                @ Data.Vector.Fusion.Util.Id
                                @ Data.Aeson.Types.Internal.Value
                                @ Data.Vector.Vector
                                Data.Vector.Fusion.Util.$fMonadId
                                Data.Vector.Fusion.Bundle.Size.Unknown
                                (GHC.Base.build
                                   @ Data.Aeson.Types.Internal.Value
                                   (\ @ b1
                                      (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                      (n :: b1)[OneShot] ->
                                    GHC.Base.foldr
                                      @ [GHC.Types.Char]
                                      @ b1
                                      (GHC.Base.mapFB
                                         @ Data.Aeson.Types.Internal.Value
                                         @ b1
                                         @ [GHC.Types.Char]
                                         c
                                         Data.Aeson.Types.Instances.$fToJSON[]0_$ctoJSON)
                                      n
                                      eta)))) of dt { Data.Vector.Vector ipv ipv1 ipv2 ->
                   Data.Aeson.Types.Internal.Array dt })
                  (Data.Aeson.Types.Instances.$fToJSON[]_$ctoEncoding
                     @ [GHC.Types.Char]
                     Data.Aeson.Types.Instances.$fToJSON[]0) -}
291860f8a2b97ae9ff0928969e2e5509
  $s$fAllMimeUnrender:a ::
    Servant.API.ContentTypes.AllMimeUnrender
      '[Servant.API.ContentTypes.JSON] CommonServer.Identity
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ '[Servant.API.ContentTypes.JSON]
                  @ CommonServer.Identity
                  (Servant.API.ContentTypes.$fAllMimeUnrender:a_$cp1AllMimeUnrender
                     @ Servant.API.ContentTypes.JSON
                     @ CommonServer.Identity
                     @ '[]
                     DirectoryServer.$s$fAllMimeUnrender:a_$dMimeUnrender
                     (Servant.API.ContentTypes.$fAllMimeUnrender[]a
                        @ CommonServer.Identity))
                  (Servant.API.ContentTypes.$fAllMimeUnrender:a_$callMimeUnrender
                     @ Servant.API.ContentTypes.JSON
                     @ CommonServer.Identity
                     @ '[]
                     DirectoryServer.$s$fAllMimeUnrender:a_$dMimeUnrender
                     (Servant.API.ContentTypes.$fAllMimeUnrender[]a
                        @ CommonServer.Identity)) -}
e29e606f3fa122b7cc64a40860fc2513
  $s$fAllMimeUnrender:a1 ::
    Servant.API.ContentTypes.AllMimeUnrender
      '[Servant.API.ContentTypes.JSON] CommonServer.File
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ '[Servant.API.ContentTypes.JSON]
                  @ CommonServer.File
                  (Servant.API.ContentTypes.$fAllMimeUnrender:a_$cp1AllMimeUnrender
                     @ Servant.API.ContentTypes.JSON
                     @ CommonServer.File
                     @ '[]
                     DirectoryServer.$s$fAllMimeUnrender:a_$dMimeUnrender1
                     (Servant.API.ContentTypes.$fAllMimeUnrender[]a
                        @ CommonServer.File))
                  (Servant.API.ContentTypes.$fAllMimeUnrender:a_$callMimeUnrender
                     @ Servant.API.ContentTypes.JSON
                     @ CommonServer.File
                     @ '[]
                     DirectoryServer.$s$fAllMimeUnrender:a_$dMimeUnrender1
                     (Servant.API.ContentTypes.$fAllMimeUnrender[]a
                        @ CommonServer.File)) -}
9f4b838a44e5a778969b99a698f9dc3d
  $s$fAllMimeUnrender:a_$dMimeUnrender ::
    Servant.API.ContentTypes.MimeUnrender
      Servant.API.ContentTypes.JSON CommonServer.Identity
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.$s$fAllMimeUnrender:a_$s$fMimeUnrenderTYPEJSONa -}
539c4c9ef216bbc0ecfef3ca9d6a0ad1
  $s$fAllMimeUnrender:a_$dMimeUnrender1 ::
    Servant.API.ContentTypes.MimeUnrender
      Servant.API.ContentTypes.JSON CommonServer.File
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.$s$fAllMimeUnrender:a_$s$fMimeUnrenderTYPEJSONa1 -}
533a0e4f991663bb4b89489d542fed6b
  $s$fAllMimeUnrender:a_$s$fMimeUnrenderTYPEJSONa ::
    Servant.API.ContentTypes.MimeUnrender
      Servant.API.ContentTypes.JSON CommonServer.Identity
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ *
                  @ Servant.API.ContentTypes.JSON
                  @ CommonServer.Identity
                  (Servant.API.ContentTypes.$fMimeUnrenderTYPEJSONa_$cp1MimeUnrender
                     @ CommonServer.Identity
                     CommonServer.$fFromJSONIdentity_$cparseJSON
                       `cast`
                     (Sym (Data.Aeson.Types.Class.N:FromJSON[0]
                               <CommonServer.Identity>_N)))
                  DirectoryServer.$s$fAllMimeUnrender:a_$s$fMimeUnrenderTYPEJSONa_$cmimeUnrender -}
fd494a0a7d3872f7a669350147b21a17
  $s$fAllMimeUnrender:a_$s$fMimeUnrenderTYPEJSONa1 ::
    Servant.API.ContentTypes.MimeUnrender
      Servant.API.ContentTypes.JSON CommonServer.File
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ *
                  @ Servant.API.ContentTypes.JSON
                  @ CommonServer.File
                  (Servant.API.ContentTypes.$fMimeUnrenderTYPEJSONa_$cp1MimeUnrender
                     @ CommonServer.File
                     CommonServer.$fFromJSONFile_$cparseJSON
                       `cast`
                     (Sym (Data.Aeson.Types.Class.N:FromJSON[0] <CommonServer.File>_N)))
                  DirectoryServer.$s$fAllMimeUnrender:a_$s$fMimeUnrenderTYPEJSONa_$cmimeUnrender1 -}
63267ceba7ab7877a00fce9c464200df
  $s$fAllMimeUnrender:a_$s$fMimeUnrenderTYPEJSONa_$cmimeUnrender ::
    Data.Proxy.Proxy Servant.API.ContentTypes.JSON
    -> Data.ByteString.Lazy.Internal.ByteString
    -> Data.Either.Either GHC.Base.String CommonServer.Identity
  {- Arity: 2, Strictness: <L,A><S,1*U>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Proxy.Proxy Servant.API.ContentTypes.JSON)
                   (eta :: Data.ByteString.Lazy.Internal.ByteString) ->
                 Servant.API.ContentTypes.eitherDecodeLenient
                   @ CommonServer.Identity
                   CommonServer.$fFromJSONIdentity_$cparseJSON
                     `cast`
                   (Sym (Data.Aeson.Types.Class.N:FromJSON[0]
                             <CommonServer.Identity>_N))
                   eta) -}
d8d435bf7d80e5c23ce50e79847d0c67
  $s$fAllMimeUnrender:a_$s$fMimeUnrenderTYPEJSONa_$cmimeUnrender1 ::
    Data.Proxy.Proxy Servant.API.ContentTypes.JSON
    -> Data.ByteString.Lazy.Internal.ByteString
    -> Data.Either.Either GHC.Base.String CommonServer.File
  {- Arity: 2, Strictness: <L,A><S,1*U>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Proxy.Proxy Servant.API.ContentTypes.JSON)
                   (eta :: Data.ByteString.Lazy.Internal.ByteString) ->
                 Servant.API.ContentTypes.eitherDecodeLenient
                   @ CommonServer.File
                   CommonServer.$fFromJSONFile_$cparseJSON
                     `cast`
                   (Sym (Data.Aeson.Types.Class.N:FromJSON[0] <CommonServer.File>_N))
                   eta) -}
1b7e62feb3480093e8b1c5e244f801a0
  $tc'FileMapping :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12696745465732506708##
                   14057977081985999169##
                   DirectoryServer.$trModule
                   DirectoryServer.$tc'FileMapping1) -}
05e73e6c527c5ba11281d37582a6859b
  $tc'FileMapping1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'FileMapping"#) -}
3d6898ae6208660af2d296e8368ec159
  $tcFileMapping :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5841432484127658430##
                   7587004353211859868##
                   DirectoryServer.$trModule
                   DirectoryServer.$tcFileMapping1) -}
2422c49c16cf16e0a208fc8c042baef8
  $tcFileMapping1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "FileMapping"#) -}
664e31ee349cc5ccbc4227d1eb8a8f0b
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   DirectoryServer.$trModule2
                   DirectoryServer.$trModule1) -}
286852470b9f0f8b69eadb9dd65fea59
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "DirectoryServer"#) -}
caff13491a021247426a4298dd50bd6f
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "Gluon-0.1.0.0-2zM8ehVFg6FFhvYw0f6srV"#) -}
af938486254cc18c3f5cce7bed644cf1
  $w$c/= ::
    GHC.IO.FilePath
    -> CommonServer.Identity
    -> GHC.IO.FilePath
    -> CommonServer.Identity
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U(1*U,1*U,1*U)><S,1*U><L,1*U(1*U,1*U,1*U)>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.IO.FilePath)
                   (ww1 :: CommonServer.Identity)
                   (ww2 :: GHC.IO.FilePath)
                   (ww3 :: CommonServer.Identity) ->
                 case GHC.Base.eqString ww ww2 of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True
                   -> case ww1 of ww4 { CommonServer.Identity ww5 ww6 ww7 ->
                      case ww3 of ww8 { CommonServer.Identity ww9 ww10 ww11 ->
                      case GHC.Base.eqString ww5 ww9 of wild1 {
                        GHC.Types.False -> GHC.Types.True
                        GHC.Types.True
                        -> case GHC.Base.eqString ww6 ww10 of wild2 {
                             GHC.Types.False -> GHC.Types.True
                             GHC.Types.True
                             -> case ww7 of wild3 {
                                  CommonServer.FileServer
                                  -> case ww11 of wild4 {
                                       DEFAULT -> GHC.Types.True
                                       CommonServer.FileServer -> GHC.Types.False }
                                  CommonServer.DirectoryServer
                                  -> case ww11 of wild4 {
                                       DEFAULT -> GHC.Types.True
                                       CommonServer.DirectoryServer -> GHC.Types.False }
                                  CommonServer.ProxyServer
                                  -> case ww11 of wild4 {
                                       DEFAULT -> GHC.Types.True
                                       CommonServer.ProxyServer -> GHC.Types.False }
                                  CommonServer.SecurityServer
                                  -> case ww11 of wild4 {
                                       DEFAULT -> GHC.Types.True
                                       CommonServer.SecurityServer -> GHC.Types.False }
                                  CommonServer.TransactionServer
                                  -> case ww11 of wild4 {
                                       DEFAULT -> GHC.Types.True
                                       CommonServer.TransactionServer -> GHC.Types.False }
                                  CommonServer.ReplicationServer
                                  -> case ww11 of wild4 {
                                       DEFAULT -> GHC.Types.True
                                       CommonServer.ReplicationServer
                                       -> GHC.Types.False } } } } } } }) -}
709de2b14fdcdddae44aab5799faebc3
  $w$c== ::
    GHC.IO.FilePath
    -> CommonServer.Identity
    -> GHC.IO.FilePath
    -> CommonServer.Identity
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U(1*U,1*U,1*U)><S,1*U><L,1*U(1*U,1*U,1*U)>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.IO.FilePath)
                   (ww1 :: CommonServer.Identity)
                   (ww2 :: GHC.IO.FilePath)
                   (ww3 :: CommonServer.Identity) ->
                 case GHC.Base.eqString ww ww2 of wild {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True -> CommonServer.$fEqIdentity_$c== ww1 ww3 }) -}
69e4142b9a26ce6cd2032faf69d6cff1
  $w$cshowsPrec ::
    GHC.Prim.Int#
    -> GHC.IO.FilePath
    -> CommonServer.Identity
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 4, Strictness: <S,U><L,1*U><L,1*U(1*U,1*U,1*U)><L,U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.IO.FilePath)
                   (ww2 :: CommonServer.Identity)
                   (w :: GHC.Base.String) ->
                 let {
                   p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,1*U> -}
                   = \ (x :: GHC.Base.String)[OneShot] ->
                     GHC.Base.++
                       @ GHC.Types.Char
                       DirectoryServer.$fShowFileMapping6
                       (GHC.Base.++
                          @ GHC.Types.Char
                          DirectoryServer.$fShowFileMapping5
                          (GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows8
                             (GHC.Show.showLitString
                                ww1
                                (GHC.Types.:
                                   @ GHC.Types.Char
                                   GHC.Show.shows8
                                   (GHC.Base.++
                                      @ GHC.Types.Char
                                      DirectoryServer.$fShowFileMapping4
                                      (GHC.Base.++
                                         @ GHC.Types.Char
                                         DirectoryServer.$fShowFileMapping3
                                         (case ww2 of ww3 { CommonServer.Identity ww4 ww5 ww6 ->
                                          CommonServer.$w$cshowsPrec1
                                            0#
                                            ww4
                                            ww5
                                            ww6
                                            (GHC.Base.++
                                               @ GHC.Types.Char
                                               DirectoryServer.$fShowFileMapping2
                                               x) })))))))
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False -> p w
                   GHC.Types.True
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.shows9
                        (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows6 w)) }) -}
19b0147983289e937177fac1a8087b5c
  $w$ctoJSON ::
    GHC.IO.FilePath
    -> CommonServer.Identity -> (# Data.Aeson.Types.Internal.Object #)
  {- Arity: 2, Strictness: <L,1*U><L,1*U(U,U,U)>, Inline: [0],
     Unfolding: (\ (ww :: GHC.IO.FilePath)
                   (ww1 :: CommonServer.Identity) ->
                 case Data.Aeson.Types.Internal.$sfromList1
                        @ Data.Aeson.Types.Internal.Value
                        (GHC.Types.:
                           @ (Data.Text.Internal.Text, Data.Aeson.Types.Internal.Value)
                           (DirectoryServer.$fToJSONFileMapping5,
                            case DirectoryServer.$w$dGToJSON
                                   @ GHC.Prim.Any
                                   ww
                                     `cast`
                                   (Sym (GHC.Generics.N:K1[0]
                                             <GHC.Generics.R>_P
                                             <GHC.IO.FilePath>_R
                                             <GHC.Prim.Any>_P)) of ww2 { Unit# ww3 ->
                            Data.Aeson.Types.Internal.String ww3 })
                           (GHC.Types.:
                              @ (Data.Text.Internal.Text, Data.Aeson.Types.Internal.Value)
                              (DirectoryServer.$fToJSONFileMapping2,
                               (CommonServer.$fToJSONIdentity1 ww1)
                                 `cast`
                               (Data.Aeson.Types.Generic.N:Tagged[0]
                                    <Data.Aeson.Types.Generic.True>_P
                                    <Data.Aeson.Types.Internal.Value>_R))
                              (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair)))
                        (Data.HashMap.Base.Empty
                           @ Data.Text.Internal.Text
                           @ Data.Aeson.Types.Internal.Value) of dt { DEFAULT ->
                 (# dt #) }) -}
1ef2d6eeb11a85b94091ea2c07bf6e9b
  $w$dConsFromJSON' ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Generic.Tagged
         Data.Aeson.Types.Generic.True
         (Data.Aeson.Types.Internal.Parser
            ((GHC.Generics.:*:)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "fileName")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 GHC.IO.FilePath))
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "identity")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 CommonServer.Identity))
               a))
  {- Arity: 2, Strictness: <L,U(U,U,U,U,U,U)><S,1*U>, Inline: [0],
     Unfolding: (\ @ a
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: Data.Aeson.Types.Internal.Value) ->
                 case w1 of wild {
                   DEFAULT
                   -> (Data.Aeson.Types.Class.typeMismatch
                         @ ((GHC.Generics.:*:)
                              (GHC.Generics.S1
                                 ('GHC.Generics.MetaSel
                                    ('GHC.Base.Just "fileName")
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.Rec0 GHC.IO.FilePath))
                              (GHC.Generics.S1
                                 ('GHC.Generics.MetaSel
                                    ('GHC.Base.Just "identity")
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.Rec0 CommonServer.Identity))
                              a)
                         Data.Aeson.Types.Generic.$fConsFromJSON'fTrue1
                         wild)
                        `cast`
                      (Sym (Data.Aeson.Types.Generic.N:Tagged[0]
                                <Data.Aeson.Types.Generic.True>_P
                                <Data.Aeson.Types.Internal.Parser
                                   ((GHC.Generics.:*:)
                                      (GHC.Generics.S1
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "fileName")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.Rec0 GHC.IO.FilePath))
                                      (GHC.Generics.S1
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "identity")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.Rec0 CommonServer.Identity))
                                      a)>_R))
                   Data.Aeson.Types.Internal.Object obj
                   -> let {
                        e :: Data.Aeson.Types.Internal.Parser
                               (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "identity")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.Rec0 CommonServer.Identity)
                                  a)
                        = Data.Aeson.Types.Generic.$fFromRecordM10_$cparseRecord
                            @ ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "identity")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                            @ (GHC.Generics.K1 GHC.Generics.R CommonServer.Identity)
                            DirectoryServer.$fFromBSONFileMapping_$s$fSelectorMetaMetaSel
                            DirectoryServer.$fFromJSONFileMapping4
                              `cast`
                            (Sym (Data.Aeson.Types.Class.N:GFromJSON[0]
                                      <GHC.Generics.K1 GHC.Generics.R CommonServer.Identity>_N))
                            @ a
                            w
                            (GHC.Base.Nothing @ Data.Text.Internal.Text)
                            obj
                      } in
                      let {
                        m :: Data.Aeson.Types.Internal.Parser
                               (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "fileName")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.Rec0 GHC.IO.FilePath)
                                  a)
                        = Data.Aeson.Types.Generic.$fFromRecordM10_$cparseRecord
                            @ ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "fileName")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                            @ (GHC.Generics.K1 GHC.Generics.R GHC.IO.FilePath)
                            CommonServer.$fFromJSONFile_$s$fSelectorMetaMetaSel
                            DirectoryServer.$fFromJSONFileMapping2
                              `cast`
                            (Sym (Data.Aeson.Types.Class.N:GFromJSON[0]
                                      <GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char]>_N))
                            @ a
                            w
                            (GHC.Base.Nothing @ Data.Text.Internal.Text)
                            obj
                      } in
                      (\ @ (f :: * -> *)
                         @ r
                         (path :: Data.Aeson.Types.Internal.JSONPath)
                         (kf :: Data.Aeson.Types.Internal.Failure f r)
                         (ks :: Data.Aeson.Types.Internal.Success
                                  ((GHC.Generics.:*:)
                                     (GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Base.Just "fileName")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.Rec0 GHC.IO.FilePath))
                                     (GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Base.Just "identity")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.Rec0 CommonServer.Identity))
                                     a)
                                  f
                                  r) ->
                       m `cast`
                       (Data.Aeson.Types.Internal.N:Parser[0]
                            <GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "fileName")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.Rec0 GHC.IO.FilePath)
                               a>_R)
                         @ f
                         @ r
                         path
                         kf
                         (\ (a2 :: GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "fileName")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.Rec0 GHC.IO.FilePath)
                                     a) ->
                          e `cast`
                          (Data.Aeson.Types.Internal.N:Parser[0]
                               <GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "identity")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.Rec0 CommonServer.Identity)
                                  a>_R)
                            @ f
                            @ r
                            path
                            kf
                            (\ (a3 :: GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Base.Just "identity")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.Rec0 CommonServer.Identity)
                                        a) ->
                             ks
                               (GHC.Generics.:*:
                                  @ (GHC.Generics.M1
                                       GHC.Generics.S
                                       ('GHC.Generics.MetaSel
                                          ('GHC.Base.Just "fileName")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy)
                                       (GHC.Generics.Rec0 GHC.IO.FilePath))
                                  @ (GHC.Generics.M1
                                       GHC.Generics.S
                                       ('GHC.Generics.MetaSel
                                          ('GHC.Base.Just "identity")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy)
                                       (GHC.Generics.Rec0 CommonServer.Identity))
                                  @ a
                                  a2
                                  a3))))
                        `cast`
                      (Trans
                           (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                     <(GHC.Generics.:*:)
                                        (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "fileName")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.Rec0 GHC.IO.FilePath))
                                        (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "identity")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.Rec0 CommonServer.Identity))
                                        a>_R))
                           (Sym (Data.Aeson.Types.Generic.N:Tagged[0]
                                     <Data.Aeson.Types.Generic.True>_P
                                     <Data.Aeson.Types.Internal.Parser
                                        ((GHC.Generics.:*:)
                                           (GHC.Generics.S1
                                              ('GHC.Generics.MetaSel
                                                 ('GHC.Base.Just "fileName")
                                                 'GHC.Generics.NoSourceUnpackedness
                                                 'GHC.Generics.NoSourceStrictness
                                                 'GHC.Generics.DecidedLazy)
                                              (GHC.Generics.Rec0 GHC.IO.FilePath))
                                           (GHC.Generics.S1
                                              ('GHC.Generics.MetaSel
                                                 ('GHC.Base.Just "identity")
                                                 'GHC.Generics.NoSourceUnpackedness
                                                 'GHC.Generics.NoSourceStrictness
                                                 'GHC.Generics.DecidedLazy)
                                              (GHC.Generics.Rec0 CommonServer.Identity))
                                           a)>_R))) }) -}
fb38a4f6bb049c7654e789d92a733de6
  $w$dGFromJSON ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1)
  {- Arity: 1, Strictness: <L,1*U>, Inline: [0],
     Unfolding: (\ @ a1 (w :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser [GHC.Types.Char]
                   = case w of wild {
                       DEFAULT
                       -> Data.Aeson.Types.Class.typeMismatch
                            @ [GHC.Types.Char]
                            DirectoryServer.$fFromJSONFileMapping3
                            wild
                       Data.Aeson.Types.Internal.String txt
                       -> case txt of wild1 { Data.Text.Internal.Text dt dt1 dt2 ->
                          let {
                            a2 :: [GHC.Types.Char]
                            = let {
                                end :: GHC.Prim.Int# = GHC.Prim.+# dt1 dt2
                              } in
                              letrec {
                                $wunfold :: GHC.Prim.Int# -> [GHC.Types.Char]
                                  {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                                = \ (ww :: GHC.Prim.Int#) ->
                                  case GHC.Prim.tagToEnum#
                                         @ GHC.Types.Bool
                                         (GHC.Prim.>=# ww end) of wild2 {
                                    GHC.Types.False
                                    -> case GHC.Prim.indexWord16Array# dt ww of r# { DEFAULT ->
                                       case GHC.Prim.tagToEnum#
                                              @ GHC.Types.Bool
                                              (GHC.Prim.geWord# r# 55296##) of wild3 {
                                         GHC.Types.False
                                         -> GHC.Types.:
                                              @ GHC.Types.Char
                                              (GHC.Types.C# (GHC.Prim.chr# (GHC.Prim.word2Int# r#)))
                                              ($wunfold (GHC.Prim.+# ww 1#))
                                         GHC.Types.True
                                         -> case GHC.Prim.tagToEnum#
                                                   @ GHC.Types.Bool
                                                   (GHC.Prim.leWord# r# 56319##) of wild4 {
                                              GHC.Types.False
                                              -> GHC.Types.:
                                                   @ GHC.Types.Char
                                                   (GHC.Types.C#
                                                      (GHC.Prim.chr# (GHC.Prim.word2Int# r#)))
                                                   ($wunfold (GHC.Prim.+# ww 1#))
                                              GHC.Types.True
                                              -> case GHC.Prim.indexWord16Array#
                                                        dt
                                                        (GHC.Prim.+# ww 1#) of r#1 { DEFAULT ->
                                                 GHC.Types.:
                                                   @ GHC.Types.Char
                                                   (GHC.Types.C#
                                                      (GHC.Prim.chr#
                                                         (GHC.Prim.+#
                                                            (GHC.Prim.+#
                                                               (GHC.Prim.uncheckedIShiftL#
                                                                  (GHC.Prim.-#
                                                                     (GHC.Prim.word2Int# r#)
                                                                     55296#)
                                                                  10#)
                                                               (GHC.Prim.-#
                                                                  (GHC.Prim.word2Int# r#1)
                                                                  56320#))
                                                            65536#)))
                                                   ($wunfold (GHC.Prim.+# ww 2#)) } } } }
                                    GHC.Types.True -> GHC.Types.[] @ GHC.Types.Char }
                              } in
                              $wunfold dt1
                          } in
                          (\ @ (f1 :: * -> *)
                             @ r
                             (_path :: Data.Aeson.Types.Internal.JSONPath)
                             (_kf :: Data.Aeson.Types.Internal.Failure f1 r)
                             (ks :: Data.Aeson.Types.Internal.Success [GHC.Types.Char] f1 r) ->
                           ks a2)
                            `cast`
                          (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                    <[GHC.Types.Char]>_R)) } }
                 } in
                 (\ @ (f1 :: * -> *)
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f1 r)
                    (ks :: Data.Aeson.Types.Internal.Success
                             (GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1) f1 r) ->
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0] <[GHC.Types.Char]>_R)
                    @ f1
                    @ r
                    path
                    kf
                    (\ (a2 :: [GHC.Types.Char]) ->
                     ks
                       a2
                         `cast`
                       (Sym (GHC.Generics.N:K1[0]
                                 <GHC.Generics.R>_P <[GHC.Types.Char]>_R <a1>_P))))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                           <GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1>_R))) -}
c771cd509a28056a8a4039bba152b7d2
  $w$dGFromJSON1 ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.K1 GHC.Generics.R CommonServer.Identity a1)
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ @ a1 (w :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser CommonServer.Identity
                   = CommonServer.$fFromJSONIdentity_$cparseJSON w
                 } in
                 (\ @ (f1 :: * -> *)
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f1 r)
                    (ks :: Data.Aeson.Types.Internal.Success
                             (GHC.Generics.K1 GHC.Generics.R CommonServer.Identity a1) f1 r) ->
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0] <CommonServer.Identity>_R)
                    @ f1
                    @ r
                    path
                    kf
                    (\ (a2 :: CommonServer.Identity) ->
                     ks
                       a2
                         `cast`
                       (Sym (GHC.Generics.N:K1[0]
                                 <GHC.Generics.R>_P <CommonServer.Identity>_R <a1>_P))))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                           <GHC.Generics.K1 GHC.Generics.R CommonServer.Identity a1>_R))) -}
9c9f0823a6f5b1df1e7050fa85f062d5
  $w$dGToBSON ::
    GHC.Generics.M1
      GHC.Generics.S
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "fileName")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
      (GHC.Generics.Rec0 GHC.IO.FilePath)
      a1
    -> GHC.Generics.M1
         GHC.Generics.S
         ('GHC.Generics.MetaSel
            ('GHC.Base.Just "identity")
            'GHC.Generics.NoSourceUnpackedness
            'GHC.Generics.NoSourceStrictness
            'GHC.Generics.DecidedLazy)
         (GHC.Generics.Rec0 CommonServer.Identity)
         a1
    -> [Data.Bson.Field]
  {- Arity: 2, Strictness: <L,1*U><L,1*U(U,U,U)>, Inline: [0],
     Unfolding: (\ @ a1
                   (ww :: GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "fileName")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.Rec0 GHC.IO.FilePath)
                            a1)
                   (ww1 :: GHC.Generics.M1
                             GHC.Generics.S
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "identity")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 CommonServer.Identity)
                             a1) ->
                 GHC.Base.++
                   @ Data.Bson.Field
                   (GHC.Types.:
                      @ Data.Bson.Field
                      (case GHC.Magic.runRW#
                              @ 'GHC.Types.PtrRepLifted
                              @ Data.Text.Internal.Text
                              DirectoryServer.$fToBSONFileMapping4 of ds1 { (#,#) ipv ipv1 ->
                       case ipv1 of dt1 { Data.Text.Internal.Text ipv2 ipv3 ipv4 ->
                       Data.Bson.:=
                         dt1
                         (Data.Bson.String
                            (case GHC.Magic.runRW#
                                    @ 'GHC.Types.PtrRepLifted
                                    @ Data.Text.Internal.Text
                                    (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                     case GHC.Prim.newByteArray#
                                            @ GHC.Prim.RealWorld
                                            8#
                                            s1 of ds2 { (#,#) ipv7 ipv8 ->
                                     Data.Bson.$wouter
                                       (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv8)
                                       Data.Bson.$fValChar2
                                       ww
                                         `cast`
                                       (Trans
                                            (GHC.Generics.N:M1[0]
                                                 <GHC.Generics.S>_P
                                                 <'GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "fileName")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy>_P
                                                 <GHC.Generics.K1
                                                    GHC.Generics.R [GHC.Types.Char]>_R <a1>_N)
                                            (GHC.Generics.N:K1[0]
                                                 <GHC.Generics.R>_P <[GHC.Types.Char]>_R <a1>_P))
                                       0#
                                       ipv7 }) of ds2 { (#,#) ipv7 ipv8 ->
                             ipv8 })) } })
                      (GHC.Types.[] @ Data.Bson.Field))
                   (GHC.Types.:
                      @ Data.Bson.Field
                      (case GHC.Magic.runRW#
                              @ 'GHC.Types.PtrRepLifted
                              @ Data.Text.Internal.Text
                              DirectoryServer.$fToBSONFileMapping3 of ds1 { (#,#) ipv ipv1 ->
                       case ipv1 of dt1 { Data.Text.Internal.Text ipv2 ipv3 ipv4 ->
                       Data.Bson.:=
                         dt1
                         (Data.Bson.Doc
                            (Data.Bson.Generic.$w$cgenericToBSON1
                               @ (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "address")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Base.String)
                                  GHC.Generics.:*: (GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "port")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0 GHC.Base.String)
                                                    GHC.Generics.:*: GHC.Generics.S1
                                                                       ('GHC.Generics.MetaSel
                                                                          ('GHC.Base.Just
                                                                             "serverType")
                                                                          'GHC.Generics.NoSourceUnpackedness
                                                                          'GHC.Generics.NoSourceStrictness
                                                                          'GHC.Generics.DecidedLazy)
                                                                       (GHC.Generics.Rec0
                                                                          CommonServer.ServerType)))
                               @ ('GHC.Generics.MetaCons
                                    "Identity" 'GHC.Generics.PrefixI 'GHC.Types.True)
                               CommonServer.$fFromBSONResponse20
                                 `cast`
                               (Sym (Data.Bson.Generic.N:GToBSON[0]
                                         <GHC.Generics.M1
                                            GHC.Generics.S
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "address")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0 GHC.Base.String)
                                          GHC.Generics.:*: (GHC.Generics.S1
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "port")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.Rec0 GHC.Base.String)
                                                            GHC.Generics.:*: GHC.Generics.S1
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Base.Just
                                                                                     "serverType")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.Rec0
                                                                                  CommonServer.ServerType))>_N))
                               CommonServer.$fFromBSONResponse_$s$fConstructorMetaMetaCons
                               @ GHC.Prim.Any
                               1#
                               (case ww1
                                       `cast`
                                     (Trans
                                          (GHC.Generics.N:M1[0]
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "identity")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R CommonServer.Identity>_R <a1>_N)
                                          (GHC.Generics.N:K1[0]
                                               <GHC.Generics.R>_P
                                               <CommonServer.Identity>_R
                                               <a1>_P)) of wild { CommonServer.Identity g1 g2 g3 ->
                                (GHC.Generics.:*:
                                   @ (GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Base.Just "address")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
                                   @ (GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Base.Just "port")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                      GHC.Generics.:*: GHC.Generics.M1
                                                         GHC.Generics.S
                                                         ('GHC.Generics.MetaSel
                                                            ('GHC.Base.Just "serverType")
                                                            'GHC.Generics.NoSourceUnpackedness
                                                            'GHC.Generics.NoSourceStrictness
                                                            'GHC.Generics.DecidedLazy)
                                                         (GHC.Generics.K1
                                                            GHC.Generics.R CommonServer.ServerType))
                                   @ GHC.Prim.Any
                                   g1
                                     `cast`
                                   (Trans
                                        (Sym (GHC.Generics.N:K1[0]
                                                  <GHC.Generics.R>_P
                                                  <GHC.Base.String>_R
                                                  <GHC.Prim.Any>_P))
                                        (Sym (GHC.Generics.N:M1[0]
                                                  <GHC.Generics.S>_P
                                                  <'GHC.Generics.MetaSel
                                                     ('GHC.Base.Just "address")
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy>_P
                                                  <GHC.Generics.K1
                                                     GHC.Generics.R
                                                     GHC.Base.String>_R) <GHC.Prim.Any>_N))
                                   (GHC.Generics.:*:
                                      @ (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "port")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
                                      @ (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "serverType")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1 GHC.Generics.R CommonServer.ServerType))
                                      @ GHC.Prim.Any
                                      g2
                                        `cast`
                                      (Trans
                                           (Sym (GHC.Generics.N:K1[0]
                                                     <GHC.Generics.R>_P
                                                     <GHC.Base.String>_R
                                                     <GHC.Prim.Any>_P))
                                           (Sym (GHC.Generics.N:M1[0]
                                                     <GHC.Generics.S>_P
                                                     <'GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "port")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy>_P
                                                     <GHC.Generics.K1
                                                        GHC.Generics.R
                                                        GHC.Base.String>_R) <GHC.Prim.Any>_N))
                                      g3
                                        `cast`
                                      (Trans
                                           (Sym (GHC.Generics.N:K1[0]
                                                     <GHC.Generics.R>_P
                                                     <CommonServer.ServerType>_R
                                                     <GHC.Prim.Any>_P))
                                           (Sym (GHC.Generics.N:M1[0]
                                                     <GHC.Generics.S>_P
                                                     <'GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "serverType")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy>_P
                                                     <GHC.Generics.K1
                                                        GHC.Generics.R
                                                        CommonServer.ServerType>_R) <GHC.Prim.Any>_N))))
                                  `cast`
                                (Sym (GHC.Generics.N:M1[0]
                                          <GHC.Generics.C>_P
                                          <'GHC.Generics.MetaCons
                                             "Identity" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                          <GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "address")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                           GHC.Generics.:*: (GHC.Generics.M1
                                                               GHC.Generics.S
                                                               ('GHC.Generics.MetaSel
                                                                  ('GHC.Base.Just "port")
                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                  'GHC.Generics.NoSourceStrictness
                                                                  'GHC.Generics.DecidedLazy)
                                                               (GHC.Generics.K1
                                                                  GHC.Generics.R GHC.Base.String)
                                                             GHC.Generics.:*: GHC.Generics.M1
                                                                                GHC.Generics.S
                                                                                ('GHC.Generics.MetaSel
                                                                                   ('GHC.Base.Just
                                                                                      "serverType")
                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                   'GHC.Generics.DecidedLazy)
                                                                                (GHC.Generics.K1
                                                                                   GHC.Generics.R
                                                                                   CommonServer.ServerType))>_R) <GHC.Prim.Any>_N) }))) } })
                      (GHC.Types.[] @ Data.Bson.Field))) -}
ff81e688eac312a4cc3750c8e89960e7
  $w$dGToJSON ::
    GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1
    -> (# Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0],
     Unfolding: (\ @ a1
                   (w :: GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1) ->
                 case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.newByteArray#
                                @ GHC.Prim.RealWorld
                                8#
                                s1 of ds1 { (#,#) ipv ipv1 ->
                         DirectoryServer.$wouter
                           (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                           DirectoryServer.$fToJSONFileMapping4
                           w `cast`
                           (GHC.Generics.N:K1[0]
                                <GHC.Generics.R>_P <[GHC.Types.Char]>_R <a1>_P)
                           0#
                           ipv }) of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of dt { Data.Text.Internal.Text ipv2 ipv3 ipv4 ->
                 (# dt #) } }) -}
fd63e56ef1d0d91c88dedd897e02f2c5
  $wgo ::
    [[Data.Bson.Field]] -> (# GHC.IO.FilePath, CommonServer.Identity #)
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0] -}
ba9f29c5f99829774f0b53ca1d1d7dc4
  $wouter ::
    Data.Text.Array.MArray GHC.Prim.RealWorld
    -> GHC.Types.Int
    -> [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 5, Strictness: <L,U(U)><L,U(U)><S,1*U><S,U><S,U>,
     Inline: [0] -}
fedcee52520b8702af78f71ba2b57c4b
  data FileMapping
    = FileMapping {fileName :: GHC.IO.FilePath,
                   identity :: CommonServer.Identity}
fedcee52520b8702af78f71ba2b57c4b
  axiom Rep_FileMapping::
      GHC.Generics.Rep DirectoryServer.FileMapping
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "FileMapping"
               "DirectoryServer"
               "Gluon-0.1.0.0-2zM8ehVFg6FFhvYw0f6srV"
               'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "FileMapping" 'GHC.Generics.PrefixI 'GHC.Types.True)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "fileName")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 GHC.IO.FilePath)
                GHC.Generics.:*: GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "identity")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 CommonServer.Identity)))
9cbef1bd7f2ff2a1d6e0aa14fcf67a79
  closeFile ::
    CommonServer.File
    -> CommonServerApi.ApiHandler CommonServer.Response
  {- Arity: 2, Strictness: <L,U(U,1*U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.closeFile1
                  `cast`
                (<CommonServer.File>_R
                 ->_R Trans
                          (Sym (GHC.Types.N:IO[0]
                                    <Data.Either.Either
                                       Servant.Server.Internal.ServantErr.ServantErr
                                       CommonServer.Response>_R))
                          (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                    <Servant.Server.Internal.ServantErr.ServantErr>_N
                                    <GHC.Types.IO>_R
                                    <CommonServer.Response>_N))) -}
0b0d531f38558a0fb5dbdfa26f540a3f
  closeFile1 ::
    CommonServer.File
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            Servant.Server.Internal.ServantErr.ServantErr
            CommonServer.Response #)
  {- Arity: 2, Strictness: <L,U(U,1*U)><S,U>,
     Unfolding: (\ (f :: CommonServer.File)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case CommonServer.logConnection1
                        (GHC.Types.[] @ GHC.Types.Char)
                        DirectoryServer.closeFile8
                        DirectoryServer.closeFile14
                        s of ds1 { (#,#) ipv ipv1 ->
                 case DirectoryServer.closeFile9
                        (CommonServer.fileName f)
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case DirectoryServer.closeFile2
                        f
                        (case ipv3 of wild { DirectoryServer.FileMapping ds ds3 -> ds3 })
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        CommonServer.logHeading_t
                        GHC.Types.True
                        ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                 (# ipv6,
                    Data.Either.Right
                      @ Servant.Server.Internal.ServantErr.ServantErr
                      @ CommonServer.Response
                      ipv5 #) } } } }) -}
0edae9cf56f88dcb45d869ed843352f0
  closeFile10 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "FileMappingDb"#) -}
cb9f383ff61e38074e68bae565e6d848
  closeFile11 :: Data.Bson.Label
  {- Unfolding: (Data.Text.Show.unpackCString# "_id"#) -}
67250faf63dc0a0d8c9af2e8a7ac9099
  closeFile12 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Find"#) -}
1ad0270d677574917ba8c33c425056a5
  closeFile13 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "FileMappingDb"#) -}
227d1cd784e0d4ac3a9f00c3355b825e
  closeFile14 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "POST close"#) -}
ec742c14a029c8b573907583a27c817b
  closeFile2 ::
    CommonServer.File
    -> CommonServer.Identity
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, CommonServer.Response #)
  {- Arity: 3, Strictness: <L,1*U(1*U,1*U)><L,U(U,U,U)><S,U>,
     Unfolding: (\ (f :: CommonServer.File)
                   (i :: CommonServer.Identity)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case CommonServer.logConnection1
                        DirectoryServer.closeFile8
                        DirectoryServer.closeFile7
                        DirectoryServer.closeFile6
                        s of ds1 { (#,#) ipv ipv1 ->
                 case Network.HTTP.Client.Manager.$wnewManager
                        Network.HTTP.Client.Manager.defaultManagerSettings18
                        Network.HTTP.Client.Manager.defaultManagerSettings15
                          `cast`
                        (Sym (GHC.Types.N:IO[0]
                                  <GHC.Base.Maybe Network.Socket.Types.HostAddress
                                   -> GHC.Base.String
                                   -> GHC.Types.Int
                                   -> GHC.Types.IO Network.HTTP.Client.Types.Connection>_R))
                        Network.HTTP.Client.Manager.defaultManagerSettings14
                          `cast`
                        (Sym (GHC.Types.N:IO[0]
                                  <GHC.Base.Maybe Network.Socket.Types.HostAddress
                                   -> GHC.Base.String
                                   -> GHC.Types.Int
                                   -> GHC.Types.IO Network.HTTP.Client.Types.Connection>_R))
                        Network.HTTP.Client.Manager.defaultManagerSettings11
                          `cast`
                        (Sym (GHC.Types.N:IO[0]
                                  <Data.ByteString.Internal.ByteString
                                   -> (Network.HTTP.Client.Types.Connection -> GHC.Types.IO ())
                                   -> GHC.Base.String
                                   -> GHC.Base.Maybe Network.Socket.Types.HostAddress
                                   -> GHC.Base.String
                                   -> GHC.Types.Int
                                   -> GHC.Types.IO Network.HTTP.Client.Types.Connection>_R))
                        Network.HTTP.Client.Manager.defaultManagerSettings9
                        Network.HTTP.Client.Manager.defaultManagerSettings8
                        Network.HTTP.Client.Manager.defaultManagerSettings6
                          `cast`
                        (forall (a :: <*>_N).
                         <GHC.Types.IO a>_R ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                        Network.HTTP.Client.Manager.defaultManagerSettings5
                        (GHC.Base.returnIO1 @ Network.HTTP.Client.Types.Request)
                          `cast`
                        (<Network.HTTP.Client.Types.Request>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Network.HTTP.Client.Types.Request>_R))
                        Network.HTTP.Client.Manager.defaultManagerSettings1
                          `cast`
                        (Trans
                             (<GHC.Types.Bool>_R
                              ->_R Sym (GHC.Types.N:IO[0]
                                            <Network.HTTP.Client.Types.Request
                                             -> Network.HTTP.Client.Types.Request>_R))
                             (Sym (Network.HTTP.Client.Types.N:ProxyOverride[0])))
                        Network.HTTP.Client.Manager.defaultManagerSettings1
                          `cast`
                        (Trans
                             (<GHC.Types.Bool>_R
                              ->_R Sym (GHC.Types.N:IO[0]
                                            <Network.HTTP.Client.Types.Request
                                             -> Network.HTTP.Client.Types.Request>_R))
                             (Sym (Network.HTTP.Client.Types.N:ProxyOverride[0])))
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ((CommonServerApi.fileClientUpload1 f)
                         `cast`
                       (Trans
                            (Sub (Servant.Client.D:R:ClientTYPEVerb2[0]
                                      <Network.HTTP.Types.Method.StdMethod>_N
                                      <CommonServer.Response>_N
                                      <'Network.HTTP.Types.Method.POST>_N
                                      <'[Servant.API.ContentTypes.JSON]>_N
                                      <200>_N))
                            (Trans
                                 (Servant.Common.Req.N:ClientM[0] <CommonServer.Response>_N)
                                 (Control.Monad.Trans.Reader.N:ReaderT[0]
                                      <*>_N
                                      <Servant.Common.Req.ClientEnv>_R
                                      <Control.Monad.Trans.Except.ExceptT
                                         Servant.Common.Req.ServantError GHC.Types.IO>_R
                                      <CommonServer.Response>_N)))
                         (Servant.Common.Req.ClientEnv
                            ipv3
                            (Servant.Common.BaseUrl.BaseUrl
                               Servant.Common.BaseUrl.Http
                               (CommonServer.address i)
                               (case Text.Read.readEither6
                                       @ GHC.Types.Int
                                       (Text.ParserCombinators.ReadP.run
                                          @ GHC.Types.Int
                                          DirectoryServer.closeFile5
                                          (case i of wild { CommonServer.Identity ds3 ds4 ds5 ->
                                           ds4 })) of wild {
                                  [] -> DirectoryServer.closeFile4
                                  : x ds
                                  -> case ds of wild1 {
                                       [] -> x : ipv4 ipv5 -> DirectoryServer.closeFile3 } })
                               (GHC.Types.[] @ GHC.Types.Char))))
                        `cast`
                      (Trans
                           (Control.Monad.Trans.Except.N:ExceptT[0]
                                <Servant.Common.Req.ServantError>_N
                                <GHC.Types.IO>_R
                                <CommonServer.Response>_N)
                           (GHC.Types.N:IO[0]
                                <Data.Either.Either
                                   Servant.Common.Req.ServantError CommonServer.Response>_R))
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case ipv5 of wild {
                   Data.Either.Left err
                   -> (# ipv4,
                         CommonServer.Response
                           CommonServer.FileUploadError
                           i
                           (GHC.Types.[] @ GHC.Types.Char) #)
                   Data.Either.Right response' -> (# ipv4, response' #) } } } }) -}
95ccedaacd43839705848d9fbd9a03cb
  closeFile3 :: GHC.Types.Int
  {- Strictness: x -}
d3c060a1493a7991edec0392ef669f66
  closeFile4 :: GHC.Types.Int
  {- Strictness: x -}
21efba512ed412ba53bf39e4968d898e
  closeFile5 :: Text.ParserCombinators.ReadP.P GHC.Types.Int
  {- Unfolding: ((GHC.Read.$fReadInt3
                    GHC.Read.$fReadInt_$sconvertInt
                    Text.ParserCombinators.ReadPrec.minPrec)
                   `cast`
                 (Text.ParserCombinators.ReadP.N:ReadP[0] <GHC.Types.Int>_R)
                   @ GHC.Types.Int
                   (Text.Read.readEither5 @ GHC.Types.Int)) -}
ffb4f670844abab5b536ae921904b502
  closeFile6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "POST upload"#) -}
38999334e274d90de342226949e4f050
  closeFile7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "FileServer"#) -}
2d808293203ec0287b1c4a1208270091
  closeFile8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "DirectoryServer"#) -}
78adc77ec8687439331041ce2c849b43
  closeFile9 ::
    GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          DirectoryServer.FileMapping #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (key :: GHC.Base.String)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case CommonServer.logDatabase1
                        DirectoryServer.closeFile8
                        DirectoryServer.closeFile13
                        DirectoryServer.closeFile12
                        key
                        s of ds1 { (#,#) ipv ipv1 ->
                 case Database.MongoDB.Connection.globalConnectTimeout
                        `cast`
                      (GHC.IORef.N:IORef[0] <Database.MongoDB.Connection.Secs>_N) of wild { GHC.STRef.STRef var# ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ Database.MongoDB.Connection.Secs
                        var#
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv3 of ww { GHC.Types.D# ww1 ->
                 case Database.MongoDB.Connection.$wconnect'
                        ww1
                        MongoDbConnector.connectToDatabase3
                        Database.MongoDB.Connection.defaultPort
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 let {
                   r1 :: Database.MongoDB.Query.MongoContext {- Strictness: m -}
                   = Database.MongoDB.Query.MongoContext
                       ipv5
                       Database.MongoDB.Query.master
                       MongoDbConnector.connectToDatabase2
                 } in
                 case (Database.MongoDB.Query.$wfind
                         @ GHC.Types.IO
                         Control.Monad.IO.Class.$fMonadIOIO
                         Control.Monad.Trans.Control.$fMonadBaseControlIOIO
                         (GHC.Types.[] @ Database.MongoDB.Internal.Protocol.QueryOption)
                         (Database.MongoDB.Query.Select
                            (GHC.Types.:
                               @ Data.Bson.Field
                               (case DirectoryServer.closeFile11 of dt { Data.Text.Internal.Text ipv6 ipv7 ipv8 ->
                                Data.Bson.:= dt (Data.Bson.$fValChar_$cvalList key) })
                               (GHC.Types.[] @ Data.Bson.Field))
                            DirectoryServer.closeFile10)
                         (GHC.Types.[] @ Data.Bson.Field)
                         Database.MongoDB.Query.$fSelectQuery1
                         Database.MongoDB.Query.$fSelectQuery1
                         (GHC.Types.[] @ Data.Bson.Field)
                         GHC.Types.False
                         Database.MongoDB.Query.$fSelectQuery1
                         (GHC.Types.[] @ Data.Bson.Field)
                         r1)
                        `cast`
                      (GHC.Types.N:IO[0] <Database.MongoDB.Query.Cursor>_R)
                        ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                 case ((MongoDbConnector.drainCursor_drainCursor'
                          ipv7
                          (GHC.Types.[] @ Data.Bson.Document))
                         `cast`
                       (Control.Monad.Trans.Reader.N:ReaderT[0]
                            <*>_N
                            <Database.MongoDB.Query.MongoContext>_R
                            <GHC.Types.IO>_R
                            <[Data.Bson.Document]>_N)
                         r1)
                        `cast`
                      (GHC.Types.N:IO[0] <[Data.Bson.Document]>_R)
                        ipv6 of ds5 { (#,#) ipv8 ipv9 ->
                 (# ipv8,
                    case DirectoryServer.$wgo ipv9 of ww2 { (#,#) ww3 ww4 ->
                    DirectoryServer.FileMapping ww3 ww4 } #) } } } } } } }) -}
ad549dc6173c364e1e454c2328b1297d
  deleteDatabases :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.deleteDatabases1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <()>_R)) -}
411495c7be9c1abad406b6c79c2832c0
  deleteDatabases1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case CommonServer.logAction1
                        DirectoryServer.closeFile8
                        DirectoryServer.deleteDatabases7
                        DirectoryServer.deleteDatabases6
                        s of ds1 { (#,#) ipv ipv1 ->
                 case Database.MongoDB.Connection.globalConnectTimeout
                        `cast`
                      (GHC.IORef.N:IORef[0] <Database.MongoDB.Connection.Secs>_N) of wild { GHC.STRef.STRef var# ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ Database.MongoDB.Connection.Secs
                        var#
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv3 of ww { GHC.Types.D# ww1 ->
                 case Database.MongoDB.Connection.$wconnect'
                        ww1
                        MongoDbConnector.connectToDatabase3
                        Database.MongoDB.Connection.defaultPort
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 let {
                   r1 :: Database.MongoDB.Query.MongoContext {- Strictness: m -}
                   = Database.MongoDB.Query.MongoContext
                       ipv5
                       Database.MongoDB.Query.master
                       MongoDbConnector.connectToDatabase2
                 } in
                 case ((DirectoryServer.deleteDatabases5
                          DirectoryServer.closeFile10
                          DirectoryServer.deleteDatabases3)
                         `cast`
                       (Control.Monad.Trans.Reader.N:ReaderT[0]
                            <*>_N
                            <Database.MongoDB.Query.MongoContext>_R
                            <GHC.Types.IO>_R
                            <Database.MongoDB.Query.DeleteResult>_N)
                         r1)
                        `cast`
                      (GHC.Types.N:IO[0] <Database.MongoDB.Query.DeleteResult>_R)
                        ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                 case ((DirectoryServer.deleteDatabases5
                          DirectoryServer.deleteDatabases2
                          DirectoryServer.deleteDatabases3)
                         `cast`
                       (Control.Monad.Trans.Reader.N:ReaderT[0]
                            <*>_N
                            <Database.MongoDB.Query.MongoContext>_R
                            <GHC.Types.IO>_R
                            <Database.MongoDB.Query.DeleteResult>_N)
                         r1)
                        `cast`
                      (GHC.Types.N:IO[0] <Database.MongoDB.Query.DeleteResult>_R)
                        ipv6 of ds5 { (#,#) ipv8 ipv9 ->
                 (# ipv8, GHC.Tuple.() #) } } } } } } }) -}
f9098a23f93300f9d036a7df03519cf7
  deleteDatabases2 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "FileServerDb"#) -}
88b1ced9f6ded8540c38c06b40897401
  deleteDatabases3 ::
    [(Database.MongoDB.Query.Selector,
      [Database.MongoDB.Internal.Protocol.DeleteOption])]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (Database.MongoDB.Query.Selector,
                      [Database.MongoDB.Internal.Protocol.DeleteOption])
                   DirectoryServer.deleteDatabases4
                   (GHC.Types.[]
                      @ (Database.MongoDB.Query.Selector,
                         [Database.MongoDB.Internal.Protocol.DeleteOption]))) -}
3f6441a7773b418ccf942b123e1ab474
  deleteDatabases4 ::
    (Database.MongoDB.Query.Selector,
     [Database.MongoDB.Internal.Protocol.DeleteOption])
  {- HasNoCafRefs,
     Unfolding: ((GHC.Types.[] @ Data.Bson.Field,
                  GHC.Types.[] @ Database.MongoDB.Internal.Protocol.DeleteOption)) -}
892083ffc69c24894574ef4b96f1a72d
  deleteDatabases5 ::
    Database.MongoDB.Query.Collection
    -> [(Database.MongoDB.Query.Selector,
         [Database.MongoDB.Internal.Protocol.DeleteOption])]
    -> Database.MongoDB.Query.Action
         GHC.Types.IO Database.MongoDB.Query.DeleteResult
  {- Unfolding: (Database.MongoDB.Query.delete'
                   @ GHC.Types.IO
                   Control.Monad.IO.Class.$fMonadIOIO
                   GHC.Types.True) -}
797681753393a603de6627aafb64e31a
  deleteDatabases6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "FileMappingDb, FileServerDb"#) -}
4e5d269696469821518ee89343cd2b3d
  deleteDatabases7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Delete"#) -}
6c1d4154ec35e7f1f8b2f26ad9e3ecec
  directoryApp :: Network.Wai.Application
  {- Arity: 2,
     Unfolding: (Servant.Server.Internal.RoutingApplication.toApplication
                   DirectoryServer.directoryApp1) -}
82971be080da8a82d0c0ff4c749e541d
  directoryApp1 ::
    Network.Wai.Internal.Request
    -> (Servant.Server.Internal.RoutingApplication.RouteResult
          Network.Wai.Internal.Response
        -> GHC.Types.IO Network.Wai.Internal.ResponseReceived)
    -> GHC.Types.IO Network.Wai.Internal.ResponseReceived
  {- Arity: 2,
     Strictness: <L,U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (eta :: Network.Wai.Internal.Request)
                   (eta1 :: Servant.Server.Internal.RoutingApplication.RouteResult
                              Network.Wai.Internal.Response
                            -> GHC.Types.IO Network.Wai.Internal.ResponseReceived)[OneShot] ->
                 Servant.Server.Internal.Router.runRouterEnv
                   @ ()
                   DirectoryServer.directoryApp_r
                   GHC.Tuple.()
                   eta
                   eta1) -}
1daf03fc0a891a678ceb5e941f3b64d9
  directoryApp10 ::
    CommonServer.Identity
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            Servant.Server.Internal.ServantErr.ServantErr
            CommonServer.Response #)
  {- Arity: 2, Strictness: <L,U(U,U,U)><S,U>,
     Unfolding: (\ (i :: CommonServer.Identity)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case CommonServer.logConnection1
                        (GHC.Types.[] @ GHC.Types.Char)
                        DirectoryServer.closeFile8
                        DirectoryServer.directoryApp17
                        s of ds1 { (#,#) ipv ipv1 ->
                 case DirectoryServer.directoryApp13
                        i
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        CommonServer.logHeading_t
                        GHC.Types.True
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 (# ipv4, DirectoryServer.directoryApp11 #) } } }) -}
3396108e1d43f795baf624b5a62ad84b
  directoryApp11 ::
    Data.Either.Either
      Servant.Server.Internal.ServantErr.ServantErr CommonServer.Response
  {- Unfolding: (Data.Either.Right
                   @ Servant.Server.Internal.ServantErr.ServantErr
                   @ CommonServer.Response
                   DirectoryServer.directoryApp12) -}
dc5c11e4dc10017dee379a4a1200f53a
  directoryApp12 :: CommonServer.Response
  {- Strictness: m,
     Unfolding: (CommonServer.Response
                   CommonServer.DirectoryJoinSuccess
                   CommonServer.directoryServerIdentity
                   (GHC.Types.[] @ GHC.Types.Char)) -}
fb71a73b2e463e0000bc45c98d8f5542
  directoryApp13 ::
    CommonServer.Identity
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,U(U,U,U)><S,U>,
     Unfolding: (\ (i :: CommonServer.Identity)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 let {
                   key :: GHC.Base.String
                   = case i of ww { CommonServer.Identity ww1 ww2 ww3 ->
                     GHC.Base.++
                       @ GHC.Types.Char
                       ww1
                       (GHC.CString.unpackAppendCString# "_"# ww2) }
                 } in
                 case CommonServer.logDatabase1
                        DirectoryServer.closeFile8
                        DirectoryServer.directoryApp16
                        DirectoryServer.directoryApp15
                        key
                        eta of ds1 { (#,#) ipv ipv1 ->
                 case Database.MongoDB.Connection.globalConnectTimeout
                        `cast`
                      (GHC.IORef.N:IORef[0] <Database.MongoDB.Connection.Secs>_N) of wild { GHC.STRef.STRef var# ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ Database.MongoDB.Connection.Secs
                        var#
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv3 of ww { GHC.Types.D# ww1 ->
                 case Database.MongoDB.Connection.$wconnect'
                        ww1
                        MongoDbConnector.connectToDatabase3
                        Database.MongoDB.Connection.defaultPort
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case ((DirectoryServer.directoryApp14
                          DirectoryServer.deleteDatabases2
                          (GHC.Types.:
                             @ (Database.MongoDB.Query.Selector, Data.Bson.Document,
                                [Database.MongoDB.Internal.Protocol.UpdateOption])
                             (GHC.Types.:
                                @ Data.Bson.Field
                                (case DirectoryServer.closeFile11 of dt { Data.Text.Internal.Text ipv6 ipv7 ipv8 ->
                                 Data.Bson.:= dt (Data.Bson.$fValChar_$cvalList key) })
                                (GHC.Types.[] @ Data.Bson.Field),
                              Data.Bson.Generic.$w$cgenericToBSON1
                                @ (GHC.Generics.S1
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "address")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.Rec0 GHC.Base.String)
                                   GHC.Generics.:*: (GHC.Generics.S1
                                                       ('GHC.Generics.MetaSel
                                                          ('GHC.Base.Just "port")
                                                          'GHC.Generics.NoSourceUnpackedness
                                                          'GHC.Generics.NoSourceStrictness
                                                          'GHC.Generics.DecidedLazy)
                                                       (GHC.Generics.Rec0 GHC.Base.String)
                                                     GHC.Generics.:*: GHC.Generics.S1
                                                                        ('GHC.Generics.MetaSel
                                                                           ('GHC.Base.Just
                                                                              "serverType")
                                                                           'GHC.Generics.NoSourceUnpackedness
                                                                           'GHC.Generics.NoSourceStrictness
                                                                           'GHC.Generics.DecidedLazy)
                                                                        (GHC.Generics.Rec0
                                                                           CommonServer.ServerType)))
                                @ ('GHC.Generics.MetaCons
                                     "Identity" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                CommonServer.$fFromBSONResponse20
                                  `cast`
                                (Sym (Data.Bson.Generic.N:GToBSON[0]
                                          <GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "address")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.Rec0 GHC.Base.String)
                                           GHC.Generics.:*: (GHC.Generics.S1
                                                               ('GHC.Generics.MetaSel
                                                                  ('GHC.Base.Just "port")
                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                  'GHC.Generics.NoSourceStrictness
                                                                  'GHC.Generics.DecidedLazy)
                                                               (GHC.Generics.Rec0 GHC.Base.String)
                                                             GHC.Generics.:*: GHC.Generics.S1
                                                                                ('GHC.Generics.MetaSel
                                                                                   ('GHC.Base.Just
                                                                                      "serverType")
                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                   'GHC.Generics.DecidedLazy)
                                                                                (GHC.Generics.Rec0
                                                                                   CommonServer.ServerType))>_N))
                                CommonServer.$fFromBSONResponse_$s$fConstructorMetaMetaCons
                                @ GHC.Prim.Any
                                1#
                                (case i of wild1 { CommonServer.Identity g1 g2 g3 ->
                                 (GHC.Generics.:*:
                                    @ (GHC.Generics.M1
                                         GHC.Generics.S
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "address")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
                                    @ (GHC.Generics.M1
                                         GHC.Generics.S
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "port")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                       GHC.Generics.:*: GHC.Generics.M1
                                                          GHC.Generics.S
                                                          ('GHC.Generics.MetaSel
                                                             ('GHC.Base.Just "serverType")
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.K1
                                                             GHC.Generics.R
                                                             CommonServer.ServerType))
                                    @ GHC.Prim.Any
                                    g1
                                      `cast`
                                    (Trans
                                         (Sym (GHC.Generics.N:K1[0]
                                                   <GHC.Generics.R>_P
                                                   <GHC.Base.String>_R
                                                   <GHC.Prim.Any>_P))
                                         (Sym (GHC.Generics.N:M1[0]
                                                   <GHC.Generics.S>_P
                                                   <'GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "address")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy>_P
                                                   <GHC.Generics.K1
                                                      GHC.Generics.R
                                                      GHC.Base.String>_R) <GHC.Prim.Any>_N))
                                    (GHC.Generics.:*:
                                       @ (GHC.Generics.M1
                                            GHC.Generics.S
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "port")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
                                       @ (GHC.Generics.M1
                                            GHC.Generics.S
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "serverType")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.K1
                                               GHC.Generics.R CommonServer.ServerType))
                                       @ GHC.Prim.Any
                                       g2
                                         `cast`
                                       (Trans
                                            (Sym (GHC.Generics.N:K1[0]
                                                      <GHC.Generics.R>_P
                                                      <GHC.Base.String>_R
                                                      <GHC.Prim.Any>_P))
                                            (Sym (GHC.Generics.N:M1[0]
                                                      <GHC.Generics.S>_P
                                                      <'GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "port")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy>_P
                                                      <GHC.Generics.K1
                                                         GHC.Generics.R
                                                         GHC.Base.String>_R) <GHC.Prim.Any>_N))
                                       g3
                                         `cast`
                                       (Trans
                                            (Sym (GHC.Generics.N:K1[0]
                                                      <GHC.Generics.R>_P
                                                      <CommonServer.ServerType>_R
                                                      <GHC.Prim.Any>_P))
                                            (Sym (GHC.Generics.N:M1[0]
                                                      <GHC.Generics.S>_P
                                                      <'GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "serverType")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy>_P
                                                      <GHC.Generics.K1
                                                         GHC.Generics.R
                                                         CommonServer.ServerType>_R) <GHC.Prim.Any>_N))))
                                   `cast`
                                 (Sym (GHC.Generics.N:M1[0]
                                           <GHC.Generics.C>_P
                                           <'GHC.Generics.MetaCons
                                              "Identity" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                           <GHC.Generics.M1
                                              GHC.Generics.S
                                              ('GHC.Generics.MetaSel
                                                 ('GHC.Base.Just "address")
                                                 'GHC.Generics.NoSourceUnpackedness
                                                 'GHC.Generics.NoSourceStrictness
                                                 'GHC.Generics.DecidedLazy)
                                              (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                            GHC.Generics.:*: (GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "port")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R GHC.Base.String)
                                                              GHC.Generics.:*: GHC.Generics.M1
                                                                                 GHC.Generics.S
                                                                                 ('GHC.Generics.MetaSel
                                                                                    ('GHC.Base.Just
                                                                                       "serverType")
                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                    'GHC.Generics.DecidedLazy)
                                                                                 (GHC.Generics.K1
                                                                                    GHC.Generics.R
                                                                                    CommonServer.ServerType))>_R) <GHC.Prim.Any>_N) }),
                              Database.MongoDB.Query.repsert1)
                             (GHC.Types.[]
                                @ (Database.MongoDB.Query.Selector, Data.Bson.Document,
                                   [Database.MongoDB.Internal.Protocol.UpdateOption]))))
                         `cast`
                       (Control.Monad.Trans.Reader.N:ReaderT[0]
                            <*>_N
                            <Database.MongoDB.Query.MongoContext>_R
                            <GHC.Types.IO>_R
                            <Database.MongoDB.Query.UpdateResult>_N)
                         (Database.MongoDB.Query.MongoContext
                            ipv5
                            Database.MongoDB.Query.master
                            MongoDbConnector.connectToDatabase2))
                        `cast`
                      (GHC.Types.N:IO[0] <Database.MongoDB.Query.UpdateResult>_R)
                        ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                 (# ipv6, GHC.Tuple.() #) } } } } } }) -}
6e6f0f4afc45b16aa1233cb793d0bda8
  directoryApp14 ::
    Database.MongoDB.Query.Collection
    -> [(Database.MongoDB.Query.Selector, Data.Bson.Document,
         [Database.MongoDB.Internal.Protocol.UpdateOption])]
    -> Database.MongoDB.Query.Action
         GHC.Types.IO Database.MongoDB.Query.UpdateResult
  {- Unfolding: (Database.MongoDB.Query.update'
                   @ GHC.Types.IO
                   Control.Monad.IO.Class.$fMonadIOIO
                   GHC.Types.True) -}
8ba3c9077e3f46ee9c9b62b3409de398
  directoryApp15 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Upsert"#) -}
661f304518b81a2dedf7360d2ba5bd74
  directoryApp16 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "FileServerDb"#) -}
8e9f6d4c3b1d3ad269cfc428180a85e6
  directoryApp17 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "POST join"#) -}
49a3ebea8e5754987c2b14681949e356
  directoryApp18 ::
    Data.Proxy.Proxy
      (Servant.API.Verbs.Verb
         'Network.HTTP.Types.Method.POST
         200
         '[Servant.API.ContentTypes.JSON]
         CommonServer.Response)
    -> Servant.Server.Internal.Context.Context '[]
    -> Servant.Server.Internal.RoutingApplication.Delayed
         env
         (Servant.Server.Internal.Server
            (Servant.API.Verbs.Verb
               'Network.HTTP.Types.Method.POST
               200
               '[Servant.API.ContentTypes.JSON]
               CommonServer.Response))
    -> Servant.Server.Internal.Router.Router env
  {- Arity: 2, Strictness: <S,1*H><L,A>,
     Unfolding: InlineRule (2, True, False)
                (\ @ env
                   (w3 :: Data.Proxy.Proxy
                            (Servant.API.Verbs.Verb
                               'Network.HTTP.Types.Method.POST
                               200
                               '[Servant.API.ContentTypes.JSON]
                               CommonServer.Response))
                   (w4 :: Servant.Server.Internal.Context.Context '[]) ->
                 case w3 of w5 { Data.Proxy.Proxy ->
                 Servant.Server.Internal.$w$croute8
                   @ Network.HTTP.Types.Method.StdMethod
                   @ '[Servant.API.ContentTypes.JSON]
                   @ CommonServer.Response
                   @ 'Network.HTTP.Types.Method.POST
                   @ 200
                   @ '[]
                   DirectoryServer.$s$fAllCTRender:a
                   Servant.API.Verbs.$fReflectMethodStdMethodPOST_$creflectMethod
                     `cast`
                   (Sym (Servant.API.Verbs.N:ReflectMethod[0]
                             <Network.HTTP.Types.Method.StdMethod>_N
                             <'Network.HTTP.Types.Method.POST>_N))
                   DirectoryServer.directoryApp19
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SNat[0] <200>_P))
                        (Sym (GHC.TypeLits.N:KnownNat[0]) <200>_N))
                   @ env
                   (Data.Proxy.Proxy
                      @ *
                      @ (Servant.API.Verbs.Verb
                           'Network.HTTP.Types.Method.POST
                           200
                           '[Servant.API.ContentTypes.JSON]
                           CommonServer.Response)) }) -}
6486fd1c68734425227d2e31cda6a5ab
  directoryApp19 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (200) -}
f7e97ab75d51c4d1248b296ea40475e5
  directoryApp2 ::
    Servant.Server.Internal.Router.Router'
      () Servant.Server.Internal.RoutingApplication.RoutingApplication
  {- Unfolding: (Servant.Server.Internal.Router.choice
                   @ ()
                   @ Servant.Server.Internal.RoutingApplication.RoutingApplication
                   DirectoryServer.directoryApp32
                   DirectoryServer.directoryApp3) -}
54b5bca2c750c40d3d289836141dd0da
  directoryApp20 ::
    Data.Proxy.Proxy '[Servant.API.ContentTypes.JSON]
    -> Data.ByteString.Lazy.Internal.ByteString
    -> Data.ByteString.Lazy.Internal.ByteString
    -> GHC.Base.Maybe
         (Data.Either.Either GHC.Base.String CommonServer.Identity)
  {- Arity: 3, Strictness: <L,A><L,1*U><L,U>,
     Unfolding: InlineRule (3, True, True)
                (\ (w1 :: Data.Proxy.Proxy '[Servant.API.ContentTypes.JSON])
                   (w2 :: Data.ByteString.Lazy.Internal.ByteString)
                   (w3 :: Data.ByteString.Lazy.Internal.ByteString) ->
                 Servant.API.ContentTypes.$w$chandleCTypeH
                   @ '[Servant.API.ContentTypes.JSON]
                   @ CommonServer.Identity
                   DirectoryServer.$s$fAllMimeUnrender:a
                   w2
                   w3) -}
8210429946a58be8020625e6d0af8ed3
  directoryApp21 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        8#
                        s1 of ds1 { (#,#) ipv ipv1 ->
                 Servant.Server.Internal.$wouter
                   (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                   Servant.Server.Internal.$fHasServerTYPE:>context20
                   DirectoryServer.directoryApp22
                   0#
                   ipv }) -}
1938af69c1e3d6416d7cd109802beca2
  directoryApp22 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "join"#) -}
cdbad8ed8cf9243c6b4a41f107a83b8a
  directoryApp23 ::
    Servant.Server.Internal.Router.Router'
      () Servant.Server.Internal.RoutingApplication.RoutingApplication
  {- Unfolding: (Servant.Server.Internal.Router.StaticRouter
                   @ ()
                   @ Servant.Server.Internal.RoutingApplication.RoutingApplication
                   DirectoryServer.directoryApp24
                   (GHC.Types.[]
                      @ (()
                         -> Servant.Server.Internal.RoutingApplication.RoutingApplication))) -}
a8090f4a1520fc6e3e8ed66322f5be36
  directoryApp24 ::
    Data.Map.Base.Map
      Data.Text.Internal.Text
      (Servant.Server.Internal.Router.Router'
         () Servant.Server.Internal.RoutingApplication.RoutingApplication)
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        DirectoryServer.directoryApp30 of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of dt { Data.Text.Internal.Text ipv2 ipv3 ipv4 ->
                 Data.Map.Base.Bin
                   @ Data.Text.Internal.Text
                   @ (Servant.Server.Internal.Router.Router'
                        () Servant.Server.Internal.RoutingApplication.RoutingApplication)
                   1#
                   dt
                   DirectoryServer.directoryApp25
                   (Data.Map.Base.Tip
                      @ Data.Text.Internal.Text
                      @ (Servant.Server.Internal.Router.Router'
                           () Servant.Server.Internal.RoutingApplication.RoutingApplication))
                   (Data.Map.Base.Tip
                      @ Data.Text.Internal.Text
                      @ (Servant.Server.Internal.Router.Router'
                           ()
                           Servant.Server.Internal.RoutingApplication.RoutingApplication)) } }) -}
32b548a5c5dfc071ecfa23eb8b2a2cc0
  directoryApp25 :: Servant.Server.Internal.Router.Router ()
  {- Unfolding: (Servant.Server.Internal.$w$croute2
                   @ *
                   @ '[Servant.API.ContentTypes.JSON]
                   @ CommonServer.File
                   @ (Servant.API.Verbs.Verb
                        'Network.HTTP.Types.Method.POST
                        200
                        '[Servant.API.ContentTypes.JSON]
                        CommonServer.Response)
                   @ '[]
                   DirectoryServer.directoryApp29
                     `cast`
                   (Sym (Servant.API.ContentTypes.N:AllCTUnrender[0]
                             <'[Servant.API.ContentTypes.JSON]>_N <CommonServer.File>_N))
                   DirectoryServer.directoryApp18
                     `cast`
                   (Sym (Servant.Server.Internal.N:HasServer[0]
                             <*>_N
                             <Servant.API.Verbs.Verb
                                'Network.HTTP.Types.Method.POST
                                200
                                '[Servant.API.ContentTypes.JSON]
                                CommonServer.Response>_N
                             <'[]>_N))
                   @ ()
                   (Data.Proxy.Proxy
                      @ *
                      @ (Servant.API.ReqBody.ReqBody
                           '[Servant.API.ContentTypes.JSON] CommonServer.File
                         Servant.API.Sub.:> Servant.API.Verbs.Verb
                                              'Network.HTTP.Types.Method.POST
                                              200
                                              '[Servant.API.ContentTypes.JSON]
                                              CommonServer.Response))
                   Servant.Server.Internal.Context.$WEmptyContext
                   DirectoryServer.directoryApp26
                     `cast`
                   (Servant.Server.Internal.RoutingApplication.Delayed
                      <()>_R
                      (Sub (Servant.Server.Internal.D:R:ServerTTYPE:>m4[0]
                                <*>_N
                                <"close">_N
                                <Servant.API.ReqBody.ReqBody
                                   '[Servant.API.ContentTypes.JSON] CommonServer.File
                                 Servant.API.Sub.:> Servant.API.Verbs.Post
                                                      '[Servant.API.ContentTypes.JSON]
                                                      CommonServer.Response>_N
                                <Control.Monad.Trans.Except.ExceptT
                                   Servant.Server.Internal.ServantErr.ServantErr
                                   GHC.Types.IO>_N)))_R) -}
f1d9303bee1278f49a6b67ffe471a24b
  directoryApp26 ::
    Servant.Server.Internal.RoutingApplication.Delayed
      ()
      (Servant.Server.Internal.Server
         ("close"
          Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                '[Servant.API.ContentTypes.JSON] CommonServer.File
                              Servant.API.Sub.:> Servant.API.Verbs.Post
                                                   '[Servant.API.ContentTypes.JSON]
                                                   CommonServer.Response)))
  {- Unfolding: (Servant.Server.Internal.RoutingApplication.Delayed
                   @ ()
                   @ (Servant.Server.Internal.Server
                        ("close"
                         Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                               '[Servant.API.ContentTypes.JSON] CommonServer.File
                                             Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                  '[Servant.API.ContentTypes.JSON]
                                                                  CommonServer.Response)))
                   @ ()
                   @ ()
                   @ ()
                   (Servant.Server.Internal.RoutingApplication.emptyDelayed2 @ ())
                     `cast`
                   (<()>_R
                    ->_R Trans
                             (<Network.Wai.Internal.Request>_R
                              ->_R Sym (GHC.Types.N:IO[0]
                                            <Servant.Server.Internal.RoutingApplication.RouteResult
                                               ()>_R))
                             (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                       <()>_R)))
                   Servant.Server.Internal.RoutingApplication.emptyDelayed1
                     `cast`
                   (Trans
                        (<Network.Wai.Internal.Request>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Servant.Server.Internal.RoutingApplication.RouteResult
                                          ()>_R))
                        (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                  <()>_R)))
                   Servant.Server.Internal.RoutingApplication.emptyDelayed1
                     `cast`
                   (Trans
                        (<Network.Wai.Internal.Request>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Servant.Server.Internal.RoutingApplication.RouteResult
                                          ()>_R))
                        (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                  <()>_R)))
                   Servant.Server.Internal.RoutingApplication.emptyDelayed1
                     `cast`
                   (Trans
                        (<Network.Wai.Internal.Request>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Servant.Server.Internal.RoutingApplication.RouteResult
                                          ()>_R))
                        (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                  <()>_R)))
                   DirectoryServer.directoryApp27) -}
3ff34cce9fbe247f7129609aa5ea97de
  directoryApp27 ::
    ()
    -> ()
    -> ()
    -> Network.Wai.Internal.Request
    -> Servant.Server.Internal.RoutingApplication.RouteResult
         (Servant.Server.Internal.Server
            ("close"
             Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                   '[Servant.API.ContentTypes.JSON] CommonServer.File
                                 Servant.API.Sub.:> Servant.API.Verbs.Post
                                                      '[Servant.API.ContentTypes.JSON]
                                                      CommonServer.Response)))
  {- Arity: 4,
     Unfolding: (\ (c :: ())
                   (a1 :: ())
                   (b1 :: ())
                   (req :: Network.Wai.Internal.Request) ->
                 DirectoryServer.directoryApp28) -}
6447f1c3f0e9ef59e77a04169f045b85
  directoryApp28 ::
    Servant.Server.Internal.RoutingApplication.RouteResult
      (Servant.Server.Internal.Server
         ("close"
          Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                '[Servant.API.ContentTypes.JSON] CommonServer.File
                              Servant.API.Sub.:> Servant.API.Verbs.Post
                                                   '[Servant.API.ContentTypes.JSON]
                                                   CommonServer.Response)))
  {- Unfolding: (Servant.Server.Internal.RoutingApplication.Route
                   @ (Servant.Server.Internal.Server
                        ("close"
                         Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                               '[Servant.API.ContentTypes.JSON] CommonServer.File
                                             Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                  '[Servant.API.ContentTypes.JSON]
                                                                  CommonServer.Response)))
                   DirectoryServer.closeFile1
                     `cast`
                   (Trans
                        (<CommonServer.File>_R
                         ->_R Trans
                                  (Sym (GHC.Types.N:IO[0]
                                            <Data.Either.Either
                                               Servant.Server.Internal.ServantErr.ServantErr
                                               CommonServer.Response>_R))
                                  (Trans
                                       (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                 <Servant.Server.Internal.ServantErr.ServantErr>_N
                                                 <GHC.Types.IO>_R
                                                 <CommonServer.Response>_N))
                                       (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPEVerbm0[0]
                                                      <Network.HTTP.Types.Method.StdMethod>_N
                                                      <'[Servant.API.ContentTypes.JSON]>_N
                                                      <CommonServer.Response>_N
                                                      <'Network.HTTP.Types.Method.POST>_N
                                                      <200>_N
                                                      <Control.Monad.Trans.Except.ExceptT
                                                         Servant.Server.Internal.ServantErr.ServantErr
                                                         GHC.Types.IO>_N)))))
                        (Trans
                             (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPE:>m5[0]
                                            <*>_N
                                            <'[Servant.API.ContentTypes.JSON]>_N
                                            <CommonServer.File>_N
                                            <Servant.API.Verbs.Verb
                                               'Network.HTTP.Types.Method.POST
                                               200
                                               '[Servant.API.ContentTypes.JSON]
                                               CommonServer.Response>_N
                                            <Control.Monad.Trans.Except.ExceptT
                                               Servant.Server.Internal.ServantErr.ServantErr
                                               GHC.Types.IO>_N)))
                             (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPE:>m4[0]
                                            <*>_N
                                            <"close">_N
                                            <Servant.API.ReqBody.ReqBody
                                               '[Servant.API.ContentTypes.JSON] CommonServer.File
                                             Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                  '[Servant.API.ContentTypes.JSON]
                                                                  CommonServer.Response>_N
                                            <Control.Monad.Trans.Except.ExceptT
                                               Servant.Server.Internal.ServantErr.ServantErr
                                               GHC.Types.IO>_N)))))) -}
cdeb757bb353cfadb0816c161c2e9238
  directoryApp29 ::
    Data.Proxy.Proxy '[Servant.API.ContentTypes.JSON]
    -> Data.ByteString.Lazy.Internal.ByteString
    -> Data.ByteString.Lazy.Internal.ByteString
    -> GHC.Base.Maybe
         (Data.Either.Either GHC.Base.String CommonServer.File)
  {- Arity: 3, Strictness: <L,A><L,1*U><L,U>,
     Unfolding: InlineRule (3, True, True)
                (\ (w1 :: Data.Proxy.Proxy '[Servant.API.ContentTypes.JSON])
                   (w2 :: Data.ByteString.Lazy.Internal.ByteString)
                   (w3 :: Data.ByteString.Lazy.Internal.ByteString) ->
                 Servant.API.ContentTypes.$w$chandleCTypeH
                   @ '[Servant.API.ContentTypes.JSON]
                   @ CommonServer.File
                   DirectoryServer.$s$fAllMimeUnrender:a1
                   w2
                   w3) -}
c769ec6c5163608ea089848fbf275c57
  directoryApp3 ::
    Servant.Server.Internal.Router.Router'
      () Servant.Server.Internal.RoutingApplication.RoutingApplication
  {- Unfolding: (Servant.Server.Internal.Router.choice
                   @ ()
                   @ Servant.Server.Internal.RoutingApplication.RoutingApplication
                   DirectoryServer.directoryApp23
                   DirectoryServer.directoryApp4) -}
dae5b97b7b15ef2fb43c9e1fdbe23ac3
  directoryApp30 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        8#
                        s1 of ds1 { (#,#) ipv ipv1 ->
                 Servant.Server.Internal.$wouter
                   (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                   Servant.Server.Internal.$fHasServerTYPE:>context20
                   DirectoryServer.directoryApp31
                   0#
                   ipv }) -}
72b65b7db6115e9a44e9959cbebde7f6
  directoryApp31 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "close"#) -}
c969eeb54557851a3068d452b3c3f917
  directoryApp32 ::
    Servant.Server.Internal.Router.Router'
      () Servant.Server.Internal.RoutingApplication.RoutingApplication
  {- Unfolding: (Servant.Server.Internal.Router.StaticRouter
                   @ ()
                   @ Servant.Server.Internal.RoutingApplication.RoutingApplication
                   DirectoryServer.directoryApp33
                   (GHC.Types.[]
                      @ (()
                         -> Servant.Server.Internal.RoutingApplication.RoutingApplication))) -}
853a43990a9bb6eac2d40ef2cda5cfea
  directoryApp33 ::
    Data.Map.Base.Map
      Data.Text.Internal.Text
      (Servant.Server.Internal.Router.Router'
         () Servant.Server.Internal.RoutingApplication.RoutingApplication)
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        DirectoryServer.directoryApp47 of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of dt { Data.Text.Internal.Text ipv2 ipv3 ipv4 ->
                 Data.Map.Base.Bin
                   @ Data.Text.Internal.Text
                   @ (Servant.Server.Internal.Router.Router'
                        () Servant.Server.Internal.RoutingApplication.RoutingApplication)
                   1#
                   dt
                   DirectoryServer.directoryApp34
                   (Data.Map.Base.Tip
                      @ Data.Text.Internal.Text
                      @ (Servant.Server.Internal.Router.Router'
                           () Servant.Server.Internal.RoutingApplication.RoutingApplication))
                   (Data.Map.Base.Tip
                      @ Data.Text.Internal.Text
                      @ (Servant.Server.Internal.Router.Router'
                           ()
                           Servant.Server.Internal.RoutingApplication.RoutingApplication)) } }) -}
6882ef6716b647705f068ac7a915abb2
  directoryApp34 ::
    Servant.Server.Internal.Router.Router'
      () Servant.Server.Internal.RoutingApplication.RoutingApplication
  {- Unfolding: (Servant.Server.Internal.Router.CaptureRouter
                   @ ()
                   @ Servant.Server.Internal.RoutingApplication.RoutingApplication
                   DirectoryServer.directoryApp35) -}
9dd81817cd3eec67cee9c2f2acae74f8
  directoryApp35 ::
    Servant.Server.Internal.Router.Router (Data.Text.Internal.Text, ())
  {- Unfolding: (DirectoryServer.directoryApp46
                   DirectoryServer.directoryApp36) -}
dee01a30eacd4507a6232faab5a534e0
  directoryApp36 ::
    Servant.Server.Internal.RoutingApplication.Delayed
      (Data.Text.Internal.Text, ())
      (Servant.Server.Internal.Server
         (Servant.API.Verbs.Verb
            'Network.HTTP.Types.Method.GET
            200
            '[Servant.API.ContentTypes.JSON]
            CommonServer.File))
  {- Unfolding: (Servant.Server.Internal.RoutingApplication.addCapture
                   @ ()
                   @ [GHC.Types.Char]
                   @ (Servant.Server.Internal.Server
                        (Servant.API.Verbs.Verb
                           'Network.HTTP.Types.Method.GET
                           200
                           '[Servant.API.ContentTypes.JSON]
                           CommonServer.File))
                   @ Data.Text.Internal.Text
                   DirectoryServer.directoryApp38
                     `cast`
                   (Servant.Server.Internal.RoutingApplication.Delayed
                      <()>_R
                      (Trans
                           (Sub (Servant.Server.Internal.D:R:ServerTTYPE:>m4[0]
                                     <*>_N
                                     <"open">_N
                                     <Servant.API.Capture.Capture "fileName" GHC.Base.String
                                      Servant.API.Sub.:> Servant.API.Verbs.Get
                                                           '[Servant.API.ContentTypes.JSON]
                                                           CommonServer.File>_N
                                     <Control.Monad.Trans.Except.ExceptT
                                        Servant.Server.Internal.ServantErr.ServantErr
                                        GHC.Types.IO>_N))
                           (Sub (Servant.Server.Internal.D:R:ServerTTYPE:>m11[0]
                                     <*>_N
                                     <"fileName">_N
                                     <[GHC.Types.Char]>_N
                                     <Servant.API.Verbs.Verb
                                        'Network.HTTP.Types.Method.GET
                                        200
                                        '[Servant.API.ContentTypes.JSON]
                                        CommonServer.File>_N
                                     <Control.Monad.Trans.Except.ExceptT
                                        Servant.Server.Internal.ServantErr.ServantErr
                                        GHC.Types.IO>_N))))_R
                   DirectoryServer.directoryApp37) -}
60a17eb318e430f8e6dc7259d1463194
  directoryApp37 ::
    Data.Text.Internal.Text
    -> Servant.Server.Internal.RoutingApplication.DelayedIO
         [GHC.Types.Char]
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (txt :: Data.Text.Internal.Text) ->
                 case Web.Internal.HttpApiData.$w$cparseUrlPiece3
                        txt of ww { Unit# ww1 ->
                 (Servant.Server.Internal.RoutingApplication.$fApplicativeDelayedIO5
                    @ [GHC.Types.Char]
                    ww1)
                   `cast`
                 (Trans
                      (<Network.Wai.Internal.Request>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     <Servant.Server.Internal.RoutingApplication.RouteResult
                                        [GHC.Types.Char]>_R))
                      (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                <[GHC.Types.Char]>_R))) }) -}
0b94820a7f9171d63e65471097fed8c4
  directoryApp38 ::
    Servant.Server.Internal.RoutingApplication.Delayed
      ()
      (Servant.Server.Internal.Server
         ("open"
          Servant.API.Sub.:> (Servant.API.Capture.Capture
                                "fileName" GHC.Base.String
                              Servant.API.Sub.:> Servant.API.Verbs.Get
                                                   '[Servant.API.ContentTypes.JSON]
                                                   CommonServer.File)))
  {- Unfolding: (Servant.Server.Internal.RoutingApplication.Delayed
                   @ ()
                   @ (Servant.Server.Internal.Server
                        ("open"
                         Servant.API.Sub.:> (Servant.API.Capture.Capture
                                               "fileName" GHC.Base.String
                                             Servant.API.Sub.:> Servant.API.Verbs.Get
                                                                  '[Servant.API.ContentTypes.JSON]
                                                                  CommonServer.File)))
                   @ ()
                   @ ()
                   @ ()
                   (Servant.Server.Internal.RoutingApplication.emptyDelayed2 @ ())
                     `cast`
                   (<()>_R
                    ->_R Trans
                             (<Network.Wai.Internal.Request>_R
                              ->_R Sym (GHC.Types.N:IO[0]
                                            <Servant.Server.Internal.RoutingApplication.RouteResult
                                               ()>_R))
                             (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                       <()>_R)))
                   Servant.Server.Internal.RoutingApplication.emptyDelayed1
                     `cast`
                   (Trans
                        (<Network.Wai.Internal.Request>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Servant.Server.Internal.RoutingApplication.RouteResult
                                          ()>_R))
                        (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                  <()>_R)))
                   Servant.Server.Internal.RoutingApplication.emptyDelayed1
                     `cast`
                   (Trans
                        (<Network.Wai.Internal.Request>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Servant.Server.Internal.RoutingApplication.RouteResult
                                          ()>_R))
                        (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                  <()>_R)))
                   Servant.Server.Internal.RoutingApplication.emptyDelayed1
                     `cast`
                   (Trans
                        (<Network.Wai.Internal.Request>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Servant.Server.Internal.RoutingApplication.RouteResult
                                          ()>_R))
                        (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                  <()>_R)))
                   DirectoryServer.directoryApp39) -}
3953fbfb2e1ea921435985bf4b6e494d
  directoryApp39 ::
    ()
    -> ()
    -> ()
    -> Network.Wai.Internal.Request
    -> Servant.Server.Internal.RoutingApplication.RouteResult
         (Servant.Server.Internal.Server
            ("open"
             Servant.API.Sub.:> (Servant.API.Capture.Capture
                                   "fileName" GHC.Base.String
                                 Servant.API.Sub.:> Servant.API.Verbs.Get
                                                      '[Servant.API.ContentTypes.JSON]
                                                      CommonServer.File)))
  {- Arity: 4,
     Unfolding: (\ (c :: ())
                   (a1 :: ())
                   (b1 :: ())
                   (req :: Network.Wai.Internal.Request) ->
                 DirectoryServer.directoryApp40) -}
cc039f5e088a6913ea5bf9d7aa64bcb8
  directoryApp4 ::
    Servant.Server.Internal.Router.Router'
      () Servant.Server.Internal.RoutingApplication.RoutingApplication
  {- Unfolding: (Servant.Server.Internal.Router.StaticRouter
                   @ ()
                   @ Servant.Server.Internal.RoutingApplication.RoutingApplication
                   DirectoryServer.directoryApp5
                   (GHC.Types.[]
                      @ (()
                         -> Servant.Server.Internal.RoutingApplication.RoutingApplication))) -}
665dc6e167d0fcbf5f0fa719d100c92c
  directoryApp40 ::
    Servant.Server.Internal.RoutingApplication.RouteResult
      (Servant.Server.Internal.Server
         ("open"
          Servant.API.Sub.:> (Servant.API.Capture.Capture
                                "fileName" GHC.Base.String
                              Servant.API.Sub.:> Servant.API.Verbs.Get
                                                   '[Servant.API.ContentTypes.JSON]
                                                   CommonServer.File)))
  {- Unfolding: (Servant.Server.Internal.RoutingApplication.Route
                   @ (Servant.Server.Internal.Server
                        ("open"
                         Servant.API.Sub.:> (Servant.API.Capture.Capture
                                               "fileName" GHC.Base.String
                                             Servant.API.Sub.:> Servant.API.Verbs.Get
                                                                  '[Servant.API.ContentTypes.JSON]
                                                                  CommonServer.File)))
                   DirectoryServer.directoryApp41
                     `cast`
                   (Trans
                        (<[GHC.Types.Char]>_R
                         ->_R Trans
                                  (Sym (GHC.Types.N:IO[0]
                                            <Data.Either.Either
                                               Servant.Server.Internal.ServantErr.ServantErr
                                               CommonServer.File>_R))
                                  (Trans
                                       (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                 <Servant.Server.Internal.ServantErr.ServantErr>_N
                                                 <GHC.Types.IO>_R
                                                 <CommonServer.File>_N))
                                       (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPEVerbm0[0]
                                                      <Network.HTTP.Types.Method.StdMethod>_N
                                                      <'[Servant.API.ContentTypes.JSON]>_N
                                                      <CommonServer.File>_N
                                                      <'Network.HTTP.Types.Method.GET>_N
                                                      <200>_N
                                                      <Control.Monad.Trans.Except.ExceptT
                                                         Servant.Server.Internal.ServantErr.ServantErr
                                                         GHC.Types.IO>_N)))))
                        (Trans
                             (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPE:>m11[0]
                                            <*>_N
                                            <"fileName">_N
                                            <[GHC.Types.Char]>_N
                                            <Servant.API.Verbs.Verb
                                               'Network.HTTP.Types.Method.GET
                                               200
                                               '[Servant.API.ContentTypes.JSON]
                                               CommonServer.File>_N
                                            <Control.Monad.Trans.Except.ExceptT
                                               Servant.Server.Internal.ServantErr.ServantErr
                                               GHC.Types.IO>_N)))
                             (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPE:>m4[0]
                                            <*>_N
                                            <"open">_N
                                            <Servant.API.Capture.Capture "fileName" GHC.Base.String
                                             Servant.API.Sub.:> Servant.API.Verbs.Get
                                                                  '[Servant.API.ContentTypes.JSON]
                                                                  CommonServer.File>_N
                                            <Control.Monad.Trans.Except.ExceptT
                                               Servant.Server.Internal.ServantErr.ServantErr
                                               GHC.Types.IO>_N)))))) -}
b4aeaa976c23d2d160d5ea6790774b99
  directoryApp41 ::
    GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            Servant.Server.Internal.ServantErr.ServantErr CommonServer.File #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (fn :: GHC.Base.String)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case CommonServer.logConnection1
                        (GHC.Types.[] @ GHC.Types.Char)
                        DirectoryServer.closeFile8
                        DirectoryServer.directoryApp45
                        s of ds1 { (#,#) ipv ipv1 ->
                 case DirectoryServer.closeFile9 fn ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case DirectoryServer.directoryApp42
                        fn
                        (case ipv3 of wild { DirectoryServer.FileMapping ds ds3 -> ds3 })
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        CommonServer.logHeading_t
                        GHC.Types.True
                        ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                 (# ipv6,
                    Data.Either.Right
                      @ Servant.Server.Internal.ServantErr.ServantErr
                      @ CommonServer.File
                      ipv5 #) } } } }) -}
1ce87f03a65f25c0c7d7751af1c5827a
  directoryApp42 ::
    GHC.Base.String
    -> CommonServer.Identity
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, CommonServer.File #)
  {- Arity: 3, Strictness: <L,U><L,U(1*U,1*U,A)><S,U>,
     Unfolding: (\ (fn :: GHC.Base.String)
                   (i :: CommonServer.Identity)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case CommonServer.logConnection1
                        DirectoryServer.closeFile8
                        DirectoryServer.closeFile7
                        DirectoryServer.directoryApp44
                        s of ds1 { (#,#) ipv ipv1 ->
                 case Network.HTTP.Client.Manager.$wnewManager
                        Network.HTTP.Client.Manager.defaultManagerSettings18
                        Network.HTTP.Client.Manager.defaultManagerSettings15
                          `cast`
                        (Sym (GHC.Types.N:IO[0]
                                  <GHC.Base.Maybe Network.Socket.Types.HostAddress
                                   -> GHC.Base.String
                                   -> GHC.Types.Int
                                   -> GHC.Types.IO Network.HTTP.Client.Types.Connection>_R))
                        Network.HTTP.Client.Manager.defaultManagerSettings14
                          `cast`
                        (Sym (GHC.Types.N:IO[0]
                                  <GHC.Base.Maybe Network.Socket.Types.HostAddress
                                   -> GHC.Base.String
                                   -> GHC.Types.Int
                                   -> GHC.Types.IO Network.HTTP.Client.Types.Connection>_R))
                        Network.HTTP.Client.Manager.defaultManagerSettings11
                          `cast`
                        (Sym (GHC.Types.N:IO[0]
                                  <Data.ByteString.Internal.ByteString
                                   -> (Network.HTTP.Client.Types.Connection -> GHC.Types.IO ())
                                   -> GHC.Base.String
                                   -> GHC.Base.Maybe Network.Socket.Types.HostAddress
                                   -> GHC.Base.String
                                   -> GHC.Types.Int
                                   -> GHC.Types.IO Network.HTTP.Client.Types.Connection>_R))
                        Network.HTTP.Client.Manager.defaultManagerSettings9
                        Network.HTTP.Client.Manager.defaultManagerSettings8
                        Network.HTTP.Client.Manager.defaultManagerSettings6
                          `cast`
                        (forall (a :: <*>_N).
                         <GHC.Types.IO a>_R ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                        Network.HTTP.Client.Manager.defaultManagerSettings5
                        (GHC.Base.returnIO1 @ Network.HTTP.Client.Types.Request)
                          `cast`
                        (<Network.HTTP.Client.Types.Request>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Network.HTTP.Client.Types.Request>_R))
                        Network.HTTP.Client.Manager.defaultManagerSettings1
                          `cast`
                        (Trans
                             (<GHC.Types.Bool>_R
                              ->_R Sym (GHC.Types.N:IO[0]
                                            <Network.HTTP.Client.Types.Request
                                             -> Network.HTTP.Client.Types.Request>_R))
                             (Sym (Network.HTTP.Client.Types.N:ProxyOverride[0])))
                        Network.HTTP.Client.Manager.defaultManagerSettings1
                          `cast`
                        (Trans
                             (<GHC.Types.Bool>_R
                              ->_R Sym (GHC.Types.N:IO[0]
                                            <Network.HTTP.Client.Types.Request
                                             -> Network.HTTP.Client.Types.Request>_R))
                             (Sym (Network.HTTP.Client.Types.N:ProxyOverride[0])))
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ((Servant.Client.$w$cclientWithRoute1
                          @ *
                          @ "fileName"
                          @ [GHC.Types.Char]
                          @ (Servant.API.Verbs.Verb
                               'Network.HTTP.Types.Method.GET
                               200
                               '[Servant.API.ContentTypes.JSON]
                               CommonServer.File)
                          Web.Internal.HttpApiData.$fToHttpApiData[]
                          CommonServerApi.$sclient4
                            `cast`
                          (Sym (Servant.Client.N:HasClient[0]
                                    <*>_N
                                    <Servant.API.Verbs.Verb
                                       'Network.HTTP.Types.Method.GET
                                       200
                                       '[Servant.API.ContentTypes.JSON]
                                       CommonServer.File>_N))
                          (Data.Proxy.Proxy
                             @ *
                             @ (Servant.API.Capture.Capture "fileName" [GHC.Types.Char]
                                Servant.API.Sub.:> Servant.API.Verbs.Verb
                                                     'Network.HTTP.Types.Method.GET
                                                     200
                                                     '[Servant.API.ContentTypes.JSON]
                                                     CommonServer.File))
                          CommonServerApi.fileClientDownload2
                          fn)
                         `cast`
                       (Trans
                            (Sub (Servant.Client.D:R:ClientTYPEVerb2[0]
                                      <Network.HTTP.Types.Method.StdMethod>_N
                                      <CommonServer.File>_N
                                      <'Network.HTTP.Types.Method.GET>_N
                                      <'[Servant.API.ContentTypes.JSON]>_N
                                      <200>_N))
                            (Trans
                                 (Servant.Common.Req.N:ClientM[0] <CommonServer.File>_N)
                                 (Control.Monad.Trans.Reader.N:ReaderT[0]
                                      <*>_N
                                      <Servant.Common.Req.ClientEnv>_R
                                      <Control.Monad.Trans.Except.ExceptT
                                         Servant.Common.Req.ServantError GHC.Types.IO>_R
                                      <CommonServer.File>_N)))
                         (Servant.Common.Req.ClientEnv
                            ipv3
                            (Servant.Common.BaseUrl.BaseUrl
                               Servant.Common.BaseUrl.Http
                               (CommonServer.address i)
                               (case Text.Read.readEither6
                                       @ GHC.Types.Int
                                       (Text.ParserCombinators.ReadP.run
                                          @ GHC.Types.Int
                                          DirectoryServer.closeFile5
                                          (case i of wild { CommonServer.Identity ds3 ds4 ds5 ->
                                           ds4 })) of wild {
                                  [] -> DirectoryServer.closeFile4
                                  : x ds
                                  -> case ds of wild1 {
                                       [] -> x : ipv4 ipv5 -> DirectoryServer.closeFile3 } })
                               (GHC.Types.[] @ GHC.Types.Char))))
                        `cast`
                      (Trans
                           (Control.Monad.Trans.Except.N:ExceptT[0]
                                <Servant.Common.Req.ServantError>_N
                                <GHC.Types.IO>_R
                                <CommonServer.File>_N)
                           (GHC.Types.N:IO[0]
                                <Data.Either.Either
                                   Servant.Common.Req.ServantError CommonServer.File>_R))
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case ipv5 of wild {
                   Data.Either.Left err -> (# ipv4, DirectoryServer.directoryApp43 #)
                   Data.Either.Right response' -> (# ipv4, response' #) } } } }) -}
4b24befc8c655cf2613b0f420297cc67
  directoryApp43 :: CommonServer.File
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (CommonServer.File
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Types.[] @ GHC.Types.Char)) -}
6878702865d1c809c253f37a936bbb79
  directoryApp44 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "GET download"#) -}
26513fbc2c8f211a452a74585e9f8170
  directoryApp45 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "GET open"#) -}
400d18e358e4dd9f812d0d963c7d66ca
  directoryApp46 ::
    Servant.Server.Internal.RoutingApplication.Delayed
      (Data.Text.Internal.Text, ())
      (Servant.Server.Internal.Server
         (Servant.API.Verbs.Verb
            'Network.HTTP.Types.Method.GET
            200
            '[Servant.API.ContentTypes.JSON]
            CommonServer.File))
    -> Servant.Server.Internal.Router.Router
         (Data.Text.Internal.Text, ())
  {- Unfolding: (Servant.Server.Internal.$w$croute8
                   @ Network.HTTP.Types.Method.StdMethod
                   @ '[Servant.API.ContentTypes.JSON]
                   @ CommonServer.File
                   @ 'Network.HTTP.Types.Method.GET
                   @ 200
                   @ '[]
                   DirectoryServer.$s$fAllCTRender:a4
                   Servant.API.Verbs.$fReflectMethodStdMethodGET_$creflectMethod
                     `cast`
                   (Sym (Servant.API.Verbs.N:ReflectMethod[0]
                             <Network.HTTP.Types.Method.StdMethod>_N
                             <'Network.HTTP.Types.Method.GET>_N))
                   DirectoryServer.directoryApp19
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SNat[0] <200>_P))
                        (Sym (GHC.TypeLits.N:KnownNat[0]) <200>_N))
                   @ (Data.Text.Internal.Text, ())
                   (Data.Proxy.Proxy
                      @ *
                      @ (Servant.API.Verbs.Verb
                           'Network.HTTP.Types.Method.GET
                           200
                           '[Servant.API.ContentTypes.JSON]
                           CommonServer.File))) -}
38e4f0b3e0bcf2346bc51764569c93b1
  directoryApp47 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        8#
                        s1 of ds1 { (#,#) ipv ipv1 ->
                 Servant.Server.Internal.$wouter
                   (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                   Servant.Server.Internal.$fHasServerTYPE:>context20
                   DirectoryServer.directoryApp48
                   0#
                   ipv }) -}
c6522dac33bd6a71816ca983056df36d
  directoryApp48 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "open"#) -}
f5d28826186827ac0dd483d44142a075
  directoryApp49 ::
    Servant.Server.Internal.Router.Router'
      () Servant.Server.Internal.RoutingApplication.RoutingApplication
  {- Unfolding: (Servant.Server.Internal.Router.StaticRouter
                   @ ()
                   @ Servant.Server.Internal.RoutingApplication.RoutingApplication
                   DirectoryServer.directoryApp50
                   (GHC.Types.[]
                      @ (()
                         -> Servant.Server.Internal.RoutingApplication.RoutingApplication))) -}
cccd617dc8550abc30f5db4a57518ef2
  directoryApp5 ::
    Data.Map.Base.Map
      Data.Text.Internal.Text
      (Servant.Server.Internal.Router.Router'
         () Servant.Server.Internal.RoutingApplication.RoutingApplication)
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        DirectoryServer.directoryApp21 of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of dt { Data.Text.Internal.Text ipv2 ipv3 ipv4 ->
                 Data.Map.Base.Bin
                   @ Data.Text.Internal.Text
                   @ (Servant.Server.Internal.Router.Router'
                        () Servant.Server.Internal.RoutingApplication.RoutingApplication)
                   1#
                   dt
                   DirectoryServer.directoryApp6
                   (Data.Map.Base.Tip
                      @ Data.Text.Internal.Text
                      @ (Servant.Server.Internal.Router.Router'
                           () Servant.Server.Internal.RoutingApplication.RoutingApplication))
                   (Data.Map.Base.Tip
                      @ Data.Text.Internal.Text
                      @ (Servant.Server.Internal.Router.Router'
                           ()
                           Servant.Server.Internal.RoutingApplication.RoutingApplication)) } }) -}
f7a42f0d1192e10240bdd01e88658fe6
  directoryApp50 ::
    Data.Map.Base.Map
      Data.Text.Internal.Text
      (Servant.Server.Internal.Router.Router'
         () Servant.Server.Internal.RoutingApplication.RoutingApplication)
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        DirectoryServer.directoryApp64 of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of dt { Data.Text.Internal.Text ipv2 ipv3 ipv4 ->
                 Data.Map.Base.Bin
                   @ Data.Text.Internal.Text
                   @ (Servant.Server.Internal.Router.Router'
                        () Servant.Server.Internal.RoutingApplication.RoutingApplication)
                   1#
                   dt
                   DirectoryServer.directoryApp51
                   (Data.Map.Base.Tip
                      @ Data.Text.Internal.Text
                      @ (Servant.Server.Internal.Router.Router'
                           () Servant.Server.Internal.RoutingApplication.RoutingApplication))
                   (Data.Map.Base.Tip
                      @ Data.Text.Internal.Text
                      @ (Servant.Server.Internal.Router.Router'
                           ()
                           Servant.Server.Internal.RoutingApplication.RoutingApplication)) } }) -}
ea981e49a932d9e016991e3e44c70f13
  directoryApp51 :: Servant.Server.Internal.Router.Router ()
  {- Unfolding: (DirectoryServer.directoryApp63
                   DirectoryServer.directoryApp52
                     `cast`
                   (Servant.Server.Internal.RoutingApplication.Delayed
                      <()>_R
                      (Sub (Servant.Server.Internal.D:R:ServerTTYPE:>m4[0]
                                <*>_N
                                <"files">_N
                                <Servant.API.Verbs.Verb
                                   'Network.HTTP.Types.Method.GET
                                   200
                                   '[Servant.API.ContentTypes.JSON]
                                   [GHC.IO.FilePath]>_N
                                <Control.Monad.Trans.Except.ExceptT
                                   Servant.Server.Internal.ServantErr.ServantErr
                                   GHC.Types.IO>_N)))_R) -}
647ea68a7d0554e870d6c18a762a187d
  directoryApp52 ::
    Servant.Server.Internal.RoutingApplication.Delayed
      ()
      (Servant.Server.Internal.Server
         ("files"
          Servant.API.Sub.:> Servant.API.Verbs.Get
                               '[Servant.API.ContentTypes.JSON] [GHC.IO.FilePath]))
  {- Unfolding: (Servant.Server.Internal.RoutingApplication.Delayed
                   @ ()
                   @ (Servant.Server.Internal.Server
                        ("files"
                         Servant.API.Sub.:> Servant.API.Verbs.Get
                                              '[Servant.API.ContentTypes.JSON] [GHC.IO.FilePath]))
                   @ ()
                   @ ()
                   @ ()
                   (Servant.Server.Internal.RoutingApplication.emptyDelayed2 @ ())
                     `cast`
                   (<()>_R
                    ->_R Trans
                             (<Network.Wai.Internal.Request>_R
                              ->_R Sym (GHC.Types.N:IO[0]
                                            <Servant.Server.Internal.RoutingApplication.RouteResult
                                               ()>_R))
                             (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                       <()>_R)))
                   Servant.Server.Internal.RoutingApplication.emptyDelayed1
                     `cast`
                   (Trans
                        (<Network.Wai.Internal.Request>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Servant.Server.Internal.RoutingApplication.RouteResult
                                          ()>_R))
                        (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                  <()>_R)))
                   Servant.Server.Internal.RoutingApplication.emptyDelayed1
                     `cast`
                   (Trans
                        (<Network.Wai.Internal.Request>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Servant.Server.Internal.RoutingApplication.RouteResult
                                          ()>_R))
                        (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                  <()>_R)))
                   Servant.Server.Internal.RoutingApplication.emptyDelayed1
                     `cast`
                   (Trans
                        (<Network.Wai.Internal.Request>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Servant.Server.Internal.RoutingApplication.RouteResult
                                          ()>_R))
                        (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                  <()>_R)))
                   DirectoryServer.directoryApp53) -}
899edd5ee83353ffe825309ce38b2249
  directoryApp53 ::
    ()
    -> ()
    -> ()
    -> Network.Wai.Internal.Request
    -> Servant.Server.Internal.RoutingApplication.RouteResult
         (Servant.Server.Internal.Server
            ("files"
             Servant.API.Sub.:> Servant.API.Verbs.Get
                                  '[Servant.API.ContentTypes.JSON] [GHC.IO.FilePath]))
  {- Arity: 4,
     Unfolding: (\ (c :: ())
                   (a1 :: ())
                   (b1 :: ())
                   (req :: Network.Wai.Internal.Request) ->
                 DirectoryServer.directoryApp54) -}
d0de520d446f16d9c748b6cf72809933
  directoryApp54 ::
    Servant.Server.Internal.RoutingApplication.RouteResult
      (Servant.Server.Internal.Server
         ("files"
          Servant.API.Sub.:> Servant.API.Verbs.Get
                               '[Servant.API.ContentTypes.JSON] [GHC.IO.FilePath]))
  {- Unfolding: (Servant.Server.Internal.RoutingApplication.Route
                   @ (Servant.Server.Internal.Server
                        ("files"
                         Servant.API.Sub.:> Servant.API.Verbs.Get
                                              '[Servant.API.ContentTypes.JSON] [GHC.IO.FilePath]))
                   DirectoryServer.directoryApp55
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     Servant.Server.Internal.ServantErr.ServantErr
                                     [GHC.IO.FilePath]>_R))
                        (Trans
                             (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                       <Servant.Server.Internal.ServantErr.ServantErr>_N
                                       <GHC.Types.IO>_R
                                       <[GHC.IO.FilePath]>_N))
                             (Trans
                                  (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPEVerbm0[0]
                                                 <Network.HTTP.Types.Method.StdMethod>_N
                                                 <'[Servant.API.ContentTypes.JSON]>_N
                                                 <[GHC.IO.FilePath]>_N
                                                 <'Network.HTTP.Types.Method.GET>_N
                                                 <200>_N
                                                 <Control.Monad.Trans.Except.ExceptT
                                                    Servant.Server.Internal.ServantErr.ServantErr
                                                    GHC.Types.IO>_N)))
                                  (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPE:>m4[0]
                                                 <*>_N
                                                 <"files">_N
                                                 <Servant.API.Verbs.Verb
                                                    'Network.HTTP.Types.Method.GET
                                                    200
                                                    '[Servant.API.ContentTypes.JSON]
                                                    [GHC.IO.FilePath]>_N
                                                 <Control.Monad.Trans.Except.ExceptT
                                                    Servant.Server.Internal.ServantErr.ServantErr
                                                    GHC.Types.IO>_N))))))) -}
9d05e54df81d72620b78e5edbba3da45
  directoryApp55 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            Servant.Server.Internal.ServantErr.ServantErr [GHC.IO.FilePath] #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case CommonServer.logConnection1
                        (GHC.Types.[] @ GHC.Types.Char)
                        DirectoryServer.closeFile8
                        DirectoryServer.directoryApp62
                        s of ds1 { (#,#) ipv ipv1 ->
                 case DirectoryServer.directoryApp60 ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case DirectoryServer.directoryApp59
                        ipv3
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case DirectoryServer.directoryApp56
                        ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                 (# ipv6,
                    Data.Either.Right
                      @ Servant.Server.Internal.ServantErr.ServantErr
                      @ [GHC.IO.FilePath]
                      (Data.OldList.nubBy
                         @ GHC.IO.FilePath
                         GHC.Base.eqString
                         (Data.OldList.sortBy
                            @ GHC.IO.FilePath
                            GHC.Classes.$fOrd[]_$s$ccompare1
                            (GHC.Base.map
                               @ DirectoryServer.FileMapping
                               @ [GHC.Types.Char]
                               DirectoryServer.fileName
                               ipv7))) #) } } } }) -}
4adb26c2206b7d5e7268777d8f8d01eb
  directoryApp56 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          [DirectoryServer.FileMapping] #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case CommonServer.logDatabase1
                        DirectoryServer.closeFile8
                        DirectoryServer.closeFile13
                        DirectoryServer.closeFile12
                        DirectoryServer.directoryApp58
                        s of ds1 { (#,#) ipv ipv1 ->
                 case Database.MongoDB.Connection.globalConnectTimeout
                        `cast`
                      (GHC.IORef.N:IORef[0] <Database.MongoDB.Connection.Secs>_N) of wild { GHC.STRef.STRef var# ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ Database.MongoDB.Connection.Secs
                        var#
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv3 of ww { GHC.Types.D# ww1 ->
                 case Database.MongoDB.Connection.$wconnect'
                        ww1
                        MongoDbConnector.connectToDatabase3
                        Database.MongoDB.Connection.defaultPort
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 let {
                   r1 :: Database.MongoDB.Query.MongoContext {- Strictness: m -}
                   = Database.MongoDB.Query.MongoContext
                       ipv5
                       Database.MongoDB.Query.master
                       MongoDbConnector.connectToDatabase2
                 } in
                 case (Database.MongoDB.Query.$wfind
                         @ GHC.Types.IO
                         Control.Monad.IO.Class.$fMonadIOIO
                         Control.Monad.Trans.Control.$fMonadBaseControlIOIO
                         (GHC.Types.[] @ Database.MongoDB.Internal.Protocol.QueryOption)
                         DirectoryServer.directoryApp57
                         (GHC.Types.[] @ Data.Bson.Field)
                         Database.MongoDB.Query.$fSelectQuery1
                         Database.MongoDB.Query.$fSelectQuery1
                         (GHC.Types.[] @ Data.Bson.Field)
                         GHC.Types.False
                         Database.MongoDB.Query.$fSelectQuery1
                         (GHC.Types.[] @ Data.Bson.Field)
                         r1)
                        `cast`
                      (GHC.Types.N:IO[0] <Database.MongoDB.Query.Cursor>_R)
                        ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                 case ((MongoDbConnector.drainCursor_drainCursor'
                          ipv7
                          (GHC.Types.[] @ Data.Bson.Document))
                         `cast`
                       (Control.Monad.Trans.Reader.N:ReaderT[0]
                            <*>_N
                            <Database.MongoDB.Query.MongoContext>_R
                            <GHC.Types.IO>_R
                            <[Data.Bson.Document]>_N)
                         r1)
                        `cast`
                      (GHC.Types.N:IO[0] <[Data.Bson.Document]>_R)
                        ipv6 of ds5 { (#,#) ipv8 ipv9 ->
                 (# ipv8,
                    Data.Maybe.mapMaybe
                      @ [Data.Bson.Field]
                      @ DirectoryServer.FileMapping
                      DirectoryServer.$fFromBSONFileMapping_$cfromBSON
                      ipv9 #) } } } } } } }) -}
4f2bfb9b052937412a7310c93ba385e9
  directoryApp57 :: Database.MongoDB.Query.Selection
  {- Unfolding: (Database.MongoDB.Query.Select
                   (GHC.Types.[] @ Data.Bson.Field)
                   DirectoryServer.closeFile10) -}
06f85b20bf2b474799911a8eaa38ccaf
  directoryApp58 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ALL"#) -}
50e6f74bd4e5e3802da7900ead6b4985
  directoryApp59 ::
    [CommonServer.Identity]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <S,1*U><S,U> -}
e46b6c8142e757e478cd78a3325b0e3d
  directoryApp6 :: Servant.Server.Internal.Router.Router ()
  {- Unfolding: (Servant.Server.Internal.$w$croute2
                   @ *
                   @ '[Servant.API.ContentTypes.JSON]
                   @ CommonServer.Identity
                   @ (Servant.API.Verbs.Verb
                        'Network.HTTP.Types.Method.POST
                        200
                        '[Servant.API.ContentTypes.JSON]
                        CommonServer.Response)
                   @ '[]
                   DirectoryServer.directoryApp20
                     `cast`
                   (Sym (Servant.API.ContentTypes.N:AllCTUnrender[0]
                             <'[Servant.API.ContentTypes.JSON]>_N <CommonServer.Identity>_N))
                   DirectoryServer.directoryApp18
                     `cast`
                   (Sym (Servant.Server.Internal.N:HasServer[0]
                             <*>_N
                             <Servant.API.Verbs.Verb
                                'Network.HTTP.Types.Method.POST
                                200
                                '[Servant.API.ContentTypes.JSON]
                                CommonServer.Response>_N
                             <'[]>_N))
                   @ ()
                   (Data.Proxy.Proxy
                      @ *
                      @ (Servant.API.ReqBody.ReqBody
                           '[Servant.API.ContentTypes.JSON] CommonServer.Identity
                         Servant.API.Sub.:> Servant.API.Verbs.Verb
                                              'Network.HTTP.Types.Method.POST
                                              200
                                              '[Servant.API.ContentTypes.JSON]
                                              CommonServer.Response))
                   Servant.Server.Internal.Context.$WEmptyContext
                   DirectoryServer.directoryApp7
                     `cast`
                   (Servant.Server.Internal.RoutingApplication.Delayed
                      <()>_R
                      (Sub (Servant.Server.Internal.D:R:ServerTTYPE:>m4[0]
                                <*>_N
                                <"join">_N
                                <Servant.API.ReqBody.ReqBody
                                   '[Servant.API.ContentTypes.JSON] CommonServer.Identity
                                 Servant.API.Sub.:> Servant.API.Verbs.Post
                                                      '[Servant.API.ContentTypes.JSON]
                                                      CommonServer.Response>_N
                                <Control.Monad.Trans.Except.ExceptT
                                   Servant.Server.Internal.ServantErr.ServantErr
                                   GHC.Types.IO>_N)))_R) -}
c5c3851c404831264f7dfb3fd9bdc736
  directoryApp60 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          [CommonServer.Identity] #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case CommonServer.logDatabase1
                        DirectoryServer.closeFile8
                        DirectoryServer.directoryApp16
                        DirectoryServer.closeFile12
                        DirectoryServer.directoryApp58
                        s of ds1 { (#,#) ipv ipv1 ->
                 case Database.MongoDB.Connection.globalConnectTimeout
                        `cast`
                      (GHC.IORef.N:IORef[0] <Database.MongoDB.Connection.Secs>_N) of wild { GHC.STRef.STRef var# ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ Database.MongoDB.Connection.Secs
                        var#
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv3 of ww { GHC.Types.D# ww1 ->
                 case Database.MongoDB.Connection.$wconnect'
                        ww1
                        MongoDbConnector.connectToDatabase3
                        Database.MongoDB.Connection.defaultPort
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 let {
                   r1 :: Database.MongoDB.Query.MongoContext {- Strictness: m -}
                   = Database.MongoDB.Query.MongoContext
                       ipv5
                       Database.MongoDB.Query.master
                       MongoDbConnector.connectToDatabase2
                 } in
                 case (Database.MongoDB.Query.$wfind
                         @ GHC.Types.IO
                         Control.Monad.IO.Class.$fMonadIOIO
                         Control.Monad.Trans.Control.$fMonadBaseControlIOIO
                         (GHC.Types.[] @ Database.MongoDB.Internal.Protocol.QueryOption)
                         DirectoryServer.directoryApp61
                         (GHC.Types.[] @ Data.Bson.Field)
                         Database.MongoDB.Query.$fSelectQuery1
                         Database.MongoDB.Query.$fSelectQuery1
                         (GHC.Types.[] @ Data.Bson.Field)
                         GHC.Types.False
                         Database.MongoDB.Query.$fSelectQuery1
                         (GHC.Types.[] @ Data.Bson.Field)
                         r1)
                        `cast`
                      (GHC.Types.N:IO[0] <Database.MongoDB.Query.Cursor>_R)
                        ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                 case ((MongoDbConnector.drainCursor_drainCursor'
                          ipv7
                          (GHC.Types.[] @ Data.Bson.Document))
                         `cast`
                       (Control.Monad.Trans.Reader.N:ReaderT[0]
                            <*>_N
                            <Database.MongoDB.Query.MongoContext>_R
                            <GHC.Types.IO>_R
                            <[Data.Bson.Document]>_N)
                         r1)
                        `cast`
                      (GHC.Types.N:IO[0] <[Data.Bson.Document]>_R)
                        ipv6 of ds5 { (#,#) ipv8 ipv9 ->
                 (# ipv8,
                    Data.Maybe.mapMaybe
                      @ [Data.Bson.Field]
                      @ CommonServer.Identity
                      CommonServer.$fFromBSONIdentity_$cfromBSON
                      ipv9 #) } } } } } } }) -}
bd5dd656ac03fad1a54c1a2d6c19c11c
  directoryApp61 :: Database.MongoDB.Query.Selection
  {- Unfolding: (Database.MongoDB.Query.Select
                   (GHC.Types.[] @ Data.Bson.Field)
                   DirectoryServer.deleteDatabases2) -}
33f45f5ff333aa3ff434421f13727d54
  directoryApp62 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "GET files"#) -}
1d20cdb7d230970ba9c715cb5693d5fa
  directoryApp63 ::
    Servant.Server.Internal.RoutingApplication.Delayed
      ()
      (Servant.Server.Internal.Server
         (Servant.API.Verbs.Verb
            'Network.HTTP.Types.Method.GET
            200
            '[Servant.API.ContentTypes.JSON]
            [GHC.IO.FilePath]))
    -> Servant.Server.Internal.Router.Router ()
  {- Unfolding: (Servant.Server.Internal.$w$croute8
                   @ Network.HTTP.Types.Method.StdMethod
                   @ '[Servant.API.ContentTypes.JSON]
                   @ [GHC.IO.FilePath]
                   @ 'Network.HTTP.Types.Method.GET
                   @ 200
                   @ '[]
                   DirectoryServer.$s$fAllCTRender:a6
                   Servant.API.Verbs.$fReflectMethodStdMethodGET_$creflectMethod
                     `cast`
                   (Sym (Servant.API.Verbs.N:ReflectMethod[0]
                             <Network.HTTP.Types.Method.StdMethod>_N
                             <'Network.HTTP.Types.Method.GET>_N))
                   DirectoryServer.directoryApp19
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SNat[0] <200>_P))
                        (Sym (GHC.TypeLits.N:KnownNat[0]) <200>_N))
                   @ ()
                   (Data.Proxy.Proxy
                      @ *
                      @ (Servant.API.Verbs.Verb
                           'Network.HTTP.Types.Method.GET
                           200
                           '[Servant.API.ContentTypes.JSON]
                           [GHC.IO.FilePath]))) -}
42a23d43513d47777430263d17567036
  directoryApp64 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        8#
                        s1 of ds1 { (#,#) ipv ipv1 ->
                 Servant.Server.Internal.$wouter
                   (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                   Servant.Server.Internal.$fHasServerTYPE:>context20
                   DirectoryServer.directoryApp65
                   0#
                   ipv }) -}
063088cd104ba7178f7399656a4958e5
  directoryApp65 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "files"#) -}
e6939ae0b930a04835756d63c3ab3005
  directoryApp7 ::
    Servant.Server.Internal.RoutingApplication.Delayed
      ()
      (Servant.Server.Internal.Server
         ("join"
          Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                '[Servant.API.ContentTypes.JSON] CommonServer.Identity
                              Servant.API.Sub.:> Servant.API.Verbs.Post
                                                   '[Servant.API.ContentTypes.JSON]
                                                   CommonServer.Response)))
  {- Unfolding: (Servant.Server.Internal.RoutingApplication.Delayed
                   @ ()
                   @ (Servant.Server.Internal.Server
                        ("join"
                         Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                               '[Servant.API.ContentTypes.JSON]
                                               CommonServer.Identity
                                             Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                  '[Servant.API.ContentTypes.JSON]
                                                                  CommonServer.Response)))
                   @ ()
                   @ ()
                   @ ()
                   (Servant.Server.Internal.RoutingApplication.emptyDelayed2 @ ())
                     `cast`
                   (<()>_R
                    ->_R Trans
                             (<Network.Wai.Internal.Request>_R
                              ->_R Sym (GHC.Types.N:IO[0]
                                            <Servant.Server.Internal.RoutingApplication.RouteResult
                                               ()>_R))
                             (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                       <()>_R)))
                   Servant.Server.Internal.RoutingApplication.emptyDelayed1
                     `cast`
                   (Trans
                        (<Network.Wai.Internal.Request>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Servant.Server.Internal.RoutingApplication.RouteResult
                                          ()>_R))
                        (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                  <()>_R)))
                   Servant.Server.Internal.RoutingApplication.emptyDelayed1
                     `cast`
                   (Trans
                        (<Network.Wai.Internal.Request>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Servant.Server.Internal.RoutingApplication.RouteResult
                                          ()>_R))
                        (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                  <()>_R)))
                   Servant.Server.Internal.RoutingApplication.emptyDelayed1
                     `cast`
                   (Trans
                        (<Network.Wai.Internal.Request>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Servant.Server.Internal.RoutingApplication.RouteResult
                                          ()>_R))
                        (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                  <()>_R)))
                   DirectoryServer.directoryApp8) -}
b25cd75e35654758995004a40ef3c7c3
  directoryApp8 ::
    ()
    -> ()
    -> ()
    -> Network.Wai.Internal.Request
    -> Servant.Server.Internal.RoutingApplication.RouteResult
         (Servant.Server.Internal.Server
            ("join"
             Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                   '[Servant.API.ContentTypes.JSON] CommonServer.Identity
                                 Servant.API.Sub.:> Servant.API.Verbs.Post
                                                      '[Servant.API.ContentTypes.JSON]
                                                      CommonServer.Response)))
  {- Arity: 4,
     Unfolding: (\ (c :: ())
                   (a1 :: ())
                   (b1 :: ())
                   (req :: Network.Wai.Internal.Request) ->
                 DirectoryServer.directoryApp9) -}
34a54cbd6d4179411a2399255a56c288
  directoryApp9 ::
    Servant.Server.Internal.RoutingApplication.RouteResult
      (Servant.Server.Internal.Server
         ("join"
          Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                '[Servant.API.ContentTypes.JSON] CommonServer.Identity
                              Servant.API.Sub.:> Servant.API.Verbs.Post
                                                   '[Servant.API.ContentTypes.JSON]
                                                   CommonServer.Response)))
  {- Unfolding: (Servant.Server.Internal.RoutingApplication.Route
                   @ (Servant.Server.Internal.Server
                        ("join"
                         Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                               '[Servant.API.ContentTypes.JSON]
                                               CommonServer.Identity
                                             Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                  '[Servant.API.ContentTypes.JSON]
                                                                  CommonServer.Response)))
                   DirectoryServer.directoryApp10
                     `cast`
                   (Trans
                        (<CommonServer.Identity>_R
                         ->_R Trans
                                  (Sym (GHC.Types.N:IO[0]
                                            <Data.Either.Either
                                               Servant.Server.Internal.ServantErr.ServantErr
                                               CommonServer.Response>_R))
                                  (Trans
                                       (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                 <Servant.Server.Internal.ServantErr.ServantErr>_N
                                                 <GHC.Types.IO>_R
                                                 <CommonServer.Response>_N))
                                       (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPEVerbm0[0]
                                                      <Network.HTTP.Types.Method.StdMethod>_N
                                                      <'[Servant.API.ContentTypes.JSON]>_N
                                                      <CommonServer.Response>_N
                                                      <'Network.HTTP.Types.Method.POST>_N
                                                      <200>_N
                                                      <Control.Monad.Trans.Except.ExceptT
                                                         Servant.Server.Internal.ServantErr.ServantErr
                                                         GHC.Types.IO>_N)))))
                        (Trans
                             (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPE:>m5[0]
                                            <*>_N
                                            <'[Servant.API.ContentTypes.JSON]>_N
                                            <CommonServer.Identity>_N
                                            <Servant.API.Verbs.Verb
                                               'Network.HTTP.Types.Method.POST
                                               200
                                               '[Servant.API.ContentTypes.JSON]
                                               CommonServer.Response>_N
                                            <Control.Monad.Trans.Except.ExceptT
                                               Servant.Server.Internal.ServantErr.ServantErr
                                               GHC.Types.IO>_N)))
                             (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPE:>m4[0]
                                            <*>_N
                                            <"join">_N
                                            <Servant.API.ReqBody.ReqBody
                                               '[Servant.API.ContentTypes.JSON]
                                               CommonServer.Identity
                                             Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                  '[Servant.API.ContentTypes.JSON]
                                                                  CommonServer.Response>_N
                                            <Control.Monad.Trans.Except.ExceptT
                                               Servant.Server.Internal.ServantErr.ServantErr
                                               GHC.Types.IO>_N)))))) -}
3b26661687892a33b2f1222e845f8c33
  directoryApp_r :: Servant.Server.Internal.Router.Router ()
  {- Unfolding: (Servant.Server.Internal.Router.choice
                   @ ()
                   @ Servant.Server.Internal.RoutingApplication.RoutingApplication
                   DirectoryServer.directoryApp49
                   DirectoryServer.directoryApp2) -}
07d53f0d8ca2937b31c5904f6efc19ff
  directoryServer ::
    Servant.Server.Internal.Server CommonServerApi.DirectoryApi
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.directoryServer1
                  `cast`
                (Trans
                     (Trans
                          (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPEVerbm0[0]
                                         <Network.HTTP.Types.Method.StdMethod>_N
                                         <'[Servant.API.ContentTypes.JSON]>_N
                                         <[GHC.IO.FilePath]>_N
                                         <'Network.HTTP.Types.Method.GET>_N
                                         <200>_N
                                         <Control.Monad.Trans.Except.ExceptT
                                            Servant.Server.Internal.ServantErr.ServantErr
                                            GHC.Types.IO>_N)))
                          (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPE:>m4[0]
                                         <*>_N
                                         <"files">_N
                                         <Servant.API.Verbs.Verb
                                            'Network.HTTP.Types.Method.GET
                                            200
                                            '[Servant.API.ContentTypes.JSON]
                                            [GHC.IO.FilePath]>_N
                                         <Control.Monad.Trans.Except.ExceptT
                                            Servant.Server.Internal.ServantErr.ServantErr
                                            GHC.Types.IO>_N)))
                      Servant.API.Alternative.:<|> Trans
                                                       (Trans
                                                            (<[GHC.Types.Char]>_R
                                                             ->_R Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPEVerbm0[0]
                                                                                <Network.HTTP.Types.Method.StdMethod>_N
                                                                                <'[Servant.API.ContentTypes.JSON]>_N
                                                                                <CommonServer.File>_N
                                                                                <'Network.HTTP.Types.Method.GET>_N
                                                                                <200>_N
                                                                                <Control.Monad.Trans.Except.ExceptT
                                                                                   Servant.Server.Internal.ServantErr.ServantErr
                                                                                   GHC.Types.IO>_N)))
                                                            (Trans
                                                                 (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPE:>m11[0]
                                                                                <*>_N
                                                                                <"fileName">_N
                                                                                <[GHC.Types.Char]>_N
                                                                                <Servant.API.Verbs.Verb
                                                                                   'Network.HTTP.Types.Method.GET
                                                                                   200
                                                                                   '[Servant.API.ContentTypes.JSON]
                                                                                   CommonServer.File>_N
                                                                                <Control.Monad.Trans.Except.ExceptT
                                                                                   Servant.Server.Internal.ServantErr.ServantErr
                                                                                   GHC.Types.IO>_N)))
                                                                 (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPE:>m4[0]
                                                                                <*>_N
                                                                                <"open">_N
                                                                                <Servant.API.Capture.Capture
                                                                                   "fileName"
                                                                                   GHC.Base.String
                                                                                 Servant.API.Sub.:> Servant.API.Verbs.Get
                                                                                                      '[Servant.API.ContentTypes.JSON]
                                                                                                      CommonServer.File>_N
                                                                                <Control.Monad.Trans.Except.ExceptT
                                                                                   Servant.Server.Internal.ServantErr.ServantErr
                                                                                   GHC.Types.IO>_N))))
                                                        Servant.API.Alternative.:<|> Trans
                                                                                         (Trans
                                                                                              (<CommonServer.File>_R
                                                                                               ->_R Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPEVerbm0[0]
                                                                                                                  <Network.HTTP.Types.Method.StdMethod>_N
                                                                                                                  <'[Servant.API.ContentTypes.JSON]>_N
                                                                                                                  <CommonServer.Response>_N
                                                                                                                  <'Network.HTTP.Types.Method.POST>_N
                                                                                                                  <200>_N
                                                                                                                  <Control.Monad.Trans.Except.ExceptT
                                                                                                                     Servant.Server.Internal.ServantErr.ServantErr
                                                                                                                     GHC.Types.IO>_N)))
                                                                                              (Trans
                                                                                                   (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPE:>m5[0]
                                                                                                                  <*>_N
                                                                                                                  <'[Servant.API.ContentTypes.JSON]>_N
                                                                                                                  <CommonServer.File>_N
                                                                                                                  <Servant.API.Verbs.Verb
                                                                                                                     'Network.HTTP.Types.Method.POST
                                                                                                                     200
                                                                                                                     '[Servant.API.ContentTypes.JSON]
                                                                                                                     CommonServer.Response>_N
                                                                                                                  <Control.Monad.Trans.Except.ExceptT
                                                                                                                     Servant.Server.Internal.ServantErr.ServantErr
                                                                                                                     GHC.Types.IO>_N)))
                                                                                                   (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPE:>m4[0]
                                                                                                                  <*>_N
                                                                                                                  <"close">_N
                                                                                                                  <Servant.API.ReqBody.ReqBody
                                                                                                                     '[Servant.API.ContentTypes.JSON]
                                                                                                                     CommonServer.File
                                                                                                                   Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                                                                                        '[Servant.API.ContentTypes.JSON]
                                                                                                                                        CommonServer.Response>_N
                                                                                                                  <Control.Monad.Trans.Except.ExceptT
                                                                                                                     Servant.Server.Internal.ServantErr.ServantErr
                                                                                                                     GHC.Types.IO>_N))))
                                                                                          Servant.API.Alternative.:<|> Trans
                                                                                                                           (<CommonServer.Identity>_R
                                                                                                                            ->_R Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPEVerbm0[0]
                                                                                                                                               <Network.HTTP.Types.Method.StdMethod>_N
                                                                                                                                               <'[Servant.API.ContentTypes.JSON]>_N
                                                                                                                                               <CommonServer.Response>_N
                                                                                                                                               <'Network.HTTP.Types.Method.POST>_N
                                                                                                                                               <200>_N
                                                                                                                                               <Control.Monad.Trans.Except.ExceptT
                                                                                                                                                  Servant.Server.Internal.ServantErr.ServantErr
                                                                                                                                                  GHC.Types.IO>_N)))
                                                                                                                           (Trans
                                                                                                                                (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPE:>m5[0]
                                                                                                                                               <*>_N
                                                                                                                                               <'[Servant.API.ContentTypes.JSON]>_N
                                                                                                                                               <CommonServer.Identity>_N
                                                                                                                                               <Servant.API.Verbs.Verb
                                                                                                                                                  'Network.HTTP.Types.Method.POST
                                                                                                                                                  200
                                                                                                                                                  '[Servant.API.ContentTypes.JSON]
                                                                                                                                                  CommonServer.Response>_N
                                                                                                                                               <Control.Monad.Trans.Except.ExceptT
                                                                                                                                                  Servant.Server.Internal.ServantErr.ServantErr
                                                                                                                                                  GHC.Types.IO>_N)))
                                                                                                                                (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPE:>m4[0]
                                                                                                                                               <*>_N
                                                                                                                                               <"join">_N
                                                                                                                                               <Servant.API.ReqBody.ReqBody
                                                                                                                                                  '[Servant.API.ContentTypes.JSON]
                                                                                                                                                  CommonServer.Identity
                                                                                                                                                Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                                                                                                                     '[Servant.API.ContentTypes.JSON]
                                                                                                                                                                     CommonServer.Response>_N
                                                                                                                                               <Control.Monad.Trans.Except.ExceptT
                                                                                                                                                  Servant.Server.Internal.ServantErr.ServantErr
                                                                                                                                                  GHC.Types.IO>_N)))))_R
                                                                                         (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPE:<|>m[0]
                                                                                                        <"close"
                                                                                                         Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                                                                                                               '[Servant.API.ContentTypes.JSON]
                                                                                                                               CommonServer.File
                                                                                                                             Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                                                                                                  '[Servant.API.ContentTypes.JSON]
                                                                                                                                                  CommonServer.Response)>_N
                                                                                                        <"join"
                                                                                                         Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                                                                                                               '[Servant.API.ContentTypes.JSON]
                                                                                                                               CommonServer.Identity
                                                                                                                             Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                                                                                                  '[Servant.API.ContentTypes.JSON]
                                                                                                                                                  CommonServer.Response)>_N
                                                                                                        <Control.Monad.Trans.Except.ExceptT
                                                                                                           Servant.Server.Internal.ServantErr.ServantErr
                                                                                                           GHC.Types.IO>_N))))_R
                                                       (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPE:<|>m[0]
                                                                      <"open"
                                                                       Servant.API.Sub.:> (Servant.API.Capture.Capture
                                                                                             "fileName"
                                                                                             GHC.Base.String
                                                                                           Servant.API.Sub.:> Servant.API.Verbs.Get
                                                                                                                '[Servant.API.ContentTypes.JSON]
                                                                                                                CommonServer.File)>_N
                                                                      <("close"
                                                                        Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                                                                              '[Servant.API.ContentTypes.JSON]
                                                                                              CommonServer.File
                                                                                            Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                                                                 '[Servant.API.ContentTypes.JSON]
                                                                                                                 CommonServer.Response))
                                                                       Servant.API.Alternative.:<|> ("join"
                                                                                                     Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                                                                                                           '[Servant.API.ContentTypes.JSON]
                                                                                                                           CommonServer.Identity
                                                                                                                         Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                                                                                              '[Servant.API.ContentTypes.JSON]
                                                                                                                                              CommonServer.Response))>_N
                                                                      <Control.Monad.Trans.Except.ExceptT
                                                                         Servant.Server.Internal.ServantErr.ServantErr
                                                                         GHC.Types.IO>_N))))_R
                     (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPE:<|>m[0]
                                    <"files"
                                     Servant.API.Sub.:> Servant.API.Verbs.Get
                                                          '[Servant.API.ContentTypes.JSON]
                                                          [GHC.IO.FilePath]>_N
                                    <("open"
                                      Servant.API.Sub.:> (Servant.API.Capture.Capture
                                                            "fileName" GHC.Base.String
                                                          Servant.API.Sub.:> Servant.API.Verbs.Get
                                                                               '[Servant.API.ContentTypes.JSON]
                                                                               CommonServer.File))
                                     Servant.API.Alternative.:<|> (("close"
                                                                    Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                                                                          '[Servant.API.ContentTypes.JSON]
                                                                                          CommonServer.File
                                                                                        Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                                                             '[Servant.API.ContentTypes.JSON]
                                                                                                             CommonServer.Response))
                                                                   Servant.API.Alternative.:<|> ("join"
                                                                                                 Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                                                                                                       '[Servant.API.ContentTypes.JSON]
                                                                                                                       CommonServer.Identity
                                                                                                                     Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                                                                                          '[Servant.API.ContentTypes.JSON]
                                                                                                                                          CommonServer.Response)))>_N
                                    <Control.Monad.Trans.Except.ExceptT
                                       Servant.Server.Internal.ServantErr.ServantErr
                                       GHC.Types.IO>_N)))) -}
6d58a3733760177f24d32aaca1eb88ea
  directoryServer1 ::
    CommonServerApi.ApiHandler [GHC.IO.FilePath]
    Servant.API.Alternative.:<|> ((GHC.Base.String
                                   -> CommonServerApi.ApiHandler CommonServer.File)
                                  Servant.API.Alternative.:<|> ((CommonServer.File
                                                                 -> CommonServerApi.ApiHandler
                                                                      CommonServer.Response)
                                                                Servant.API.Alternative.:<|> (CommonServer.Identity
                                                                                              -> CommonServerApi.ApiHandler
                                                                                                   CommonServer.Response)))
  {- Strictness: m,
     Unfolding: (Servant.API.Alternative.:<|>
                   @ (CommonServerApi.ApiHandler [GHC.IO.FilePath])
                   @ ((GHC.Base.String
                       -> CommonServerApi.ApiHandler CommonServer.File)
                      Servant.API.Alternative.:<|> ((CommonServer.File
                                                     -> CommonServerApi.ApiHandler
                                                          CommonServer.Response)
                                                    Servant.API.Alternative.:<|> (CommonServer.Identity
                                                                                  -> CommonServerApi.ApiHandler
                                                                                       CommonServer.Response)))
                   DirectoryServer.directoryApp55
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     Servant.Server.Internal.ServantErr.ServantErr
                                     [GHC.IO.FilePath]>_R))
                        (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                  <Servant.Server.Internal.ServantErr.ServantErr>_N
                                  <GHC.Types.IO>_R
                                  <[GHC.IO.FilePath]>_N)))
                   DirectoryServer.directoryServer2) -}
b54ca009640fa6507bf26881223d3472
  directoryServer2 ::
    (GHC.Base.String -> CommonServerApi.ApiHandler CommonServer.File)
    Servant.API.Alternative.:<|> ((CommonServer.File
                                   -> CommonServerApi.ApiHandler CommonServer.Response)
                                  Servant.API.Alternative.:<|> (CommonServer.Identity
                                                                -> CommonServerApi.ApiHandler
                                                                     CommonServer.Response))
  {- Strictness: m,
     Unfolding: (Servant.API.Alternative.:<|>
                   @ (GHC.Base.String -> CommonServerApi.ApiHandler CommonServer.File)
                   @ ((CommonServer.File
                       -> CommonServerApi.ApiHandler CommonServer.Response)
                      Servant.API.Alternative.:<|> (CommonServer.Identity
                                                    -> CommonServerApi.ApiHandler
                                                         CommonServer.Response))
                   DirectoryServer.directoryApp41
                     `cast`
                   (<GHC.Base.String>_R
                    ->_R Trans
                             (Sym (GHC.Types.N:IO[0]
                                       <Data.Either.Either
                                          Servant.Server.Internal.ServantErr.ServantErr
                                          CommonServer.File>_R))
                             (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                       <Servant.Server.Internal.ServantErr.ServantErr>_N
                                       <GHC.Types.IO>_R
                                       <CommonServer.File>_N)))
                   DirectoryServer.directoryServer3) -}
2b130a9728ffc95e67c80ea51dfc084d
  directoryServer3 ::
    (CommonServer.File
     -> CommonServerApi.ApiHandler CommonServer.Response)
    Servant.API.Alternative.:<|> (CommonServer.Identity
                                  -> CommonServerApi.ApiHandler CommonServer.Response)
  {- Strictness: m,
     Unfolding: (Servant.API.Alternative.:<|>
                   @ (CommonServer.File
                      -> CommonServerApi.ApiHandler CommonServer.Response)
                   @ (CommonServer.Identity
                      -> CommonServerApi.ApiHandler CommonServer.Response)
                   DirectoryServer.closeFile1
                     `cast`
                   (<CommonServer.File>_R
                    ->_R Trans
                             (Sym (GHC.Types.N:IO[0]
                                       <Data.Either.Either
                                          Servant.Server.Internal.ServantErr.ServantErr
                                          CommonServer.Response>_R))
                             (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                       <Servant.Server.Internal.ServantErr.ServantErr>_N
                                       <GHC.Types.IO>_R
                                       <CommonServer.Response>_N)))
                   DirectoryServer.directoryApp10
                     `cast`
                   (<CommonServer.Identity>_R
                    ->_R Trans
                             (Sym (GHC.Types.N:IO[0]
                                       <Data.Either.Either
                                          Servant.Server.Internal.ServantErr.ServantErr
                                          CommonServer.Response>_R))
                             (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                       <Servant.Server.Internal.ServantErr.ServantErr>_N
                                       <GHC.Types.IO>_R
                                       <CommonServer.Response>_N)))) -}
d44c6dae06d5b177cf678fad1f8aee67
  downloadFromFileServer ::
    GHC.Base.String
    -> CommonServer.Identity -> GHC.Types.IO CommonServer.File
  {- Arity: 3, Strictness: <L,U><L,U(1*U,1*U,A)><S,U>,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.directoryApp42
                  `cast`
                (<GHC.Base.String>_R
                 ->_R <CommonServer.Identity>_R
                 ->_R Sym (GHC.Types.N:IO[0] <CommonServer.File>_R)) -}
526a3d91d9caaef2024cb08a4ce768f6
  fileName :: DirectoryServer.FileMapping -> GHC.IO.FilePath
  RecSel Left DirectoryServer.FileMapping
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SL),1*U(1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: DirectoryServer.FileMapping) ->
                 case ds of wild { DirectoryServer.FileMapping ds1 ds2 -> ds1 }) -}
c772fdf4c6298f90c00dc2efdff8108c
  findFileMapping ::
    GHC.Base.String -> GHC.Types.IO DirectoryServer.FileMapping
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.closeFile9
                  `cast`
                (<GHC.Base.String>_R
                 ->_R Sym (GHC.Types.N:IO[0] <DirectoryServer.FileMapping>_R)) -}
acc671e79ea973819f6dc7f8c50a7a50
  getAllFileMappings :: GHC.Types.IO [DirectoryServer.FileMapping]
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.directoryApp56
                  `cast`
                (Sym (GHC.Types.N:IO[0] <[DirectoryServer.FileMapping]>_R)) -}
15f9aae71928f472d05daa3a630c0a5b
  getAllFileServers :: GHC.Types.IO [CommonServer.Identity]
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.directoryApp60
                  `cast`
                (Sym (GHC.Types.N:IO[0] <[CommonServer.Identity]>_R)) -}
e268c93bd6ff20fcc67ec9ee025cb17b
  getFiles :: CommonServerApi.ApiHandler [GHC.IO.FilePath]
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.directoryApp55
                  `cast`
                (Trans
                     (Sym (GHC.Types.N:IO[0]
                               <Data.Either.Either
                                  Servant.Server.Internal.ServantErr.ServantErr
                                  [GHC.IO.FilePath]>_R))
                     (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                               <Servant.Server.Internal.ServantErr.ServantErr>_N
                               <GHC.Types.IO>_R
                               <[GHC.IO.FilePath]>_N))) -}
95811d3b4e2d5ff825ef49929754e272
  getFilesFromFileServer :: CommonServer.Identity -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <L,U(U,U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.getFilesFromFileServer1
                  `cast`
                (<CommonServer.Identity>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
26c16fe37f0e70e2365d1898a09b87f6
  getFilesFromFileServer1 ::
    CommonServer.Identity
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,U(U,U,U)><S,U>,
     Unfolding: (\ (i :: CommonServer.Identity)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case CommonServer.logConnection1
                        DirectoryServer.closeFile8
                        DirectoryServer.closeFile7
                        DirectoryServer.directoryApp62
                        s of ds1 { (#,#) ipv ipv1 ->
                 case Network.HTTP.Client.Manager.$wnewManager
                        Network.HTTP.Client.Manager.defaultManagerSettings18
                        Network.HTTP.Client.Manager.defaultManagerSettings15
                          `cast`
                        (Sym (GHC.Types.N:IO[0]
                                  <GHC.Base.Maybe Network.Socket.Types.HostAddress
                                   -> GHC.Base.String
                                   -> GHC.Types.Int
                                   -> GHC.Types.IO Network.HTTP.Client.Types.Connection>_R))
                        Network.HTTP.Client.Manager.defaultManagerSettings14
                          `cast`
                        (Sym (GHC.Types.N:IO[0]
                                  <GHC.Base.Maybe Network.Socket.Types.HostAddress
                                   -> GHC.Base.String
                                   -> GHC.Types.Int
                                   -> GHC.Types.IO Network.HTTP.Client.Types.Connection>_R))
                        Network.HTTP.Client.Manager.defaultManagerSettings11
                          `cast`
                        (Sym (GHC.Types.N:IO[0]
                                  <Data.ByteString.Internal.ByteString
                                   -> (Network.HTTP.Client.Types.Connection -> GHC.Types.IO ())
                                   -> GHC.Base.String
                                   -> GHC.Base.Maybe Network.Socket.Types.HostAddress
                                   -> GHC.Base.String
                                   -> GHC.Types.Int
                                   -> GHC.Types.IO Network.HTTP.Client.Types.Connection>_R))
                        Network.HTTP.Client.Manager.defaultManagerSettings9
                        Network.HTTP.Client.Manager.defaultManagerSettings8
                        Network.HTTP.Client.Manager.defaultManagerSettings6
                          `cast`
                        (forall (a :: <*>_N).
                         <GHC.Types.IO a>_R ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                        Network.HTTP.Client.Manager.defaultManagerSettings5
                        (GHC.Base.returnIO1 @ Network.HTTP.Client.Types.Request)
                          `cast`
                        (<Network.HTTP.Client.Types.Request>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Network.HTTP.Client.Types.Request>_R))
                        Network.HTTP.Client.Manager.defaultManagerSettings1
                          `cast`
                        (Trans
                             (<GHC.Types.Bool>_R
                              ->_R Sym (GHC.Types.N:IO[0]
                                            <Network.HTTP.Client.Types.Request
                                             -> Network.HTTP.Client.Types.Request>_R))
                             (Sym (Network.HTTP.Client.Types.N:ProxyOverride[0])))
                        Network.HTTP.Client.Manager.defaultManagerSettings1
                          `cast`
                        (Trans
                             (<GHC.Types.Bool>_R
                              ->_R Sym (GHC.Types.N:IO[0]
                                            <Network.HTTP.Client.Types.Request
                                             -> Network.HTTP.Client.Types.Request>_R))
                             (Sym (Network.HTTP.Client.Types.N:ProxyOverride[0])))
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case (CommonServerApi.directoryClientFiles_eta
                         `cast`
                       (Trans
                            (Servant.Common.Req.N:ClientM[0] <([Network.HTTP.Types.Header.Header],
                                                               [GHC.IO.FilePath])>_N)
                            (Control.Monad.Trans.Reader.N:ReaderT[0]
                                 <*>_N
                                 <Servant.Common.Req.ClientEnv>_R
                                 <Control.Monad.Trans.Except.ExceptT
                                    Servant.Common.Req.ServantError GHC.Types.IO>_R
                                 <([Network.HTTP.Types.Header.Header], [GHC.IO.FilePath])>_N))
                         (Servant.Common.Req.ClientEnv
                            ipv3
                            (Servant.Common.BaseUrl.BaseUrl
                               Servant.Common.BaseUrl.Http
                               (case i of wild { CommonServer.Identity ds3 ds4 ds5 -> ds3 })
                               (case Text.Read.readEither6
                                       @ GHC.Types.Int
                                       (Text.ParserCombinators.ReadP.run
                                          @ GHC.Types.Int
                                          DirectoryServer.closeFile5
                                          (case i of wild { CommonServer.Identity ds3 ds4 ds5 ->
                                           ds4 })) of wild {
                                  [] -> DirectoryServer.getFilesFromFileServer5
                                  : x ds
                                  -> case ds of wild1 {
                                       [] -> x
                                       : ipv4 ipv5 -> DirectoryServer.getFilesFromFileServer4 } })
                               (GHC.Types.[] @ GHC.Types.Char))))
                        `cast`
                      (Trans
                           (Control.Monad.Trans.Except.N:ExceptT[0]
                                <Servant.Common.Req.ServantError>_N
                                <GHC.Types.IO>_R
                                <([Network.HTTP.Types.Header.Header], [GHC.IO.FilePath])>_N)
                           (GHC.Types.N:IO[0]
                                <Data.Either.Either
                                   Servant.Common.Req.ServantError
                                   ([Network.HTTP.Types.Header.Header], [GHC.IO.FilePath])>_R))
                        ipv2 of ds { (#,#) ipv4 ipv5 ->
                 case ipv5 of wild {
                   Data.Either.Left x
                   -> CommonServer.logError1
                        DirectoryServer.closeFile8
                        (Servant.Common.Req.$fExceptionServantError_$cshow x)
                        ipv4
                   Data.Either.Right y
                   -> case y of wild1 { (,) ds3 y1 ->
                      letrec {
                        go4 :: [GHC.Base.String]
                               -> GHC.Prim.State# GHC.Prim.RealWorld
                               -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                          {- Arity: 2, Strictness: <S,1*U><S,U> -}
                        = \ (ds4 :: [GHC.Base.String])
                            (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                          case ds4 of wild2 {
                            [] -> (# eta, GHC.Tuple.() #)
                            : y2 ys
                            -> case DirectoryServer.getFilesFromFileServer3
                                      i
                                      (GHC.Types.[] @ DirectoryServer.FileMapping)
                                      y2
                                      eta of ds5 { (#,#) ipv6 ipv7 ->
                               go4 ys ipv6 } }
                      } in
                      case go4 y1 ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                      CommonServer.logAction1
                        DirectoryServer.closeFile8
                        DirectoryServer.getFilesFromFileServer2
                        (GHC.Types.[] @ GHC.Types.Char)
                        ipv6 } } } } } }) -}
173676f433deec76961618ef16adbc04
  getFilesFromFileServer2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Done"#) -}
1ca535d915ae6579243d2da12902eb1b
  getFilesFromFileServer3 ::
    CommonServer.Identity
    -> [DirectoryServer.FileMapping]
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          [DirectoryServer.FileMapping] #)
  {- Arity: 4, Strictness: <L,U><L,U><L,U><S,U>,
     Unfolding: (\ (id :: CommonServer.Identity)
                   (array :: [DirectoryServer.FileMapping])
                   (filename :: GHC.Base.String)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case CommonServer.logDatabase1
                        DirectoryServer.closeFile8
                        DirectoryServer.closeFile13
                        DirectoryServer.directoryApp15
                        filename
                        s of ds1 { (#,#) ipv ipv1 ->
                 case Database.MongoDB.Connection.globalConnectTimeout
                        `cast`
                      (GHC.IORef.N:IORef[0] <Database.MongoDB.Connection.Secs>_N) of wild { GHC.STRef.STRef var# ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ Database.MongoDB.Connection.Secs
                        var#
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv3 of ww { GHC.Types.D# ww1 ->
                 case Database.MongoDB.Connection.$wconnect'
                        ww1
                        MongoDbConnector.connectToDatabase3
                        Database.MongoDB.Connection.defaultPort
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case ((DirectoryServer.directoryApp14
                          DirectoryServer.closeFile10
                          (GHC.Types.:
                             @ (Database.MongoDB.Query.Selector, Data.Bson.Document,
                                [Database.MongoDB.Internal.Protocol.UpdateOption])
                             (GHC.Types.:
                                @ Data.Bson.Field
                                (case DirectoryServer.closeFile11 of dt { Data.Text.Internal.Text ipv6 ipv7 ipv8 ->
                                 Data.Bson.:= dt (Data.Bson.$fValChar_$cvalList filename) })
                                (GHC.Types.[] @ Data.Bson.Field),
                              Data.Bson.Generic.$w$cgenericToBSON1
                                @ (GHC.Generics.S1
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "fileName")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.Rec0 GHC.IO.FilePath)
                                   GHC.Generics.:*: GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "identity")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0 CommonServer.Identity))
                                @ ('GHC.Generics.MetaCons
                                     "FileMapping" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                DirectoryServer.$fToBSONFileMapping2
                                  `cast`
                                (Sym (Data.Bson.Generic.N:GToBSON[0]
                                          <GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "fileName")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.Rec0 GHC.IO.FilePath)
                                           GHC.Generics.:*: GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "identity")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.Rec0
                                                                 CommonServer.Identity)>_N))
                                DirectoryServer.$fToBSONFileMapping_$s$fConstructorMetaMetaCons
                                @ GHC.Prim.Any
                                1#
                                (GHC.Generics.:*:
                                   @ (GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Base.Just "fileName")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.K1 GHC.Generics.R GHC.IO.FilePath))
                                   @ (GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Base.Just "identity")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.K1 GHC.Generics.R CommonServer.Identity))
                                   @ GHC.Prim.Any
                                   filename
                                     `cast`
                                   (Trans
                                        (Sym (GHC.Generics.N:K1[0]
                                                  <GHC.Generics.R>_P
                                                  <GHC.IO.FilePath>_R
                                                  <GHC.Prim.Any>_P))
                                        (Sym (GHC.Generics.N:M1[0]
                                                  <GHC.Generics.S>_P
                                                  <'GHC.Generics.MetaSel
                                                     ('GHC.Base.Just "fileName")
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy>_P
                                                  <GHC.Generics.K1
                                                     GHC.Generics.R
                                                     GHC.IO.FilePath>_R) <GHC.Prim.Any>_N))
                                   id
                                     `cast`
                                   (Trans
                                        (Sym (GHC.Generics.N:K1[0]
                                                  <GHC.Generics.R>_P
                                                  <CommonServer.Identity>_R
                                                  <GHC.Prim.Any>_P))
                                        (Sym (GHC.Generics.N:M1[0]
                                                  <GHC.Generics.S>_P
                                                  <'GHC.Generics.MetaSel
                                                     ('GHC.Base.Just "identity")
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy>_P
                                                  <GHC.Generics.K1
                                                     GHC.Generics.R
                                                     CommonServer.Identity>_R) <GHC.Prim.Any>_N)))
                                  `cast`
                                (Sym (GHC.Generics.N:M1[0]
                                          <GHC.Generics.C>_P
                                          <'GHC.Generics.MetaCons
                                             "FileMapping" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                          <GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "fileName")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1 GHC.Generics.R GHC.IO.FilePath)
                                           GHC.Generics.:*: GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "identity")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R
                                                                 CommonServer.Identity)>_R) <GHC.Prim.Any>_N),
                              Database.MongoDB.Query.repsert1)
                             (GHC.Types.[]
                                @ (Database.MongoDB.Query.Selector, Data.Bson.Document,
                                   [Database.MongoDB.Internal.Protocol.UpdateOption]))))
                         `cast`
                       (Control.Monad.Trans.Reader.N:ReaderT[0]
                            <*>_N
                            <Database.MongoDB.Query.MongoContext>_R
                            <GHC.Types.IO>_R
                            <Database.MongoDB.Query.UpdateResult>_N)
                         (Database.MongoDB.Query.MongoContext
                            ipv5
                            Database.MongoDB.Query.master
                            MongoDbConnector.connectToDatabase2))
                        `cast`
                      (GHC.Types.N:IO[0] <Database.MongoDB.Query.UpdateResult>_R)
                        ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                 (# ipv6,
                    GHC.Types.:
                      @ DirectoryServer.FileMapping
                      (DirectoryServer.FileMapping filename id)
                      array #) } } } } } }) -}
3348fdc5da2d84d0532d4d9a01bcb638
  getFilesFromFileServer4 :: GHC.Types.Int
  {- Strictness: x -}
65625b42f281e2fe7dd02c2f9505125c
  getFilesFromFileServer5 :: GHC.Types.Int
  {- Strictness: x -}
331fb6af8aea899c9eb311c97b73ea2d
  identity :: DirectoryServer.FileMapping -> CommonServer.Identity
  RecSel Left DirectoryServer.FileMapping
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(A,1*U(U,U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: DirectoryServer.FileMapping) ->
                 case ds of wild { DirectoryServer.FileMapping ds1 ds2 -> ds2 }) -}
5e1acd3cc6565974004db63867293182
  joinServer ::
    CommonServer.Identity
    -> CommonServerApi.ApiHandler CommonServer.Response
  {- Arity: 2, Strictness: <L,U(U,U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.directoryApp10
                  `cast`
                (<CommonServer.Identity>_R
                 ->_R Trans
                          (Sym (GHC.Types.N:IO[0]
                                    <Data.Either.Either
                                       Servant.Server.Internal.ServantErr.ServantErr
                                       CommonServer.Response>_R))
                          (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                    <Servant.Server.Internal.ServantErr.ServantErr>_N
                                    <GHC.Types.IO>_R
                                    <CommonServer.Response>_N))) -}
18f45756cdc569f0c9df42f4ab5f1814
  mkDirectoryServer :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.mkDirectoryServer1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <()>_R)) -}
c2cf5dde25e52c57913e81a87cbaa7d0
  mkDirectoryServer1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case System.Directory.createDirectoryIfMissing1
                        GHC.Types.True
                        DirectoryServer.mkDirectoryServer9
                        s of ds1 { (#,#) ipv ipv1 ->
                 case (System.Win32.File.setCurrentDirectory
                         DirectoryServer.mkDirectoryServer9)
                        `cast`
                      (GHC.Types.N:IO[0] <()>_R)
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case CommonServer.logHeading1
                        DirectoryServer.closeFile8
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case CommonServer.logAction1
                        DirectoryServer.closeFile8
                        DirectoryServer.mkDirectoryServer8
                        DirectoryServer.mkDirectoryServer4
                        ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                 case DirectoryServer.deleteDatabases1
                        ipv6 of ds5 { (#,#) ipv8 ipv9 ->
                 Network.Wai.Handler.Warp.Run.$wrunSettings
                   DirectoryServer.mkDirectoryServer2
                   Network.Wai.Handler.Warp.Settings.defaultSettings16
                   Network.Wai.Handler.Warp.Settings.defaultOnException1
                     `cast`
                   (<GHC.Base.Maybe Network.Wai.Internal.Request>_R
                    ->_R <GHC.Exception.SomeException>_R
                    ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                   Network.Wai.Handler.Warp.Settings.defaultOnExceptionResponse
                   Network.Wai.Handler.Warp.Settings.defaultSettings14
                     `cast`
                   (<Network.Socket.Types.SockAddr>_R
                    ->_R Sym (GHC.Types.N:IO[0] <GHC.Types.Bool>_R))
                   Network.Wai.Handler.Warp.Settings.defaultSettings13
                     `cast`
                   (<Network.Socket.Types.SockAddr>_R
                    ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                   Network.Wai.Handler.Warp.Settings.defaultSettings12
                   (GHC.Base.Nothing @ Network.Wai.Handler.Warp.Timeout.Manager)
                   Network.Wai.Handler.Warp.Settings.defaultSettings11
                   Network.Wai.Handler.Warp.Settings.defaultSettings11
                   Network.Wai.Handler.Warp.Settings.defaultSettings9
                     `cast`
                   (Sym (GHC.Types.N:IO[0] <()>_R))
                   Network.Wai.Handler.Warp.Settings.defaultSettings10
                     `cast`
                   (<(forall a. GHC.Types.IO a -> GHC.Types.IO a)
                     -> GHC.Types.IO ()>_R
                    ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                   GHC.Types.False
                   Network.Wai.Handler.Warp.Settings.defaultSettings8
                     `cast`
                   (<GHC.Types.IO ()>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                   Network.Wai.Handler.Warp.Settings.defaultSettings6
                   Network.Wai.Handler.Warp.Settings.defaultSettings4
                   Network.Wai.Handler.Warp.Settings.ProxyProtocolNone
                   Network.Wai.Handler.Warp.Settings.defaultSettings3
                   GHC.Types.True
                   Network.Wai.Handler.Warp.Settings.defaultSettings2
                     `cast`
                   (<Network.Wai.Internal.Request>_R
                    ->_R <Network.HTTP.Types.Status.Status>_R
                    ->_R <GHC.Base.Maybe GHC.Integer.Type.Integer>_R
                    ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                   Network.Wai.Handler.Warp.Settings.defaultSettings1
                     `cast`
                   (<Network.Wai.Internal.Request>_R
                    ->_R <Data.ByteString.Internal.ByteString>_R
                    ->_R <GHC.Integer.Type.Integer>_R
                    ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                   (GHC.Base.Nothing @ GHC.Types.Int)
                   DirectoryServer.directoryApp
                   ipv8 } } } } }) -}
fd5aa5400a3b131a34ccfa13d9dcb3cb
  mkDirectoryServer2 :: Network.Wai.Handler.Warp.Types.Port
  {- Unfolding: (case Text.Read.readEither6
                        @ GHC.Types.Int
                        DirectoryServer.mkDirectoryServer3 of wild {
                   [] -> CommonServer.decryptPort2
                   : x ds
                   -> case ds of wild1 {
                        [] -> x : ipv ipv1 -> CommonServer.decryptPort1 } }) -}
562fca1832f60bbebb17ed8c2bda5a87
  mkDirectoryServer3 :: [(GHC.Types.Int, GHC.Base.String)]
  {- Unfolding: (Text.ParserCombinators.ReadP.run
                   @ GHC.Types.Int
                   CommonServer.decryptPort4
                   CommonServer.directoryServerIdentity1) -}
d74679e09013e7d3b112618865bc087a
  mkDirectoryServer4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   GHC.Show.shows8
                   DirectoryServer.mkDirectoryServer5) -}
a24ad04b8f4fae2b4dc273713db0720d
  mkDirectoryServer5 :: GHC.Base.String
  {- Unfolding: (GHC.Show.showLitString
                   DirectoryServer.mkDirectoryServer7
                   DirectoryServer.mkDirectoryServer6) -}
69f3140233edf825be41ca3ac647d0c8
  mkDirectoryServer6 :: [GHC.Types.Char]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   GHC.Show.shows8
                   (GHC.Types.[] @ GHC.Types.Char)) -}
30783baff5364d298f18d347a6868ad5
  mkDirectoryServer7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   CommonServer.directoryServerIdentity2
                   (GHC.CString.unpackAppendCString#
                      ":"#
                      CommonServer.directoryServerIdentity1)) -}
a94339513893813adafa18a8689cbdf6
  mkDirectoryServer8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Start"#) -}
3df0fee92acc436dd993a3824bfb4589
  mkDirectoryServer9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "res/DirectoryServer"#) -}
ed2f7caa8401f6791587825b7275104c
  openFile ::
    GHC.Base.String -> CommonServerApi.ApiHandler CommonServer.File
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.directoryApp41
                  `cast`
                (<GHC.Base.String>_R
                 ->_R Trans
                          (Sym (GHC.Types.N:IO[0]
                                    <Data.Either.Either
                                       Servant.Server.Internal.ServantErr.ServantErr
                                       CommonServer.File>_R))
                          (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                    <Servant.Server.Internal.ServantErr.ServantErr>_N
                                    <GHC.Types.IO>_R
                                    <CommonServer.File>_N))) -}
225f4c709b1bf59a85e42a4421d90546
  resources :: CommonServer.Resources
  {- Strictness: m,
     Unfolding: (CommonServer.Resources
                   DirectoryServer.mkDirectoryServer9) -}
4b4cbe5e2d8ad07461ebd074fd373ded
  uploadToFileServer ::
    CommonServer.File
    -> CommonServer.Identity -> GHC.Types.IO CommonServer.Response
  {- Arity: 3, Strictness: <L,1*U(1*U,1*U)><L,U(U,U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.closeFile2
                  `cast`
                (<CommonServer.File>_R
                 ->_R <CommonServer.Identity>_R
                 ->_R Sym (GHC.Types.N:IO[0] <CommonServer.Response>_R)) -}
0ec6e4b5af39037f4788c4b3c6fed46a
  upsertFileMapping ::
    CommonServer.Identity
    -> [DirectoryServer.FileMapping]
    -> GHC.Base.String
    -> GHC.Types.IO [DirectoryServer.FileMapping]
  {- Arity: 4, Strictness: <L,U><L,U><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.getFilesFromFileServer3
                  `cast`
                (<CommonServer.Identity>_R
                 ->_R <[DirectoryServer.FileMapping]>_R
                 ->_R <GHC.Base.String>_R
                 ->_R Sym (GHC.Types.N:IO[0] <[DirectoryServer.FileMapping]>_R)) -}
88c26785f44cfcb48f42bc7555341f77
  upsertFileServer :: CommonServer.Identity -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <L,U(U,U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.directoryApp13
                  `cast`
                (<CommonServer.Identity>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
instance GHC.Classes.Eq [DirectoryServer.FileMapping]
  = DirectoryServer.$fEqFileMapping
instance Data.Bson.Generic.FromBSON [DirectoryServer.FileMapping]
  = DirectoryServer.$fFromBSONFileMapping
instance Data.Aeson.Types.Class.FromJSON [DirectoryServer.FileMapping]
  = DirectoryServer.$fFromJSONFileMapping
instance GHC.Generics.Generic [DirectoryServer.FileMapping]
  = DirectoryServer.$fGenericFileMapping
instance GHC.Show.Show [DirectoryServer.FileMapping]
  = DirectoryServer.$fShowFileMapping
instance Data.Bson.Generic.ToBSON [DirectoryServer.FileMapping]
  = DirectoryServer.$fToBSONFileMapping
instance Data.Aeson.Types.Class.ToJSON [DirectoryServer.FileMapping]
  = DirectoryServer.$fToJSONFileMapping
family instance GHC.Generics.Rep [DirectoryServer.FileMapping]
  = DirectoryServer.Rep_FileMapping
"SPEC/DirectoryServer $fAllCTRender:a @ JSON @ '[] @ File" [ALWAYS] forall ($dAccept :: Servant.API.ContentTypes.Accept
                                                                                          Servant.API.ContentTypes.JSON)
                                                                           ($dAllMime :: Servant.API.ContentTypes.AllMime
                                                                                           '[])
                                                                           ($dAllMimeRender :: Servant.API.ContentTypes.AllMimeRender
                                                                                                 '[Servant.API.ContentTypes.JSON]
                                                                                                 CommonServer.File)
  Servant.API.ContentTypes.$fAllCTRender:a @ Servant.API.ContentTypes.JSON
                                           @ '[]
                                           @ CommonServer.File
                                           $dAccept
                                           $dAllMime
                                           $dAllMimeRender
  = DirectoryServer.$s$fAllCTRender:a4
"SPEC/DirectoryServer $fAllCTRender:a @ JSON @ '[] @ Response" [ALWAYS] forall ($dAccept :: Servant.API.ContentTypes.Accept
                                                                                              Servant.API.ContentTypes.JSON)
                                                                               ($dAllMime :: Servant.API.ContentTypes.AllMime
                                                                                               '[])
                                                                               ($dAllMimeRender :: Servant.API.ContentTypes.AllMimeRender
                                                                                                     '[Servant.API.ContentTypes.JSON]
                                                                                                     CommonServer.Response)
  Servant.API.ContentTypes.$fAllCTRender:a @ Servant.API.ContentTypes.JSON
                                           @ '[]
                                           @ CommonServer.Response
                                           $dAccept
                                           $dAllMime
                                           $dAllMimeRender
  = DirectoryServer.$s$fAllCTRender:a
"SPEC/DirectoryServer $fAllCTRender:a @ JSON @ '[] @ [FilePath]" [ALWAYS] forall ($dAccept :: Servant.API.ContentTypes.Accept
                                                                                                Servant.API.ContentTypes.JSON)
                                                                                 ($dAllMime :: Servant.API.ContentTypes.AllMime
                                                                                                 '[])
                                                                                 ($dAllMimeRender :: Servant.API.ContentTypes.AllMimeRender
                                                                                                       '[Servant.API.ContentTypes.JSON]
                                                                                                       [GHC.IO.FilePath])
  Servant.API.ContentTypes.$fAllCTRender:a @ Servant.API.ContentTypes.JSON
                                           @ '[]
                                           @ [GHC.IO.FilePath]
                                           $dAccept
                                           $dAllMime
                                           $dAllMimeRender
  = DirectoryServer.$s$fAllCTRender:a6
"SPEC/DirectoryServer $fAllMimeRender:a0 @ JSON @ File" [ALWAYS] forall ($dMimeRender :: Servant.API.ContentTypes.MimeRender
                                                                                           Servant.API.ContentTypes.JSON
                                                                                           CommonServer.File)
  Servant.API.ContentTypes.$fAllMimeRender:a0 @ Servant.API.ContentTypes.JSON
                                              @ CommonServer.File
                                              $dMimeRender
  = DirectoryServer.$s$fAllCTRender:a_$s$fAllMimeRender:a1
"SPEC/DirectoryServer $fAllMimeRender:a0 @ JSON @ Response" [ALWAYS] forall ($dMimeRender :: Servant.API.ContentTypes.MimeRender
                                                                                               Servant.API.ContentTypes.JSON
                                                                                               CommonServer.Response)
  Servant.API.ContentTypes.$fAllMimeRender:a0 @ Servant.API.ContentTypes.JSON
                                              @ CommonServer.Response
                                              $dMimeRender
  = DirectoryServer.$s$fAllCTRender:a_$s$fAllMimeRender:a0
"SPEC/DirectoryServer $fAllMimeRender:a0 @ JSON @ [FilePath]" [ALWAYS] forall ($dMimeRender :: Servant.API.ContentTypes.MimeRender
                                                                                                 Servant.API.ContentTypes.JSON
                                                                                                 [GHC.IO.FilePath])
  Servant.API.ContentTypes.$fAllMimeRender:a0 @ Servant.API.ContentTypes.JSON
                                              @ [GHC.IO.FilePath]
                                              $dMimeRender
  = DirectoryServer.$s$fAllCTRender:a_$s$fAllMimeRender:a2
"SPEC/DirectoryServer $fAllMimeRender:a0_$callMimeRender @ JSON @ [FilePath]" [ALWAYS] forall ($dMimeRender :: Servant.API.ContentTypes.MimeRender
                                                                                                                 Servant.API.ContentTypes.JSON
                                                                                                                 [GHC.IO.FilePath])
  Servant.API.ContentTypes.$fAllMimeRender:a0_$callMimeRender @ Servant.API.ContentTypes.JSON
                                                              @ [GHC.IO.FilePath]
                                                              $dMimeRender
  = DirectoryServer.$s$fAllCTRender:a_$s$fAllMimeRender:a0_$callMimeRender
"SPEC/DirectoryServer $fAllMimeUnrender:a @ JSON @ File @ '[]" [ALWAYS] forall ($dMimeUnrender :: Servant.API.ContentTypes.MimeUnrender
                                                                                                    Servant.API.ContentTypes.JSON
                                                                                                    CommonServer.File)
                                                                               ($dAllMimeUnrender :: Servant.API.ContentTypes.AllMimeUnrender
                                                                                                       '[]
                                                                                                       CommonServer.File)
  Servant.API.ContentTypes.$fAllMimeUnrender:a @ Servant.API.ContentTypes.JSON
                                               @ CommonServer.File
                                               @ '[]
                                               $dMimeUnrender
                                               $dAllMimeUnrender
  = DirectoryServer.$s$fAllMimeUnrender:a1
"SPEC/DirectoryServer $fAllMimeUnrender:a @ JSON @ Identity @ '[]" [ALWAYS] forall ($dMimeUnrender :: Servant.API.ContentTypes.MimeUnrender
                                                                                                        Servant.API.ContentTypes.JSON
                                                                                                        CommonServer.Identity)
                                                                                   ($dAllMimeUnrender :: Servant.API.ContentTypes.AllMimeUnrender
                                                                                                           '[]
                                                                                                           CommonServer.Identity)
  Servant.API.ContentTypes.$fAllMimeUnrender:a @ Servant.API.ContentTypes.JSON
                                               @ CommonServer.Identity
                                               @ '[]
                                               $dMimeUnrender
                                               $dAllMimeUnrender
  = DirectoryServer.$s$fAllMimeUnrender:a
"SPEC/DirectoryServer $fConstructorMetaMetaCons @ "FileMapping" @ 'PrefixI @ 'True" [ALWAYS] forall ($dKnownSymbol :: GHC.TypeLits.KnownSymbol
                                                                                                                        "FileMapping")
                                                                                                    ($dSingI :: GHC.Generics.SingI
                                                                                                                  'GHC.Generics.PrefixI)
                                                                                                    ($dSingI1 :: GHC.Generics.SingI
                                                                                                                   'GHC.Types.True)
  GHC.Generics.$fConstructorMetaMetaCons @ "FileMapping"
                                         @ 'GHC.Generics.PrefixI
                                         @ 'GHC.Types.True
                                         $dKnownSymbol
                                         $dSingI
                                         $dSingI1
  = DirectoryServer.$fToBSONFileMapping_$s$fConstructorMetaMetaCons
"SPEC/DirectoryServer $fMimeRenderTYPEJSONa @ File" [ALWAYS] forall ($dToJSON :: Data.Aeson.Types.Class.ToJSON
                                                                                   CommonServer.File)
  Servant.API.ContentTypes.$fMimeRenderTYPEJSONa @ CommonServer.File
                                                 $dToJSON
  = DirectoryServer.$s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa1
"SPEC/DirectoryServer $fMimeRenderTYPEJSONa @ Response" [ALWAYS] forall ($dToJSON :: Data.Aeson.Types.Class.ToJSON
                                                                                       CommonServer.Response)
  Servant.API.ContentTypes.$fMimeRenderTYPEJSONa @ CommonServer.Response
                                                 $dToJSON
  = DirectoryServer.$s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa
"SPEC/DirectoryServer $fMimeRenderTYPEJSONa @ [FilePath]" [ALWAYS] forall ($dToJSON :: Data.Aeson.Types.Class.ToJSON
                                                                                         [GHC.IO.FilePath])
  Servant.API.ContentTypes.$fMimeRenderTYPEJSONa @ [GHC.IO.FilePath]
                                                 $dToJSON
  = DirectoryServer.$s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa2
"SPEC/DirectoryServer $fMimeRenderTYPEJSONa_$cmimeRender @ File" [ALWAYS] forall ($dToJSON :: Data.Aeson.Types.Class.ToJSON
                                                                                                CommonServer.File)
  Servant.API.ContentTypes.$fMimeRenderTYPEJSONa_$cmimeRender @ CommonServer.File
                                                              $dToJSON
  = DirectoryServer.$s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa_$cmimeRender1
"SPEC/DirectoryServer $fMimeRenderTYPEJSONa_$cmimeRender @ Response" [ALWAYS] forall ($dToJSON :: Data.Aeson.Types.Class.ToJSON
                                                                                                    CommonServer.Response)
  Servant.API.ContentTypes.$fMimeRenderTYPEJSONa_$cmimeRender @ CommonServer.Response
                                                              $dToJSON
  = DirectoryServer.$s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa_$cmimeRender
"SPEC/DirectoryServer $fMimeRenderTYPEJSONa_$cmimeRender @ [FilePath]" [ALWAYS] forall ($dToJSON :: Data.Aeson.Types.Class.ToJSON
                                                                                                      [GHC.IO.FilePath])
  Servant.API.ContentTypes.$fMimeRenderTYPEJSONa_$cmimeRender @ [GHC.IO.FilePath]
                                                              $dToJSON
  = DirectoryServer.$s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa_$cmimeRender2
"SPEC/DirectoryServer $fMimeUnrenderTYPEJSONa @ File" [ALWAYS] forall ($dFromJSON :: Data.Aeson.Types.Class.FromJSON
                                                                                       CommonServer.File)
  Servant.API.ContentTypes.$fMimeUnrenderTYPEJSONa @ CommonServer.File
                                                   $dFromJSON
  = DirectoryServer.$s$fAllMimeUnrender:a_$s$fMimeUnrenderTYPEJSONa1
"SPEC/DirectoryServer $fMimeUnrenderTYPEJSONa @ Identity" [ALWAYS] forall ($dFromJSON :: Data.Aeson.Types.Class.FromJSON
                                                                                           CommonServer.Identity)
  Servant.API.ContentTypes.$fMimeUnrenderTYPEJSONa @ CommonServer.Identity
                                                   $dFromJSON
  = DirectoryServer.$s$fAllMimeUnrender:a_$s$fMimeUnrenderTYPEJSONa
"SPEC/DirectoryServer $fMimeUnrenderTYPEJSONa_$cmimeUnrender @ File" [ALWAYS] forall ($dFromJSON :: Data.Aeson.Types.Class.FromJSON
                                                                                                      CommonServer.File)
  Servant.API.ContentTypes.$fMimeUnrenderTYPEJSONa_$cmimeUnrender @ CommonServer.File
                                                                  $dFromJSON
  = DirectoryServer.$s$fAllMimeUnrender:a_$s$fMimeUnrenderTYPEJSONa_$cmimeUnrender1
"SPEC/DirectoryServer $fMimeUnrenderTYPEJSONa_$cmimeUnrender @ Identity" [ALWAYS] forall ($dFromJSON :: Data.Aeson.Types.Class.FromJSON
                                                                                                          CommonServer.Identity)
  Servant.API.ContentTypes.$fMimeUnrenderTYPEJSONa_$cmimeUnrender @ CommonServer.Identity
                                                                  $dFromJSON
  = DirectoryServer.$s$fAllMimeUnrender:a_$s$fMimeUnrenderTYPEJSONa_$cmimeUnrender
"SPEC/DirectoryServer $fSelectorMetaMetaSel @ ('Just
                                                "identity") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                             ('GHC.Base.Just
                                                                                                                                                                                                                "identity"))
                                                                                                                                                                                               ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                              'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                               ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                              'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                               ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                              'GHC.Generics.DecidedLazy)
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Base.Just "identity")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     $dSingI
                                     $dSingI1
                                     $dSingI2
                                     $dSingI3
  = DirectoryServer.$fFromBSONFileMapping_$s$fSelectorMetaMetaSel
"SPEC/DirectoryServer $fSelectorMetaMetaSel_$cselName @ ('Just
                                                          "identity") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                                                 ('GHC.Base.Just
                                                                                                                                                                                                                                    "identity"))
                                                                                                                                                                                                                   ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                                                  'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                                                   ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                                                  'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                                                   ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                                                  'GHC.Generics.DecidedLazy)
  GHC.Generics.$fSelectorMetaMetaSel_$cselName @ ('GHC.Base.Just
                                                    "identity")
                                               @ 'GHC.Generics.NoSourceUnpackedness
                                               @ 'GHC.Generics.NoSourceStrictness
                                               @ 'GHC.Generics.DecidedLazy
                                               $dSingI
                                               $dSingI1
                                               $dSingI2
                                               $dSingI3
  = DirectoryServer.$fFromBSONFileMapping_$s$fSelectorMetaMetaSel_$cselName
"SPEC/DirectoryServer $fToJSON[] @ [Char]" [ALWAYS] forall ($dToJSON :: Data.Aeson.Types.Class.ToJSON
                                                                          [GHC.Types.Char])
  Data.Aeson.Types.Instances.$fToJSON[] @ [GHC.Types.Char] $dToJSON
  = DirectoryServer.$s$fAllCTRender:a_$s$fToJSON[]
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

