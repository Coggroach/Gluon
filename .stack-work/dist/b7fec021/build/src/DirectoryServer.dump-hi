
==================== FINAL INTERFACE ====================
2017-03-15 10:52:24.2241717 UTC

interface Gluon-0.1.0.0-2zM8ehVFg6FFhvYw0f6srV:DirectoryServer [family instance module] 8001
  interface hash: 22a1f27a6a45f4a02c746157c60b5a84
  ABI hash: df68255aa5f3aa7c388f5d1a79572d3c
  export-list hash: a9ec61e9abaeda25a907dda94068772d
  orphan hash: a497f39a4e099afd34fa904792c2a87a
  flag hash: e86faf246ab80a8d5a1b92fcc1360c46
  sig of: Nothing
  used TH splices: False
  where
exports:
  DirectoryServer.closeFile
  DirectoryServer.deleteDatabases
  DirectoryServer.directoryApp
  DirectoryServer.directoryServer
  DirectoryServer.downloadFromFileServer
  DirectoryServer.findFileMapping
  DirectoryServer.getAllFileMappings
  DirectoryServer.getAllFileServers
  DirectoryServer.getFiles
  DirectoryServer.getFilesFromFileServer
  DirectoryServer.joinServer
  DirectoryServer.mkDirectoryServer
  DirectoryServer.openFile
  DirectoryServer.resources
  DirectoryServer.updateFileMapping
  DirectoryServer.uploadToFileServer
  DirectoryServer.upsertFileMapping
  DirectoryServer.upsertFileServer
  DirectoryServer.FileLock{DirectoryServer.FileLocked DirectoryServer.FileReadOnly DirectoryServer.FileUnlocked}
  DirectoryServer.FileMapping{DirectoryServer.FileMapping fileName identity lock}
module dependencies: CommonServer CommonServerApi MongoDbConnector
package dependencies: MonadRandom-0.4.2.3@MonadRandom-0.4.2.3-8TfCm6PGvGYB7omozORhov
                      Win32-2.3.1.1@Win32-2.3.1.1
                      aeson-0.11.2.1@aeson-0.11.2.1-5ZQWuTFmffALcfpzDCXoOz
                      appar-0.1.4@appar-0.1.4-1in4Ewd8JBkAYDZSWXLSe0
                      array-0.5.1.1@array-0.5.1.1
                      async-2.1.1@async-2.1.1-xFiBzw9xoB8HPZAuxUY2o
                      attoparsec-0.13.1.0@attoparsec-0.13.1.0-5Olk1S76r1CDYzFS6V3sZR
                      auto-update-0.1.4@auto-update-0.1.4-GAesfFmqoZzBz6e09kRyzb
                      base-4.9.0.0
                      base-compat-0.9.1@base-compat-0.9.1-Jorka5wAHbt82D18A4gF6b
                      base16-bytestring-0.1.1.6@base16-bytestring-0.1.1.6-5dPoF8dzhwzBaEB2MvnmIS
                      base64-bytestring-1.0.0.1@base64-bytestring-1.0.0.1-In9M41tLtcS9QYt3QpGpNY
                      binary-0.8.3.0@binary-0.8.3.0
                      blaze-builder-0.4.0.2@blaze-builder-0.4.0.2-KWDLbdBYSBoALiMW0LHIz1
                      blaze-html-0.8.1.3@blaze-html-0.8.1.3-8MBPJsFNBtBBD2gWERenva
                      blaze-markup-0.7.1.1@blaze-markup-0.7.1.1-IE161DWDHNXF9O8bBguli5
                      bson-0.3.2.3@bson-0.3.2.3-EE4NjCypFvQ16toPJxQaT3
                      bson-generic-0.0.8@bson-generic-0.0.8-HCUlC9mFzScEiZ90dYsZ4F
                      byteable-0.1.1@byteable-0.1.1-15aIBCArSOBEnGxArzrDTM
                      byteorder-1.0.4@byteorder-1.0.4-BbL4c17EpZrL9PcZm0xys9
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      case-insensitive-1.2.0.7@case-insensitive-1.2.0.7-FlqweN7AuKj9EdU2arVEt4
                      cipher-aes-0.2.11@cipher-aes-0.2.11-6IDqXzfBW6B3WK2bKJbiBh
                      containers-0.5.7.1@containers-0.5.7.1
                      cookie-0.4.2.1@cookie-0.4.2.1-2a2c54yIyBn79Ul3iLWclJ
                      cprng-aes-0.6.1@cprng-aes-0.6.1-FC7oaZWVuSwGLsSRmNtnfS
                      crypto-cipher-types-0.0.9@crypto-cipher-types-0.0.9-Iwzx9devSK6HQoOjujg46u
                      crypto-random-0.0.9@crypto-random-0.0.9-AGKuDxkGmdkICMALIbcYDi
                      cryptohash-0.11.9@cryptohash-0.11.9-AKA83W6XJLuJ6ooDzY2r0l
                      cryptonite-0.19@cryptonite-0.19-JQTQGTq5BGQJS9F2vRxlj
                      data-binary-ieee754-0.4.4@data-binary-ieee754-0.4.4-F1HjhwdV1xx5grS0eMjeg2
                      data-default-class-0.1.2.0@data-default-class-0.1.2.0-FYQpjIylblBDctdkHAFeXA
                      deepseq-1.4.2.0@deepseq-1.4.2.0 directory-1.2.6.2@directory-1.2.6.2
                      dlist-0.8.0.2@dlist-0.8.0.2-GWAMmbX9rLg3tqrbOizHGv
                      exceptions-0.8.3@exceptions-0.8.3-7py7fmRxowDFpHmiHGKrTb
                      file-embed-0.0.10@file-embed-0.0.10-IXfudWSq57y1Athysk5ifZ
                      filepath-1.4.1.0@filepath-1.4.1.0
                      ghc-boot-th-8.0.1@ghc-boot-th-8.0.1 ghc-prim-0.5.0.0
                      hashable-1.2.4.0@hashable-1.2.4.0-EMu4H7FB10MAl6hwKw992G
                      hashtables-1.2.1.0@hashtables-1.2.1.0-97BixhaJIWTIDAaThqJujl
                      hslogger-1.2.10@hslogger-1.2.10-sT57JmCNO02KPQ07k0Jv6
                      http-api-data-0.3.2@http-api-data-0.3.2-A22DPUhAmUlrIoBZ4qkGB
                      http-client-0.4.31.2@http-client-0.4.31.2-6gyf7twhhmv8yfbRVNkl4Z
                      http-date-0.0.6.1@http-date-0.0.6.1-150spKQYCuoIrltdbMmYGs
                      http-media-0.6.4@http-media-0.6.4-82jDVCpdN5H696EFF5l5I4
                      http-types-0.9.1@http-types-0.9.1-8WdUZL4twHzANJbxvb1Aoj
                      http2-1.6.2@http2-1.6.2-8AbNCX9FS8K1gUe78Emp1g integer-gmp-1.0.0.1
                      iproute-1.7.1@iproute-1.7.1-EsJa15Wmnfj5pBTvNuT9V3
                      lifted-base-0.2.3.8@lifted-base-0.2.3.8-KLkd0w1UJqu6nE8oVTTEBy
                      memory-0.13@memory-0.13-ABHR5331zHK9scHPRr7afU
                      mime-types-0.1.0.7@mime-types-0.1.0.7-AxQ64wFjikqCSdK5pSeZvh
                      mmorph-1.0.9@mmorph-1.0.9-DmSwQqk5nLj7roLAcydGz
                      monad-control-1.0.1.0@monad-control-1.0.1.0-HoNEBoNfniX3vjSfkI7WTT
                      mongoDB-2.1.1.1@mongoDB-2.1.1.1-8pQlEjBJ8J0LRyS8YhkcGi
                      mtl-2.2.1@mtl-2.2.1-6qsR1PHUy5lL47Hpoa4jCM
                      network-2.6.3.1@network-2.6.3.1-nK9qnsiJR03CWuPIGMmX
                      network-uri-2.6.1.0@network-uri-2.6.1.0-DDHh2FNiPirBRgkuU9DEt2
                      nonce-1.0.2@nonce-1.0.2-5AJC5Z1QNmbDHXkdC0qzs0
                      parsec-3.1.11@parsec-3.1.11-BCos4GEVCuDB8dnOCBHO6X
                      pretty-1.1.3.3@pretty-1.1.3.3
                      primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa
                      psqueues-0.2.2.3@psqueues-0.2.2.3-YN2xKllZOMJLtAgRHlkEw
                      random-1.1@random-1.1-54KmMHXjttlERYcr1mvsAe
                      random-shuffle-0.0.4@random-shuffle-0.0.4-LfeDYNPfwrQ2o9p6tw2M9l
                      resourcet-1.1.8.1@resourcet-1.1.8.1-1XWaZ7RmVde330DM5PRI3Z
                      safe-0.3.10@safe-0.3.10-1VyrsjWhmjvGnGud5lgW7f
                      scientific-0.3.4.9@scientific-0.3.4.9-6oTYuCcx6H5BsTGU7D2Gk3
                      securemem-0.1.9@securemem-0.1.9-AlUbMorzPNe4lwnV15ASIa
                      servant-0.9.1.1@servant-0.9.1.1-EoAfArKoSMJ7jHATkoG3y1
                      servant-client-0.9.1.1@servant-client-0.9.1.1-ImsO92JUyoChIUnTgPFGf
                      servant-server-0.9.1.1@servant-server-0.9.1.1-D3Xggiyf9x2HIcMjhXbQ8H
                      stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF
                      streaming-commons-0.1.16@streaming-commons-0.1.16-1CT5SENqavw7Xg1mdSO0ef
                      string-conversions-0.4@string-conversions-0.4-8T0UFmRDEly2gsNJzmHrNQ
                      tagged-0.8.5@tagged-0.8.5-CtgV6EcN0do8F92i1S6iYx
                      template-haskell-2.11.0.0
                      text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s
                      time-1.6.0.1@time-1.6.0.1
                      time-locale-compat-0.1.1.3@time-locale-compat-0.1.1.3-1j5dGjxxtiTDuAsO86iSk0
                      transformers-0.5.2.0@transformers-0.5.2.0
                      transformers-base-0.4.4@transformers-base-0.4.4-25SoAegOdaF8rLEnnb5jPI
                      unix-compat-0.4.3.1@unix-compat-0.4.3.1-GfTEbzsMzf3JahCxeP2fig
                      unordered-containers-0.2.7.1@unordered-containers-0.2.7.1-Eo9jd5DMz45DhBLCG8skzW
                      uri-bytestring-0.2.2.1@uri-bytestring-0.2.2.1-LMJUdG9s1QpIQ10mPWMO6d
                      utf8-string-1.0.1.1@utf8-string-1.0.1.1-2T8mBCuEDlXDo8zed8Onw4
                      uuid-types-1.0.3@uuid-types-1.0.3-1qmdgBeDGlbCUibOmxVGqx
                      vault-0.3.0.6@vault-0.3.0.6-CA9Xj82tAPe9nD32xVMgDG
                      vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6
                      wai-3.2.1.1@wai-3.2.1.1-GVNFJ2NUhhADT18B8nh1gg
                      wai-app-static-3.1.6.1@wai-app-static-3.1.6.1-CvwBnPxNZ8M8ekSMP3oFNw
                      warp-3.2.9@warp-3.2.9-3hyX88L3Ey11UVH92i8P4R
                      word8-0.1.2@word8-0.1.2-2E1SgvvAV2fK8vZPDHbRan
                      zlib-0.6.1.2@zlib-0.6.1.2-4CWLN1T27kOJhNvXgy46ZV
orphans: Gluon-0.1.0.0-2zM8ehVFg6FFhvYw0f6srV:CommonServer
         MonadRandom-0.4.2.3@MonadRandom-0.4.2.3-8TfCm6PGvGYB7omozORhov:Control.Monad.Random
         aeson-0.11.2.1@aeson-0.11.2.1-5ZQWuTFmffALcfpzDCXoOz:Data.Aeson.Types.Generic
         aeson-0.11.2.1@aeson-0.11.2.1-5ZQWuTFmffALcfpzDCXoOz:Data.Aeson.Types.Instances
         attoparsec-0.13.1.0@attoparsec-0.13.1.0-5Olk1S76r1CDYzFS6V3sZR:Data.Attoparsec.ByteString.Char8
         attoparsec-0.13.1.0@attoparsec-0.13.1.0-5Olk1S76r1CDYzFS6V3sZR:Data.Attoparsec.Text.Internal
         base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bson-generic-0.0.8@bson-generic-0.0.8-HCUlC9mFzScEiZ90dYsZ4F:Data.Bson.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         hashable-1.2.4.0@hashable-1.2.4.0-EMu4H7FB10MAl6hwKw992G:Data.Hashable.Generic
         http-client-0.4.31.2@http-client-0.4.31.2-6gyf7twhhmv8yfbRVNkl4Z:Network.HTTP.Client.Request
         mongoDB-2.1.1.1@mongoDB-2.1.1.1-8pQlEjBJ8J0LRyS8YhkcGi:Database.MongoDB.Internal.Util
         network-2.6.3.1@network-2.6.3.1-nK9qnsiJR03CWuPIGMmX:Network.Socket
         stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF:Control.Monad.STM
         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text
         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text.Lazy
         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text.Show
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Fusion.Bundle
         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Unboxed
family instance modules: Gluon-0.1.0.0-2zM8ehVFg6FFhvYw0f6srV:CommonServer
                         attoparsec-0.13.1.0@attoparsec-0.13.1.0-5Olk1S76r1CDYzFS6V3sZR:Data.Attoparsec.Internal.Types
                         base-4.9.0.0:Control.Applicative base-4.9.0.0:Data.Complex
                         base-4.9.0.0:Data.Either base-4.9.0.0:Data.Functor.Compose
                         base-4.9.0.0:Data.Functor.Const base-4.9.0.0:Data.Functor.Identity
                         base-4.9.0.0:Data.Functor.Product base-4.9.0.0:Data.List.NonEmpty
                         base-4.9.0.0:Data.Monoid base-4.9.0.0:Data.Semigroup
                         base-4.9.0.0:Data.Type.Equality base-4.9.0.0:Data.Version
                         base-4.9.0.0:Data.Void base-4.9.0.0:GHC.Exts
                         base-4.9.0.0:GHC.Generics base-4.9.0.0:GHC.IO.Exception
                         base-4.9.0.0:GHC.TypeLits
                         bson-generic-0.0.8@bson-generic-0.0.8-HCUlC9mFzScEiZ90dYsZ4F:Data.Bson.Generic
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         dlist-0.8.0.2@dlist-0.8.0.2-GWAMmbX9rLg3tqrbOizHGv:Data.DList
                         ghc-boot-th-8.0.1@ghc-boot-th-8.0.1:GHC.LanguageExtensions.Type
                         http-api-data-0.3.2@http-api-data-0.3.2-A22DPUhAmUlrIoBZ4qkGB:Web.Internal.FormUrlEncoded
                         http-client-0.4.31.2@http-client-0.4.31.2-6gyf7twhhmv8yfbRVNkl4Z:Network.HTTP.Client
                         iproute-1.7.1@iproute-1.7.1-EsJa15Wmnfj5pBTvNuT9V3:Data.IP.Addr
                         iproute-1.7.1@iproute-1.7.1-EsJa15Wmnfj5pBTvNuT9V3:Data.IP.Range
                         monad-control-1.0.1.0@monad-control-1.0.1.0-HoNEBoNfniX3vjSfkI7WTT:Control.Monad.Trans.Control
                         network-uri-2.6.1.0@network-uri-2.6.1.0-DDHh2FNiPirBRgkuU9DEt2:Network.URI
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa:Control.Monad.Primitive
                         resourcet-1.1.8.1@resourcet-1.1.8.1-1XWaZ7RmVde330DM5PRI3Z:Control.Monad.Trans.Resource.Internal
                         servant-0.9.1.1@servant-0.9.1.1-EoAfArKoSMJ7jHATkoG3y1:Servant.API.ContentTypes
                         servant-0.9.1.1@servant-0.9.1.1-EoAfArKoSMJ7jHATkoG3y1:Servant.API.IsSecure
                         servant-0.9.1.1@servant-0.9.1.1-EoAfArKoSMJ7jHATkoG3y1:Servant.API.Verbs
                         servant-0.9.1.1@servant-0.9.1.1-EoAfArKoSMJ7jHATkoG3y1:Servant.Utils.Links
                         servant-client-0.9.1.1@servant-client-0.9.1.1-ImsO92JUyoChIUnTgPFGf:Servant.Client
                         servant-client-0.9.1.1@servant-client-0.9.1.1-ImsO92JUyoChIUnTgPFGf:Servant.Common.BaseUrl
                         servant-client-0.9.1.1@servant-client-0.9.1.1-ImsO92JUyoChIUnTgPFGf:Servant.Common.Req
                         servant-server-0.9.1.1@servant-server-0.9.1.1-D3Xggiyf9x2HIcMjhXbQ8H:Servant.Server.Internal
                         servant-server-0.9.1.1@servant-server-0.9.1.1-D3Xggiyf9x2HIcMjhXbQ8H:Servant.Server.Internal.BasicAuth
                         tagged-0.8.5@tagged-0.8.5-CtgV6EcN0do8F92i1S6iYx:Data.Tagged
                         template-haskell-2.11.0.0:Language.Haskell.TH.Syntax
                         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text
                         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text.Lazy
                         unordered-containers-0.2.7.1@unordered-containers-0.2.7.1-Eo9jd5DMz45DhBLCG8skzW:Data.HashMap.Base
                         unordered-containers-0.2.7.1@unordered-containers-0.2.7.1-Eo9jd5DMz45DhBLCG8skzW:Data.HashSet
                         uri-bytestring-0.2.2.1@uri-bytestring-0.2.2.1-LMJUdG9s1QpIQ10mPWMO6d:URI.ByteString.Types
                         uuid-types-1.0.3@uuid-types-1.0.3-1qmdgBeDGlbCUibOmxVGqx:Data.UUID.Types.Internal
                         uuid-types-1.0.3@uuid-types-1.0.3-1qmdgBeDGlbCUibOmxVGqx:Data.UUID.Types.Internal.Builder
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Primitive
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Storable
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Unboxed
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Unboxed.Base
                         zlib-0.6.1.2@zlib-0.6.1.2-4CWLN1T27kOJhNvXgy46ZV:Codec.Compression.Zlib.Stream
import  -/  CommonServer 121ea84ff32b4f8988d8246ea2ca4c5c
  exports: 23fb44605f24aa64755efbb52e294ecf
  DirectoryError acfa03f7ce4efaba5c5f8e84d87c11fc
  DirectoryJoinSuccess da95bd29ed1b399cd3c0fff7ca45f1b1
  File 89f7df8bc343c7e50c800c148885d804
  File d41f9ce3bc673f82879eb2f71401a78c
  FileLockedOrReadOnly faac652e5c27d9f8c476c657661972d4
  FileUploadError e29b57432902e6d64c40b6e313108e8e
  Identity 6bda3e0d1b2a4508179481ff89af3f2f
  Resources 3eedfa21843d31060a26c830017589e3
  Resources 6dcd1258aefe8ac46625c0bde7dae835
  Response f06fedb8ec98746a83380a38e695df6d
  Response 6bda3e0d1b2a4508179481ff89af3f2f
  Ticket 2b13fe7d18c0d48d4a64cbac6677ec94
  address ecac8e44f10c7508176952c9112669c5
  directoryServerIdentity e159d399bbe635fb82e3908dc3e558da
  encryptDecrypt ae8cc2d8b76528d516ea30a1fe5fceff
  encryptDecryptArray a43750e67352991c8ec849cb7bb268e7
  fileName c14547fdd82cafde3c4982b2b1d68ffd
  getIdentityPort 54a2c5ef1e354d3c34b0f3d7ff83a19f
  getIdentitySafeString 717e3d9531bffab5119038ecb13025c9
  getIdentityString dbcb4bce1f3654a33263e99a798ead01
  getSessionKeyFromTicket 614e0e4c253ca13e5ccb4069691050bd
  isNotValidTicket cce062a48a4d9384ba9a258e19e3ae18
  logAction 67521feb2c9d16e2eec4df6d06dc82c5
  logConnection b0739c4def4ef1f0e0da147e98bac21c
  logDatabase 65440336b0af3847526c77e22df70dad
  logError a7b65c5b3e362bf1dc96001c19bb3ea1
  logHeading 43eec4262a13ef3f88ad28d1fada7b6f
  logTrailing 1ef388b4add1c6112f1109f876c2a420
  path ba61456f9fa12984f2b731c13e779f06
  port a6baa21f2049da3217eed344742de5ef
import  -/  CommonServerApi cb828ab13fc3a0cd0910c8913f4ecbd0
  exports: 420409bedc3e5a26be1fb58e6d7c6b21
  ApiHandler 231c7e4613e81ffd1be884fe0c4b6817
  DirectoryApi 010dee1cb1fa410dc7f53523cab54c4f
  directoryApi df15ce2adab3c7ed66d2ec19327b435a
  fileClientDownload c6e811e26066fa8483613a59f34f18fe
  fileClientFiles 55a3f592a14d8657387b440b3e5f3681
  fileClientUpload cc726e5f7be287e2daa97af20ccd6c4b
import  -/  MongoDbConnector e6043e92a69386ef6dbd0263147cfeef
  exports: 195ced448d1d936e2baf506ab3de4d5a
  connectToDatabase 497c812f9c1b3e78d2c14152b3b904b9
  drainCursor 7895b3e0ad324d7adee083b6255f57cf
import  -/  aeson-0.11.2.1@aeson-0.11.2.1-5ZQWuTFmffALcfpzDCXoOz:Data.Aeson b323887803b1d3b16a4828adfc247669
import  -/  aeson-0.11.2.1@aeson-0.11.2.1-5ZQWuTFmffALcfpzDCXoOz:Data.Aeson.Types.Class 398d5f8a1c840e1122bb76cc4083aabf
import  -/  base-4.9.0.0:Control.Monad.IO.Class 6093ce5ace985d5ea81901bb51e28805
import  -/  base-4.9.0.0:Data.Either 4cef602ce360a0155ac0dd580a5b4863
import  -/  base-4.9.0.0:Data.Foldable 3cbed01c922be29649c33015287c82ca
import  -/  base-4.9.0.0:Data.List d711f98b49ef5d33e5b3d404631ed073
import  -/  base-4.9.0.0:Data.Maybe 086a84053ef7f7810663b5f03b7ec3f7
import  -/  base-4.9.0.0:Data.OldList 3c899c6d8e6204063769214449ac0954
import  -/  base-4.9.0.0:GHC.Base dd8044a8d640eee51828c17c476a6ba7
import  -/  base-4.9.0.0:GHC.Generics cdf72cc575895201800451f77c6e6810
import  -/  base-4.9.0.0:GHC.IO 1429985c1cb03cc0778fa4876799f1d2
import  -/  base-4.9.0.0:GHC.List 47d436dfb7454bb1883fb4d943e3f389
import  -/  base-4.9.0.0:GHC.Show 0b5845243cb2ec62b57dd6963d276ec6
import  -/  base-4.9.0.0:Prelude 2d9cd8b0ec3d728f62b734df888d2e34
import  -/  base-4.9.0.0:System.IO c1068c4f4231e3198e330f99a58145b0
import  -/  base-4.9.0.0:Text.Read 575a1becf4a56881b7def2de5a4c3776
import  -/  bson-0.3.2.3@bson-0.3.2.3-EE4NjCypFvQ16toPJxQaT3:Data.Bson 9dcb4fcd7c61220f1f6ae15ef9a1c054
import  -/  bson-generic-0.0.8@bson-generic-0.0.8-HCUlC9mFzScEiZ90dYsZ4F:Data.Bson.Generic 4ab95dcee9ff70a284f7b097542ed4a3
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Map 59ba4f128d7d19046010538c416f3875
import  -/  directory-1.2.6.2@directory-1.2.6.2:System.Directory 6ab32ada667d61db0e6e44603c58043c
import  -/  ghc-prim-0.5.0.0:GHC.Classes 16d48e012d23eaef9bca91ccdd572c02
import  -/  ghc-prim-0.5.0.0:GHC.Types 7378e41b7749213c8c88ceb6b0665d4c
import  -/  http-client-0.4.31.2@http-client-0.4.31.2-6gyf7twhhmv8yfbRVNkl4Z:Network.HTTP.Client 7efdeaf13b646bc90b9c711f77bcc9f3
import  -/  http-client-0.4.31.2@http-client-0.4.31.2-6gyf7twhhmv8yfbRVNkl4Z:Network.HTTP.Client.Manager 68a9222fb6d1dffab8bc2f88cd588a49
import  -/  mongoDB-2.1.1.1@mongoDB-2.1.1.1-8pQlEjBJ8J0LRyS8YhkcGi:Database.MongoDB 1e4125e4412f09f4fc240a6f540ad3a8
import  -/  mongoDB-2.1.1.1@mongoDB-2.1.1.1-8pQlEjBJ8J0LRyS8YhkcGi:Database.MongoDB.Query b4ba7e1d7397a420856343870367af87
import  -/  random-1.1@random-1.1-54KmMHXjttlERYcr1mvsAe:System.Random 8483439f8ec14d68196250b2c4a4fa4e
import  -/  servant-0.9.1.1@servant-0.9.1.1-EoAfArKoSMJ7jHATkoG3y1:Servant.API 6dde1d3e22332830052f8cc1ca7a8a6c
import  -/  servant-0.9.1.1@servant-0.9.1.1-EoAfArKoSMJ7jHATkoG3y1:Servant.API.Alternative dfcc311e19328d6b33108c0cab489271
import  -/  servant-client-0.9.1.1@servant-client-0.9.1.1-ImsO92JUyoChIUnTgPFGf:Servant.Client 5cc92c61c5d3da5052e499d328290814
import  -/  servant-client-0.9.1.1@servant-client-0.9.1.1-ImsO92JUyoChIUnTgPFGf:Servant.Common.BaseUrl a238b544b2a45d87311356060a30f125
import  -/  servant-client-0.9.1.1@servant-client-0.9.1.1-ImsO92JUyoChIUnTgPFGf:Servant.Common.Req 736a42de892bc16aef2006861258f123
import  -/  servant-server-0.9.1.1@servant-server-0.9.1.1-D3Xggiyf9x2HIcMjhXbQ8H:Servant 4410ab1a7de886d950f97ca9d8b6de88
import  -/  servant-server-0.9.1.1@servant-server-0.9.1.1-D3Xggiyf9x2HIcMjhXbQ8H:Servant.Server 5679d15364362071343eeaa38fabdc6b
import  -/  servant-server-0.9.1.1@servant-server-0.9.1.1-D3Xggiyf9x2HIcMjhXbQ8H:Servant.Server.Internal 82b8ebff2e05af1ae04bc25ea2fec1fd
import  -/  text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text 8dbacab9fc008bc20f8ced1c7c1f4b82
import  -/  time-1.6.0.1@time-1.6.0.1:Data.Time feb04036d549fe1fa913ff01e216d803
import  -/  time-1.6.0.1@time-1.6.0.1:Data.Time.Clock 23d666c4496b6f7bf555419424731ccb
import  -/  time-1.6.0.1@time-1.6.0.1:Data.Time.Format 6cdceb8cd3a2bb55a28d431357c4ce3d
import  -/  transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Except 7818a7c6346c90815c8b961a98146fb3
import  -/  wai-3.2.1.1@wai-3.2.1.1-GVNFJ2NUhhADT18B8nh1gg:Network.Wai 6802161fda2a254e932e92defc21d045
import  -/  warp-3.2.9@warp-3.2.9-3hyX88L3Ey11UVH92i8P4R:Network.Wai.Handler.Warp 80364e098a21cbf3e268e5ee24bf0351
import  -/  warp-3.2.9@warp-3.2.9-3hyX88L3Ey11UVH92i8P4R:Network.Wai.Handler.Warp.Run 1dbf1f4e5768a75efe6facb4e0c716b3
3c2ba257a5ddb3e3149e96c606ab4f0d
  $fEqFileLock :: GHC.Classes.Eq DirectoryServer.FileLock
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ DirectoryServer.FileLock
                  DirectoryServer.$fEqFileLock_$c==
                  DirectoryServer.$fEqFileLock_$c/= -}
3c2ba257a5ddb3e3149e96c606ab4f0d
  $fEqFileLock_$c/= ::
    DirectoryServer.FileLock
    -> DirectoryServer.FileLock -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: DirectoryServer.FileLock)
                   (b :: DirectoryServer.FileLock) ->
                 case a of wild {
                   DirectoryServer.FileLocked
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        DirectoryServer.FileLocked -> GHC.Types.False }
                   DirectoryServer.FileUnlocked
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        DirectoryServer.FileUnlocked -> GHC.Types.False }
                   DirectoryServer.FileReadOnly
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        DirectoryServer.FileReadOnly -> GHC.Types.False } }) -}
3c2ba257a5ddb3e3149e96c606ab4f0d
  $fEqFileLock_$c== ::
    DirectoryServer.FileLock
    -> DirectoryServer.FileLock -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: DirectoryServer.FileLock)
                   (ds1 :: DirectoryServer.FileLock) ->
                 case ds of wild {
                   DirectoryServer.FileLocked
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        DirectoryServer.FileLocked -> GHC.Types.True }
                   DirectoryServer.FileUnlocked
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        DirectoryServer.FileUnlocked -> GHC.Types.True }
                   DirectoryServer.FileReadOnly
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        DirectoryServer.FileReadOnly -> GHC.Types.True } }) -}
3c2ba257a5ddb3e3149e96c606ab4f0d
  $fEqFileMapping :: GHC.Classes.Eq DirectoryServer.FileMapping
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ DirectoryServer.FileMapping
                  DirectoryServer.$fEqFileMapping_$c==
                  DirectoryServer.$fEqFileMapping_$c/= -}
3c2ba257a5ddb3e3149e96c606ab4f0d
  $fEqFileMapping_$c/= ::
    DirectoryServer.FileMapping
    -> DirectoryServer.FileMapping -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLL),1*U(1*U,1*U(1*U,1*U,1*U),1*U)><S(SLL),1*U(1*U,1*U(1*U,1*U,1*U),1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: DirectoryServer.FileMapping)
                   (b :: DirectoryServer.FileMapping) ->
                 case DirectoryServer.$fEqFileMapping_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
3c2ba257a5ddb3e3149e96c606ab4f0d
  $fEqFileMapping_$c== ::
    DirectoryServer.FileMapping
    -> DirectoryServer.FileMapping -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLL),1*U(1*U,1*U(1*U,1*U,1*U),1*U)><S(SLL),1*U(1*U,1*U(1*U,1*U,1*U),1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: DirectoryServer.FileMapping)
                   (w1 :: DirectoryServer.FileMapping) ->
                 case w of ww { DirectoryServer.FileMapping ww1 ww2 ww3 ->
                 case w1 of ww4 { DirectoryServer.FileMapping ww5 ww6 ww7 ->
                 DirectoryServer.$w$c== ww1 ww2 ww3 ww5 ww6 ww7 } }) -}
3c2ba257a5ddb3e3149e96c606ab4f0d
  $fFromBSONFileLock ::
    Data.Bson.Generic.FromBSON DirectoryServer.FileLock
  DFunId
  {- Arity: 1, Strictness: <S,U>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                DirectoryServer.$fFromBSONFileLock_$cfromBSON
                  `cast`
                (Sym (Data.Bson.Generic.N:FromBSON[0]
                          <DirectoryServer.FileLock>_N)) -}
3c2ba257a5ddb3e3149e96c606ab4f0d
  $fFromBSONFileLock1 :: GHC.Base.Maybe DirectoryServer.FileLock
  {- HasNoCafRefs,
     Unfolding: (GHC.Base.Just
                   @ DirectoryServer.FileLock
                   DirectoryServer.FileLocked) -}
6ec8b3f0313e51d39cb92b801a07e994
  $fFromBSONFileLock2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "FileLocked"#) -}
8c25d9d1c2e6010f6d2e81184afc6cdc
  $fFromBSONFileLock3 ::
    GHC.Base.Maybe
      ((GHC.Generics.:+:)
         (GHC.Generics.M1
            GHC.Generics.C
            ('GHC.Generics.MetaCons
               "FileUnlocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
            GHC.Generics.U1)
         (GHC.Generics.M1
            GHC.Generics.C
            ('GHC.Generics.MetaCons
               "FileReadOnly" 'GHC.Generics.PrefixI 'GHC.Types.False)
            GHC.Generics.U1)
         a1)
  {- HasNoCafRefs,
     Unfolding: (\ @ a1 ->
                 GHC.Base.Just
                   @ ((GHC.Generics.:+:)
                        (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "FileUnlocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1)
                        (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "FileReadOnly" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1)
                        a1)
                   (DirectoryServer.$fFromBSONFileLock4 @ a1)) -}
1f15eab4f658469ac1c055496273116d
  $fFromBSONFileLock4 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "FileUnlocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "FileReadOnly" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      a1
  {- HasNoCafRefs,
     Unfolding: (\ @ a1 ->
                 GHC.Generics.L1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "FileUnlocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "FileReadOnly" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ a1
                   (GHC.Generics.U1 @ a1)
                     `cast`
                   (Sym (GHC.Generics.N:M1[0]
                             <GHC.Generics.C>_P
                             <'GHC.Generics.MetaCons
                                "FileUnlocked" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                             <GHC.Generics.U1>_R) <a1>_N)) -}
024a31c0be809e4067a7e09e9e0e1336
  $fFromBSONFileLock5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "FileUnlocked"#) -}
9011a390270b069246e68375cff6e7b2
  $fFromBSONFileLock6 ::
    GHC.Base.Maybe
      ((GHC.Generics.:+:)
         (GHC.Generics.M1
            GHC.Generics.C
            ('GHC.Generics.MetaCons
               "FileUnlocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
            GHC.Generics.U1)
         (GHC.Generics.M1
            GHC.Generics.C
            ('GHC.Generics.MetaCons
               "FileReadOnly" 'GHC.Generics.PrefixI 'GHC.Types.False)
            GHC.Generics.U1)
         a1)
  {- HasNoCafRefs,
     Unfolding: (\ @ a1 ->
                 GHC.Base.Just
                   @ ((GHC.Generics.:+:)
                        (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "FileUnlocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1)
                        (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "FileReadOnly" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1)
                        a1)
                   (DirectoryServer.$fFromBSONFileLock7 @ a1)) -}
cd56706a3234396b8d416e1ad887cfd7
  $fFromBSONFileLock7 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "FileUnlocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "FileReadOnly" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      a1
  {- HasNoCafRefs,
     Unfolding: (\ @ a1 ->
                 GHC.Generics.R1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "FileUnlocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "FileReadOnly" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ a1
                   (GHC.Generics.U1 @ a1)
                     `cast`
                   (Sym (GHC.Generics.N:M1[0]
                             <GHC.Generics.C>_P
                             <'GHC.Generics.MetaCons
                                "FileReadOnly" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                             <GHC.Generics.U1>_R) <a1>_N)) -}
5e612feb4c7e5197d1ba338802e7ca11
  $fFromBSONFileLock8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "FileReadOnly"#) -}
3c2ba257a5ddb3e3149e96c606ab4f0d
  $fFromBSONFileLock_$cfromBSON ::
    Data.Bson.Document -> GHC.Base.Maybe DirectoryServer.FileLock
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (doc :: Data.Bson.Document) ->
                 let {
                   $j :: GHC.Prim.Void# -> GHC.Base.Maybe DirectoryServer.FileLock
                     {- Arity: 1, Strictness: <L,A> -}
                   = \ (w :: GHC.Prim.Void#)[OneShot] ->
                     case DirectoryServer.$w$dGFromBSON @ GHC.Prim.Any 3# doc of wild1 {
                       GHC.Base.Nothing -> GHC.Base.Nothing @ DirectoryServer.FileLock
                       GHC.Base.Just x
                       -> GHC.Base.Just
                            @ DirectoryServer.FileLock
                            (case x of wild {
                               GHC.Generics.L1 ds
                               -> case ds of tpl { DEFAULT -> DirectoryServer.FileUnlocked }
                               GHC.Generics.R1 ds
                               -> case ds of tpl { DEFAULT -> DirectoryServer.FileReadOnly } }) }
                 } in
                 case Data.Bson.!?_$slook
                        Data.Bson.Generic.constructorLabel
                        doc of wild {
                   GHC.Base.Nothing -> $j GHC.Prim.void#
                   GHC.Base.Just x
                   -> case Data.Bson.cast
                             @ [GHC.Types.Char]
                             @ GHC.Base.Maybe
                             Data.Bson.Generic.$fGFromBSONM12_$s$fVal[]
                             GHC.Base.$fMonadMaybe
                             x of wild1 {
                        GHC.Base.Nothing -> $j GHC.Prim.void#
                        GHC.Base.Just x1
                        -> case GHC.Base.eqString
                                  x1
                                  DirectoryServer.$fFromBSONFileLock2 of wild2 {
                             GHC.Types.False -> $j GHC.Prim.void#
                             GHC.Types.True -> DirectoryServer.$fFromBSONFileLock1 } } }) -}
3c2ba257a5ddb3e3149e96c606ab4f0d
  $fFromBSONFileMapping ::
    Data.Bson.Generic.FromBSON DirectoryServer.FileMapping
  DFunId
  {- Arity: 1, Strictness: <S,U>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                DirectoryServer.$fFromBSONFileMapping_$cfromBSON
                  `cast`
                (Sym (Data.Bson.Generic.N:FromBSON[0]
                          <DirectoryServer.FileMapping>_N)) -}
3c2ba257a5ddb3e3149e96c606ab4f0d
  $fFromBSONFileMapping1 ::
    GHC.Types.Int
    -> Data.Bson.Document
    -> GHC.Base.Maybe
         ((GHC.Generics.:*:)
            (GHC.Generics.M1
               GHC.Generics.S
               ('GHC.Generics.MetaSel
                  ('GHC.Base.Just "fileName")
                  'GHC.Generics.NoSourceUnpackedness
                  'GHC.Generics.NoSourceStrictness
                  'GHC.Generics.DecidedLazy)
               (GHC.Generics.Rec0 GHC.IO.FilePath))
            (GHC.Generics.S1
               ('GHC.Generics.MetaSel
                  ('GHC.Base.Just "identity")
                  'GHC.Generics.NoSourceUnpackedness
                  'GHC.Generics.NoSourceStrictness
                  'GHC.Generics.DecidedLazy)
               (GHC.Generics.Rec0 CommonServer.Identity)
             GHC.Generics.:*: GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "lock")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 DirectoryServer.FileLock))
            a1)
  {- Arity: 2, Strictness: <L,A><S,U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, True)
                (\ @ a1 (w :: GHC.Types.Int) (w1 :: Data.Bson.Document) ->
                 DirectoryServer.$w$dGFromBSON1 @ a1 w1) -}
8d28a90eba55c32cb41d9c718d9a8e99
  $fFromBSONFileMapping10 :: GHC.Fingerprint.Type.Fingerprint
  {- HasNoCafRefs,
     Unfolding: (GHC.Fingerprint.Type.Fingerprint
                   7116576064863553412##
                   4344262045150587073##) -}
7a8e89872aa0efa20e4a95e781140dce
  $fFromBSONFileMapping11 ::
    (GHC.Generics.:+:)
      (GHC.Generics.C1
         ('GHC.Generics.MetaCons
            "FileLocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.C1
         ('GHC.Generics.MetaCons
            "FileUnlocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: GHC.Generics.M1
                          GHC.Generics.C
                          ('GHC.Generics.MetaCons
                             "FileReadOnly" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x ->
                 GHC.Generics.R1
                   @ (GHC.Generics.C1
                        ('GHC.Generics.MetaCons
                           "FileLocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.C1
                        ('GHC.Generics.MetaCons
                           "FileUnlocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "FileReadOnly" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                   @ x
                   (DirectoryServer.$fFromBSONFileLock7 @ x)) -}
032d049e6d7ad7b6f6b5866768c6481d
  $fFromBSONFileMapping12 ::
    (GHC.Generics.:+:)
      (GHC.Generics.C1
         ('GHC.Generics.MetaCons
            "FileLocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "FileUnlocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: GHC.Generics.C1
                          ('GHC.Generics.MetaCons
                             "FileReadOnly" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x ->
                 GHC.Generics.R1
                   @ (GHC.Generics.C1
                        ('GHC.Generics.MetaCons
                           "FileLocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "FileUnlocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: GHC.Generics.C1
                                         ('GHC.Generics.MetaCons
                                            "FileReadOnly" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                   @ x
                   (DirectoryServer.$fFromBSONFileLock4 @ x)) -}
5b90fc0caa843000503062a7641648df
  $fFromBSONFileMapping13 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "FileLocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.C1
         ('GHC.Generics.MetaCons
            "FileUnlocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: GHC.Generics.C1
                          ('GHC.Generics.MetaCons
                             "FileReadOnly" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          GHC.Generics.U1)
      a1
  {- HasNoCafRefs,
     Unfolding: (\ @ a1 ->
                 GHC.Generics.L1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "FileLocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.C1
                        ('GHC.Generics.MetaCons
                           "FileUnlocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: GHC.Generics.C1
                                         ('GHC.Generics.MetaCons
                                            "FileReadOnly" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                   @ a1
                   (GHC.Generics.U1 @ a1)
                     `cast`
                   (Sym (GHC.Generics.N:M1[0]
                             <GHC.Generics.C>_P
                             <'GHC.Generics.MetaCons
                                "FileLocked" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                             <GHC.Generics.U1>_R) <a1>_N)) -}
9df868005ba3acb5906a10b765f41fdc
  $fFromBSONFileMapping14 ::
    Data.Bson.Generic.GConstructorCount
      (GHC.Generics.D1
         ('GHC.Generics.MetaData
            "FileLock"
            "DirectoryServer"
            "Gluon-0.1.0.0-2zM8ehVFg6FFhvYw0f6srV"
            'GHC.Types.False)
         (GHC.Generics.C1
            ('GHC.Generics.MetaCons
               "FileLocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
            GHC.Generics.U1
          GHC.Generics.:+: (GHC.Generics.C1
                              ('GHC.Generics.MetaCons
                                 "FileUnlocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                              GHC.Generics.U1
                            GHC.Generics.:+: GHC.Generics.C1
                                               ('GHC.Generics.MetaCons
                                                  "FileReadOnly"
                                                  'GHC.Generics.PrefixI
                                                  'GHC.Types.False)
                                               GHC.Generics.U1)))
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>m,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.$fFromBSONFileMapping15
                  `cast`
                (Trans
                     (forall (a1 :: <*>_N).
                      Sym (GHC.Generics.N:M1[0]
                               <GHC.Generics.D>_P
                               <'GHC.Generics.MetaData
                                  "FileLock"
                                  "DirectoryServer"
                                  "Gluon-0.1.0.0-2zM8ehVFg6FFhvYw0f6srV"
                                  'GHC.Types.False>_P
                               <GHC.Generics.C1
                                  ('GHC.Generics.MetaCons
                                     "FileLocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                  GHC.Generics.U1
                                GHC.Generics.:+: (GHC.Generics.C1
                                                    ('GHC.Generics.MetaCons
                                                       "FileUnlocked"
                                                       'GHC.Generics.PrefixI
                                                       'GHC.Types.False)
                                                    GHC.Generics.U1
                                                  GHC.Generics.:+: GHC.Generics.C1
                                                                     ('GHC.Generics.MetaCons
                                                                        "FileReadOnly"
                                                                        'GHC.Generics.PrefixI
                                                                        'GHC.Types.False)
                                                                     GHC.Generics.U1)>_R) <a1>_N
                      ->_R <GHC.Types.Int>_R)
                     (Sym (Data.Bson.Generic.N:GConstructorCount[0]
                               <GHC.Generics.D1
                                  ('GHC.Generics.MetaData
                                     "FileLock"
                                     "DirectoryServer"
                                     "Gluon-0.1.0.0-2zM8ehVFg6FFhvYw0f6srV"
                                     'GHC.Types.False)
                                  (GHC.Generics.C1
                                     ('GHC.Generics.MetaCons
                                        "FileLocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     GHC.Generics.U1
                                   GHC.Generics.:+: (GHC.Generics.C1
                                                       ('GHC.Generics.MetaCons
                                                          "FileUnlocked"
                                                          'GHC.Generics.PrefixI
                                                          'GHC.Types.False)
                                                       GHC.Generics.U1
                                                     GHC.Generics.:+: GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "FileReadOnly"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1))>_N))) -}
d8b414c1c58d44dd4d60f1b630edf933
  $fFromBSONFileMapping15 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "FileLocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.C1
         ('GHC.Generics.MetaCons
            "FileUnlocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: GHC.Generics.C1
                          ('GHC.Generics.MetaCons
                             "FileReadOnly" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          GHC.Generics.U1)
      a1
    -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, True)
                (\ @ a1
                   (ds :: (GHC.Generics.:+:)
                            (GHC.Generics.M1
                               GHC.Generics.C
                               ('GHC.Generics.MetaCons
                                  "FileLocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                               GHC.Generics.U1)
                            (GHC.Generics.C1
                               ('GHC.Generics.MetaCons
                                  "FileUnlocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                               GHC.Generics.U1
                             GHC.Generics.:+: GHC.Generics.C1
                                                ('GHC.Generics.MetaCons
                                                   "FileReadOnly"
                                                   'GHC.Generics.PrefixI
                                                   'GHC.Types.False)
                                                GHC.Generics.U1)
                            a1) ->
                 DirectoryServer.$fFromBSONFileMapping_lvl47) -}
6306d86f7f4e1a68b9a662a3f73728c4
  $fFromBSONFileMapping16 ::
    Data.Bson.Generic.GToBSON
      (GHC.Generics.D1
         ('GHC.Generics.MetaData
            "FileLock"
            "DirectoryServer"
            "Gluon-0.1.0.0-2zM8ehVFg6FFhvYw0f6srV"
            'GHC.Types.False)
         (GHC.Generics.C1
            ('GHC.Generics.MetaCons
               "FileLocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
            GHC.Generics.U1
          GHC.Generics.:+: (GHC.Generics.C1
                              ('GHC.Generics.MetaCons
                                 "FileUnlocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                              GHC.Generics.U1
                            GHC.Generics.:+: GHC.Generics.C1
                                               ('GHC.Generics.MetaCons
                                                  "FileReadOnly"
                                                  'GHC.Generics.PrefixI
                                                  'GHC.Types.False)
                                               GHC.Generics.U1)))
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.$fFromBSONFileMapping17
                  `cast`
                (Trans
                     (forall (a1 :: <*>_N).
                      <GHC.Types.Int>_R
                      ->_R Sym (GHC.Generics.N:M1[0]
                                    <GHC.Generics.D>_P
                                    <'GHC.Generics.MetaData
                                       "FileLock"
                                       "DirectoryServer"
                                       "Gluon-0.1.0.0-2zM8ehVFg6FFhvYw0f6srV"
                                       'GHC.Types.False>_P
                                    <GHC.Generics.C1
                                       ('GHC.Generics.MetaCons
                                          "FileLocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                       GHC.Generics.U1
                                     GHC.Generics.:+: (GHC.Generics.C1
                                                         ('GHC.Generics.MetaCons
                                                            "FileUnlocked"
                                                            'GHC.Generics.PrefixI
                                                            'GHC.Types.False)
                                                         GHC.Generics.U1
                                                       GHC.Generics.:+: GHC.Generics.C1
                                                                          ('GHC.Generics.MetaCons
                                                                             "FileReadOnly"
                                                                             'GHC.Generics.PrefixI
                                                                             'GHC.Types.False)
                                                                          GHC.Generics.U1)>_R) <a1>_N
                      ->_R <Data.Bson.Document>_R)
                     (Sym (Data.Bson.Generic.N:GToBSON[0]
                               <GHC.Generics.D1
                                  ('GHC.Generics.MetaData
                                     "FileLock"
                                     "DirectoryServer"
                                     "Gluon-0.1.0.0-2zM8ehVFg6FFhvYw0f6srV"
                                     'GHC.Types.False)
                                  (GHC.Generics.C1
                                     ('GHC.Generics.MetaCons
                                        "FileLocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     GHC.Generics.U1
                                   GHC.Generics.:+: (GHC.Generics.C1
                                                       ('GHC.Generics.MetaCons
                                                          "FileUnlocked"
                                                          'GHC.Generics.PrefixI
                                                          'GHC.Types.False)
                                                       GHC.Generics.U1
                                                     GHC.Generics.:+: GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "FileReadOnly"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1))>_N))) -}
01784a67ae8283d94d5057599e5f634c
  $fFromBSONFileMapping17 ::
    GHC.Types.Int
    -> (GHC.Generics.:+:)
         (GHC.Generics.M1
            GHC.Generics.C
            ('GHC.Generics.MetaCons
               "FileLocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
            GHC.Generics.U1)
         (GHC.Generics.C1
            ('GHC.Generics.MetaCons
               "FileUnlocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
            GHC.Generics.U1
          GHC.Generics.:+: GHC.Generics.C1
                             ('GHC.Generics.MetaCons
                                "FileReadOnly" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             GHC.Generics.U1)
         a1
    -> Data.Bson.Document
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ @ a1
                   (w :: GHC.Types.Int)
                   (w1 :: (GHC.Generics.:+:)
                            (GHC.Generics.M1
                               GHC.Generics.C
                               ('GHC.Generics.MetaCons
                                  "FileLocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                               GHC.Generics.U1)
                            (GHC.Generics.C1
                               ('GHC.Generics.MetaCons
                                  "FileUnlocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                               GHC.Generics.U1
                             GHC.Generics.:+: GHC.Generics.C1
                                                ('GHC.Generics.MetaCons
                                                   "FileReadOnly"
                                                   'GHC.Generics.PrefixI
                                                   'GHC.Types.False)
                                                GHC.Generics.U1)
                            a1) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 DirectoryServer.$w$dGToBSON @ a1 ww1 w1 }) -}
3c2ba257a5ddb3e3149e96c606ab4f0d
  $fFromBSONFileMapping18 ::
    DirectoryServer.FileLock -> Data.Bson.Value
  {- Arity: 1, Strictness: <L,1*U>m3,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: DirectoryServer.FileLock) ->
                 Data.Bson.Doc
                   (DirectoryServer.$fFromBSONFileMapping_$s$dmtoBSON x)) -}
9c20380f5fa107c001654a7394986941
  $fFromBSONFileMapping19 ::
    GHC.Generics.SingI ('GHC.Base.Just "identity")
  {- Unfolding: InlineRule (0, True, True)
                DirectoryServer.$fFromBSONFileMapping20
                  `cast`
                (Trans
                     (Sym (GHC.Generics.D:R:SingMaybeb0[0] <GHC.Types.Symbol>_N))
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Base.Maybe
                                                       GHC.Types.Symbol>_N) <'GHC.Base.Just
                                                                               "identity">_N) -}
7cd560cd3136e297ac9d454e27a31042
  $fFromBSONFileMapping2 ::
    GHC.Generics.SingI ('GHC.Base.Just "lock")
  {- Unfolding: InlineRule (0, True, True)
                DirectoryServer.$fFromBSONFileMapping3
                  `cast`
                (Trans
                     (Sym (GHC.Generics.D:R:SingMaybeb0[0] <GHC.Types.Symbol>_N))
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Base.Maybe
                                                       GHC.Types.Symbol>_N) <'GHC.Base.Just
                                                                               "lock">_N) -}
944db6b68550778fc22078f39c7107f4
  $fFromBSONFileMapping20 ::
    GHC.Generics.R:SingMaybeb
      GHC.Types.Symbol ('GHC.Base.Just "identity")
  {- Unfolding: (GHC.Generics.SJust
                   @ GHC.Types.Symbol
                   @ ('GHC.Base.Just "identity")
                   @ "identity"
                   @~ <'GHC.Base.Just "identity">_N
                   DirectoryServer.$fFromBSONFileMapping21
                     `cast`
                   (Sym (GHC.Generics.D:R:SingSymbols0[0]) <"identity">_N)) -}
465f4e7e267537df48ef1c8154b2a7f8
  $fFromBSONFileMapping21 :: GHC.Generics.R:SingSymbols "identity"
  {- Strictness: m,
     Unfolding: (GHC.Generics.SSym
                   @ "identity"
                   DirectoryServer.$fFromBSONFileMapping22
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SSymbol[0] <"identity">_P))
                        (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"identity">_N))) -}
0b894d8fc440295b0e2b24d5e0d4f45a
  $fFromBSONFileMapping22 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "identity"#) -}
3f09c649d71db47b58226a1958d183d4
  $fFromBSONFileMapping3 ::
    GHC.Generics.R:SingMaybeb GHC.Types.Symbol ('GHC.Base.Just "lock")
  {- Unfolding: (GHC.Generics.SJust
                   @ GHC.Types.Symbol
                   @ ('GHC.Base.Just "lock")
                   @ "lock"
                   @~ <'GHC.Base.Just "lock">_N
                   DirectoryServer.$fFromBSONFileMapping4
                     `cast`
                   (Sym (GHC.Generics.D:R:SingSymbols0[0]) <"lock">_N)) -}
00aa7a5b181601bffa1e4c42a67b419a
  $fFromBSONFileMapping4 :: GHC.Generics.R:SingSymbols "lock"
  {- Strictness: m,
     Unfolding: (GHC.Generics.SSym
                   @ "lock"
                   DirectoryServer.$fFromBSONFileMapping5
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SSymbol[0] <"lock">_P))
                        (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"lock">_N))) -}
43a89aa5498b2d3a7ff2d2b682832ffc
  $fFromBSONFileMapping5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "lock"#) -}
3c2ba257a5ddb3e3149e96c606ab4f0d
  $fFromBSONFileMapping6 ::
    Data.Bson.Value
    -> GHC.Base.Maybe (GHC.Base.Maybe DirectoryServer.FileLock)
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: Data.Bson.Value) ->
                 case ds of wild {
                   DEFAULT
                   -> GHC.Base.Nothing @ (GHC.Base.Maybe DirectoryServer.FileLock)
                   Data.Bson.Doc x
                   -> case DirectoryServer.$fFromBSONFileLock_$cfromBSON x of wild1 {
                        GHC.Base.Nothing
                        -> GHC.Base.Nothing @ (GHC.Base.Maybe DirectoryServer.FileLock)
                        GHC.Base.Just x1
                        -> GHC.Base.Just
                             @ (GHC.Base.Maybe DirectoryServer.FileLock)
                             wild1 }
                   Data.Bson.Null -> DirectoryServer.$fFromBSONFileMapping7 }) -}
3c2ba257a5ddb3e3149e96c606ab4f0d
  $fFromBSONFileMapping7 ::
    GHC.Base.Maybe (GHC.Base.Maybe DirectoryServer.FileLock)
  {- HasNoCafRefs,
     Unfolding: (GHC.Base.Just
                   @ (GHC.Base.Maybe DirectoryServer.FileLock)
                   (GHC.Base.Nothing @ DirectoryServer.FileLock)) -}
3c2ba257a5ddb3e3149e96c606ab4f0d
  $fFromBSONFileMapping8 ::
    GHC.Prim.Proxy# DirectoryServer.FileLock
    -> Data.Typeable.Internal.TypeRep
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (wild :: GHC.Prim.Proxy# DirectoryServer.FileLock) ->
                 DirectoryServer.$fFromBSONFileMapping9) -}
5a0ae755cb86f8a3a3cd97a18ed05e9b
  $fFromBSONFileMapping9 :: Data.Typeable.Internal.TypeRep
  {- Unfolding: (case Data.Typeable.Internal.typeRepFingerprints
                        (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                        (GHC.Types.[]
                           @ Data.Typeable.Internal.TypeRep) of kt_fps { DEFAULT ->
                 case GHC.Fingerprint.fingerprintFingerprints
                        (GHC.Types.:
                           @ GHC.Fingerprint.Type.Fingerprint
                           DirectoryServer.$fFromBSONFileMapping10
                           kt_fps) of dt { GHC.Fingerprint.Type.Fingerprint dt1 dt2 ->
                 Data.Typeable.Internal.TypeRep
                   dt1
                   dt2
                   DirectoryServer.$tcFileLock
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep) } }) -}
3c2ba257a5ddb3e3149e96c606ab4f0d
  $fFromBSONFileMapping_$cfrom ::
    DirectoryServer.FileLock
    -> GHC.Generics.Rep DirectoryServer.FileLock x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (ds :: DirectoryServer.FileLock) ->
                 case ds of wild {
                   DirectoryServer.FileLocked
                   -> (DirectoryServer.$fFromBSONFileMapping13 @ x)
                        `cast`
                      (Trans
                           (Sym (GHC.Generics.N:M1[0]
                                     <GHC.Generics.D>_P
                                     <'GHC.Generics.MetaData
                                        "FileLock"
                                        "DirectoryServer"
                                        "Gluon-0.1.0.0-2zM8ehVFg6FFhvYw0f6srV"
                                        'GHC.Types.False>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.C
                                        ('GHC.Generics.MetaCons
                                           "FileLocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                        GHC.Generics.U1
                                      GHC.Generics.:+: (GHC.Generics.C1
                                                          ('GHC.Generics.MetaCons
                                                             "FileUnlocked"
                                                             'GHC.Generics.PrefixI
                                                             'GHC.Types.False)
                                                          GHC.Generics.U1
                                                        GHC.Generics.:+: GHC.Generics.C1
                                                                           ('GHC.Generics.MetaCons
                                                                              "FileReadOnly"
                                                                              'GHC.Generics.PrefixI
                                                                              'GHC.Types.False)
                                                                           GHC.Generics.U1)>_R))
                           (Sub (Sym (DirectoryServer.Rep_FileLock[0]))) <x>_N)
                   DirectoryServer.FileUnlocked
                   -> (DirectoryServer.$fFromBSONFileMapping12 @ x)
                        `cast`
                      (Trans
                           (Sym (GHC.Generics.N:M1[0]
                                     <GHC.Generics.D>_P
                                     <'GHC.Generics.MetaData
                                        "FileLock"
                                        "DirectoryServer"
                                        "Gluon-0.1.0.0-2zM8ehVFg6FFhvYw0f6srV"
                                        'GHC.Types.False>_P
                                     <GHC.Generics.C1
                                        ('GHC.Generics.MetaCons
                                           "FileLocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                        GHC.Generics.U1
                                      GHC.Generics.:+: (GHC.Generics.M1
                                                          GHC.Generics.C
                                                          ('GHC.Generics.MetaCons
                                                             "FileUnlocked"
                                                             'GHC.Generics.PrefixI
                                                             'GHC.Types.False)
                                                          GHC.Generics.U1
                                                        GHC.Generics.:+: GHC.Generics.C1
                                                                           ('GHC.Generics.MetaCons
                                                                              "FileReadOnly"
                                                                              'GHC.Generics.PrefixI
                                                                              'GHC.Types.False)
                                                                           GHC.Generics.U1)>_R))
                           (Sub (Sym (DirectoryServer.Rep_FileLock[0]))) <x>_N)
                   DirectoryServer.FileReadOnly
                   -> (DirectoryServer.$fFromBSONFileMapping11 @ x)
                        `cast`
                      (Trans
                           (Sym (GHC.Generics.N:M1[0]
                                     <GHC.Generics.D>_P
                                     <'GHC.Generics.MetaData
                                        "FileLock"
                                        "DirectoryServer"
                                        "Gluon-0.1.0.0-2zM8ehVFg6FFhvYw0f6srV"
                                        'GHC.Types.False>_P
                                     <GHC.Generics.C1
                                        ('GHC.Generics.MetaCons
                                           "FileLocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                        GHC.Generics.U1
                                      GHC.Generics.:+: (GHC.Generics.C1
                                                          ('GHC.Generics.MetaCons
                                                             "FileUnlocked"
                                                             'GHC.Generics.PrefixI
                                                             'GHC.Types.False)
                                                          GHC.Generics.U1
                                                        GHC.Generics.:+: GHC.Generics.M1
                                                                           GHC.Generics.C
                                                                           ('GHC.Generics.MetaCons
                                                                              "FileReadOnly"
                                                                              'GHC.Generics.PrefixI
                                                                              'GHC.Types.False)
                                                                           GHC.Generics.U1)>_R))
                           (Sub (Sym (DirectoryServer.Rep_FileLock[0]))) <x>_N) }) -}
3c2ba257a5ddb3e3149e96c606ab4f0d
  $fFromBSONFileMapping_$cfromBSON ::
    Data.Bson.Document -> GHC.Base.Maybe DirectoryServer.FileMapping
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (doc :: Data.Bson.Document) ->
                 case DirectoryServer.$fFromBSONFileMapping1
                        @ GHC.Prim.Any
                        Data.Bson.Generic.$fGConstructorCountV2
                        doc of wild {
                   GHC.Base.Nothing -> GHC.Base.Nothing @ DirectoryServer.FileMapping
                   GHC.Base.Just x
                   -> GHC.Base.Just
                        @ DirectoryServer.FileMapping
                        (DirectoryServer.$fFromBSONFileMapping_$cto
                           @ GHC.Prim.Any
                           x `cast`
                           (Trans
                                (Sym (GHC.Generics.N:M1[0]
                                          <GHC.Generics.C>_P
                                          <'GHC.Generics.MetaCons
                                             "FileMapping" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                          <GHC.Generics.S1
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "fileName")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.Rec0 GHC.IO.FilePath)
                                           GHC.Generics.:*: (GHC.Generics.S1
                                                               ('GHC.Generics.MetaSel
                                                                  ('GHC.Base.Just "identity")
                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                  'GHC.Generics.NoSourceStrictness
                                                                  'GHC.Generics.DecidedLazy)
                                                               (GHC.Generics.Rec0
                                                                  CommonServer.Identity)
                                                             GHC.Generics.:*: GHC.Generics.S1
                                                                                ('GHC.Generics.MetaSel
                                                                                   ('GHC.Base.Just
                                                                                      "lock")
                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                   'GHC.Generics.DecidedLazy)
                                                                                (GHC.Generics.Rec0
                                                                                   DirectoryServer.FileLock))>_R))
                                (Trans
                                     (Sym (GHC.Generics.N:M1[0]
                                               <GHC.Generics.D>_P
                                               <'GHC.Generics.MetaData
                                                  "FileMapping"
                                                  "DirectoryServer"
                                                  "Gluon-0.1.0.0-2zM8ehVFg6FFhvYw0f6srV"
                                                  'GHC.Types.False>_P
                                               <GHC.Generics.M1
                                                  GHC.Generics.C
                                                  ('GHC.Generics.MetaCons
                                                     "FileMapping"
                                                     'GHC.Generics.PrefixI
                                                     'GHC.Types.True)
                                                  (GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "fileName")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0 GHC.IO.FilePath)
                                                   GHC.Generics.:*: (GHC.Generics.S1
                                                                       ('GHC.Generics.MetaSel
                                                                          ('GHC.Base.Just
                                                                             "identity")
                                                                          'GHC.Generics.NoSourceUnpackedness
                                                                          'GHC.Generics.NoSourceStrictness
                                                                          'GHC.Generics.DecidedLazy)
                                                                       (GHC.Generics.Rec0
                                                                          CommonServer.Identity)
                                                                     GHC.Generics.:*: GHC.Generics.S1
                                                                                        ('GHC.Generics.MetaSel
                                                                                           ('GHC.Base.Just
                                                                                              "lock")
                                                                                           'GHC.Generics.NoSourceUnpackedness
                                                                                           'GHC.Generics.NoSourceStrictness
                                                                                           'GHC.Generics.DecidedLazy)
                                                                                        (GHC.Generics.Rec0
                                                                                           DirectoryServer.FileLock)))>_R))
                                     (Sub (Sym (DirectoryServer.Rep_FileMapping[0])))) <GHC.Prim.Any>_N)) }) -}
3c2ba257a5ddb3e3149e96c606ab4f0d
  $fFromBSONFileMapping_$cto ::
    GHC.Generics.Rep DirectoryServer.FileMapping x
    -> DirectoryServer.FileMapping
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(U,1*U(U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (ds :: GHC.Generics.Rep DirectoryServer.FileMapping x) ->
                 case ds
                        `cast`
                      (Trans
                           (Sub (DirectoryServer.Rep_FileMapping[0]))
                           (Trans
                                (GHC.Generics.N:M1[0]
                                     <GHC.Generics.D>_P
                                     <'GHC.Generics.MetaData
                                        "FileMapping"
                                        "DirectoryServer"
                                        "Gluon-0.1.0.0-2zM8ehVFg6FFhvYw0f6srV"
                                        'GHC.Types.False>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.C
                                        ('GHC.Generics.MetaCons
                                           "FileMapping" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                        (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "fileName")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1 GHC.Generics.R GHC.IO.FilePath)
                                         GHC.Generics.:*: (GHC.Generics.M1
                                                             GHC.Generics.S
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "identity")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.K1
                                                                GHC.Generics.R
                                                                CommonServer.Identity)
                                                           GHC.Generics.:*: GHC.Generics.M1
                                                                              GHC.Generics.S
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Base.Just
                                                                                    "lock")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.K1
                                                                                 GHC.Generics.R
                                                                                 DirectoryServer.FileLock)))>_R)
                                (GHC.Generics.N:M1[0]
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "FileMapping" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Base.Just "fileName")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.K1 GHC.Generics.R GHC.IO.FilePath)
                                      GHC.Generics.:*: (GHC.Generics.M1
                                                          GHC.Generics.S
                                                          ('GHC.Generics.MetaSel
                                                             ('GHC.Base.Just "identity")
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.K1
                                                             GHC.Generics.R CommonServer.Identity)
                                                        GHC.Generics.:*: GHC.Generics.M1
                                                                           GHC.Generics.S
                                                                           ('GHC.Generics.MetaSel
                                                                              ('GHC.Base.Just
                                                                                 "lock")
                                                                              'GHC.Generics.NoSourceUnpackedness
                                                                              'GHC.Generics.NoSourceStrictness
                                                                              'GHC.Generics.DecidedLazy)
                                                                           (GHC.Generics.K1
                                                                              GHC.Generics.R
                                                                              DirectoryServer.FileLock))>_R)) <x>_N) of wild { GHC.Generics.:*: ds1 ds2 ->
                 case ds2 of wild1 { GHC.Generics.:*: ds3 ds4 ->
                 DirectoryServer.FileMapping
                   ds1
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "fileName")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.IO.FilePath>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <GHC.IO.FilePath>_R <x>_P))
                   ds3
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "identity")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R CommonServer.Identity>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <CommonServer.Identity>_R <x>_P))
                   ds4
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "lock")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R DirectoryServer.FileLock>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <DirectoryServer.FileLock>_R <x>_P)) } }) -}
3c2ba257a5ddb3e3149e96c606ab4f0d
  $fFromBSONFileMapping_$s$dmtoBSON ::
    DirectoryServer.FileLock -> Data.Bson.Document
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (-4, True, False)
                (\ (a1 :: DirectoryServer.FileLock) ->
                 DirectoryServer.$fFromBSONFileMapping16
                   `cast`
                 (Data.Bson.Generic.N:GToBSON[0]
                      (Sym (DirectoryServer.Rep_FileLock[0])))
                   @ GHC.Prim.Any
                   (DirectoryServer.$fFromBSONFileMapping_$sconstructorCount a1)
                   (DirectoryServer.$fFromBSONFileMapping_$cfrom
                      @ GHC.Prim.Any
                      a1)) -}
3c322413cbea8c38256d371c6ece1b33
  $fFromBSONFileMapping_$s$fConstructorMetaMetaCons ::
    GHC.Generics.Constructor
      ('GHC.Generics.MetaCons
         "FileReadOnly" 'GHC.Generics.PrefixI 'GHC.Types.False)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaCons
                       "FileReadOnly" 'GHC.Generics.PrefixI 'GHC.Types.False)
                  (GHC.Generics.$fConstructorMetaMetaCons_$cconName
                     @ "FileReadOnly"
                     @ 'GHC.Generics.PrefixI
                     @ 'GHC.Types.False
                     DirectoryServer.$fFromBSONFileLock8
                       `cast`
                     (Trans
                          (Sym (GHC.TypeLits.N:SSymbol[0] <"FileReadOnly">_P))
                          (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"FileReadOnly">_N))
                     GHC.Generics.$WSPrefix
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.FixityI>_N <'GHC.Generics.PrefixI>_N)
                     GHC.Generics.$WSFalse
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Types.Bool>_N <'GHC.Types.False>_N))
                  (GHC.Generics.$fConstructorMetaMetaCons_$cconFixity
                     @ "FileReadOnly"
                     @ 'GHC.Generics.PrefixI
                     @ 'GHC.Types.False
                     DirectoryServer.$fFromBSONFileLock8
                       `cast`
                     (Trans
                          (Sym (GHC.TypeLits.N:SSymbol[0] <"FileReadOnly">_P))
                          (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"FileReadOnly">_N))
                     GHC.Generics.$WSPrefix
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.FixityI>_N <'GHC.Generics.PrefixI>_N)
                     GHC.Generics.$WSFalse
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Types.Bool>_N <'GHC.Types.False>_N))
                  (GHC.Generics.$fConstructorMetaMetaCons_$cconIsRecord
                     @ "FileReadOnly"
                     @ 'GHC.Generics.PrefixI
                     @ 'GHC.Types.False
                     DirectoryServer.$fFromBSONFileLock8
                       `cast`
                     (Trans
                          (Sym (GHC.TypeLits.N:SSymbol[0] <"FileReadOnly">_P))
                          (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"FileReadOnly">_N))
                     GHC.Generics.$WSPrefix
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.FixityI>_N <'GHC.Generics.PrefixI>_N)
                     GHC.Generics.$WSFalse
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Types.Bool>_N <'GHC.Types.False>_N)) -}
7d974535211b706a36749496fca49037
  $fFromBSONFileMapping_$s$fConstructorMetaMetaCons1 ::
    GHC.Generics.Constructor
      ('GHC.Generics.MetaCons
         "FileUnlocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaCons
                       "FileUnlocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                  (GHC.Generics.$fConstructorMetaMetaCons_$cconName
                     @ "FileUnlocked"
                     @ 'GHC.Generics.PrefixI
                     @ 'GHC.Types.False
                     DirectoryServer.$fFromBSONFileLock5
                       `cast`
                     (Trans
                          (Sym (GHC.TypeLits.N:SSymbol[0] <"FileUnlocked">_P))
                          (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"FileUnlocked">_N))
                     GHC.Generics.$WSPrefix
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.FixityI>_N <'GHC.Generics.PrefixI>_N)
                     GHC.Generics.$WSFalse
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Types.Bool>_N <'GHC.Types.False>_N))
                  (GHC.Generics.$fConstructorMetaMetaCons_$cconFixity
                     @ "FileUnlocked"
                     @ 'GHC.Generics.PrefixI
                     @ 'GHC.Types.False
                     DirectoryServer.$fFromBSONFileLock5
                       `cast`
                     (Trans
                          (Sym (GHC.TypeLits.N:SSymbol[0] <"FileUnlocked">_P))
                          (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"FileUnlocked">_N))
                     GHC.Generics.$WSPrefix
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.FixityI>_N <'GHC.Generics.PrefixI>_N)
                     GHC.Generics.$WSFalse
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Types.Bool>_N <'GHC.Types.False>_N))
                  (GHC.Generics.$fConstructorMetaMetaCons_$cconIsRecord
                     @ "FileUnlocked"
                     @ 'GHC.Generics.PrefixI
                     @ 'GHC.Types.False
                     DirectoryServer.$fFromBSONFileLock5
                       `cast`
                     (Trans
                          (Sym (GHC.TypeLits.N:SSymbol[0] <"FileUnlocked">_P))
                          (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"FileUnlocked">_N))
                     GHC.Generics.$WSPrefix
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.FixityI>_N <'GHC.Generics.PrefixI>_N)
                     GHC.Generics.$WSFalse
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Types.Bool>_N <'GHC.Types.False>_N)) -}
543c687dde3d6e79162dafe1c52a1a13
  $fFromBSONFileMapping_$s$fConstructorMetaMetaCons2 ::
    GHC.Generics.Constructor
      ('GHC.Generics.MetaCons
         "FileLocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaCons
                       "FileLocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                  (GHC.Generics.$fConstructorMetaMetaCons_$cconName
                     @ "FileLocked"
                     @ 'GHC.Generics.PrefixI
                     @ 'GHC.Types.False
                     DirectoryServer.$fFromBSONFileLock2
                       `cast`
                     (Trans
                          (Sym (GHC.TypeLits.N:SSymbol[0] <"FileLocked">_P))
                          (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"FileLocked">_N))
                     GHC.Generics.$WSPrefix
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.FixityI>_N <'GHC.Generics.PrefixI>_N)
                     GHC.Generics.$WSFalse
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Types.Bool>_N <'GHC.Types.False>_N))
                  (GHC.Generics.$fConstructorMetaMetaCons_$cconFixity
                     @ "FileLocked"
                     @ 'GHC.Generics.PrefixI
                     @ 'GHC.Types.False
                     DirectoryServer.$fFromBSONFileLock2
                       `cast`
                     (Trans
                          (Sym (GHC.TypeLits.N:SSymbol[0] <"FileLocked">_P))
                          (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"FileLocked">_N))
                     GHC.Generics.$WSPrefix
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.FixityI>_N <'GHC.Generics.PrefixI>_N)
                     GHC.Generics.$WSFalse
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Types.Bool>_N <'GHC.Types.False>_N))
                  (GHC.Generics.$fConstructorMetaMetaCons_$cconIsRecord
                     @ "FileLocked"
                     @ 'GHC.Generics.PrefixI
                     @ 'GHC.Types.False
                     DirectoryServer.$fFromBSONFileLock2
                       `cast`
                     (Trans
                          (Sym (GHC.TypeLits.N:SSymbol[0] <"FileLocked">_P))
                          (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"FileLocked">_N))
                     GHC.Generics.$WSPrefix
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.FixityI>_N <'GHC.Generics.PrefixI>_N)
                     GHC.Generics.$WSFalse
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Types.Bool>_N <'GHC.Types.False>_N)) -}
d7fda899504bb7d29a4ee8be1399f0b3
  $fFromBSONFileMapping_$s$fSelectorMetaMetaSel ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "lock")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Base.Just "lock")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  DirectoryServer.$fFromBSONFileMapping_$s$fSelectorMetaMetaSel_$cselName
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceUnpackedness
                     @ ('GHC.Base.Just "lock")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     DirectoryServer.$fFromBSONFileMapping2
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceStrictness
                     @ ('GHC.Base.Just "lock")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     DirectoryServer.$fFromBSONFileMapping2
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselDecidedStrictness
                     @ ('GHC.Base.Just "lock")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     DirectoryServer.$fFromBSONFileMapping2
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N)) -}
84b82ae4adb285e8f190d7ca16febbcd
  $fFromBSONFileMapping_$s$fSelectorMetaMetaSel1 ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "identity")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Base.Just "identity")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  DirectoryServer.$fFromBSONFileMapping_$s$fSelectorMetaMetaSel_$cselName1
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceUnpackedness
                     @ ('GHC.Base.Just "identity")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     DirectoryServer.$fFromBSONFileMapping19
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceStrictness
                     @ ('GHC.Base.Just "identity")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     DirectoryServer.$fFromBSONFileMapping19
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselDecidedStrictness
                     @ ('GHC.Base.Just "identity")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     DirectoryServer.$fFromBSONFileMapping19
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N)) -}
392118f793e6523623b7a525604e5c28
  $fFromBSONFileMapping_$s$fSelectorMetaMetaSel_$cselName ::
    forall k (t :: GHC.Generics.Meta
                   -> (GHC.Types.* -> GHC.Types.*) -> k -> *) (f :: GHC.Types.*
                                                                    -> GHC.Types.*) (a :: k).
    t ('GHC.Generics.MetaSel
         ('GHC.Base.Just "lock")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy) f a
    -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ k
                   @ (t :: GHC.Generics.Meta
                           -> (GHC.Types.* -> GHC.Types.*) -> k -> *)
                   @ (f :: GHC.Types.* -> GHC.Types.*)
                   @ (a :: k)
                   (ds1 :: t ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "lock")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy) f a) ->
                 DirectoryServer.$fFromBSONFileMapping5) -}
78083f7754a7662e923c1243af88e2aa
  $fFromBSONFileMapping_$s$fSelectorMetaMetaSel_$cselName1 ::
    forall k (t :: GHC.Generics.Meta
                   -> (GHC.Types.* -> GHC.Types.*) -> k -> *) (f :: GHC.Types.*
                                                                    -> GHC.Types.*) (a :: k).
    t ('GHC.Generics.MetaSel
         ('GHC.Base.Just "identity")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy) f a
    -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ k
                   @ (t :: GHC.Generics.Meta
                           -> (GHC.Types.* -> GHC.Types.*) -> k -> *)
                   @ (f :: GHC.Types.* -> GHC.Types.*)
                   @ (a :: k)
                   (ds1 :: t ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "identity")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy) f a) ->
                 DirectoryServer.$fFromBSONFileMapping22) -}
3c2ba257a5ddb3e3149e96c606ab4f0d
  $fFromBSONFileMapping_$s$fVala ::
    Data.Bson.Val DirectoryServer.FileLock
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ DirectoryServer.FileLock
                  DirectoryServer.$fFromBSONFileMapping_$s$fVala_$cp1Val
                  DirectoryServer.$fFromBSONFileMapping_$s$fVala_$cp2Val
                  DirectoryServer.$fFromBSONFileMapping_$s$fVala_$cp3Val
                  DirectoryServer.$fFromBSONFileMapping18
                  DirectoryServer.$fFromBSONFileMapping_$s$fVala_$cvalList
                  DirectoryServer.$fFromBSONFileMapping_$s$fVala_$cvalMaybe
                  DirectoryServer.$fFromBSONFileMapping_$s$fVala_$ccast'
                  (Data.Bson.Generic.$fVala_$ccast'List
                     @ DirectoryServer.FileLock
                     DirectoryServer.$fFromBSONFileLock_$cfromBSON
                       `cast`
                     (Sym (Data.Bson.Generic.N:FromBSON[0]
                               <DirectoryServer.FileLock>_N))
                     DirectoryServer.$fFromBSONFileMapping_$s$dmtoBSON
                       `cast`
                     (Sym (Data.Bson.Generic.N:ToBSON[0] <DirectoryServer.FileLock>_N))
                     DirectoryServer.$fFromBSONFileMapping8
                       `cast`
                     (Sym (Data.Typeable.Internal.N:Typeable[0]
                               <*>_N <DirectoryServer.FileLock>_N))
                     DirectoryServer.$fShowFileLock
                     DirectoryServer.$fEqFileLock)
                  DirectoryServer.$fFromBSONFileMapping6 -}
3c2ba257a5ddb3e3149e96c606ab4f0d
  $fFromBSONFileMapping_$s$fVala_$ccast' ::
    Data.Bson.Value -> GHC.Base.Maybe DirectoryServer.FileLock
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Data.Bson.Value) ->
                 case ds of wild {
                   DEFAULT -> GHC.Base.Nothing @ DirectoryServer.FileLock
                   Data.Bson.Doc x
                   -> DirectoryServer.$fFromBSONFileLock_$cfromBSON x }) -}
3c2ba257a5ddb3e3149e96c606ab4f0d
  $fFromBSONFileMapping_$s$fVala_$cp1Val ::
    Data.Typeable.Internal.Typeable DirectoryServer.FileLock
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.$fFromBSONFileMapping8
                  `cast`
                (Sym (Data.Typeable.Internal.N:Typeable[0]
                          <*>_N <DirectoryServer.FileLock>_N)) -}
3c2ba257a5ddb3e3149e96c606ab4f0d
  $fFromBSONFileMapping_$s$fVala_$cp2Val ::
    GHC.Show.Show DirectoryServer.FileLock
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.$fShowFileLock -}
3c2ba257a5ddb3e3149e96c606ab4f0d
  $fFromBSONFileMapping_$s$fVala_$cp3Val ::
    GHC.Classes.Eq DirectoryServer.FileLock
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.$fEqFileLock -}
3c2ba257a5ddb3e3149e96c606ab4f0d
  $fFromBSONFileMapping_$s$fVala_$cvalList ::
    [DirectoryServer.FileLock] -> Data.Bson.Value
  {- Arity: 1, Strictness: <L,1*U>m4,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: [DirectoryServer.FileLock]) ->
                 Data.Bson.Array
                   (GHC.Base.build
                      @ Data.Bson.Value
                      (\ @ b1
                         (c :: Data.Bson.Value -> b1 -> b1)[OneShot]
                         (n :: b1)[OneShot] ->
                       GHC.Base.foldr
                         @ DirectoryServer.FileLock
                         @ b1
                         (GHC.Base.mapFB
                            @ Data.Bson.Value
                            @ b1
                            @ DirectoryServer.FileLock
                            c
                            (\ (x :: DirectoryServer.FileLock) ->
                             Data.Bson.Doc
                               (DirectoryServer.$fFromBSONFileMapping_$s$dmtoBSON x)))
                         n
                         eta))) -}
3c2ba257a5ddb3e3149e96c606ab4f0d
  $fFromBSONFileMapping_$s$fVala_$cvalMaybe ::
    GHC.Base.Maybe DirectoryServer.FileLock -> Data.Bson.Value
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: GHC.Base.Maybe DirectoryServer.FileLock) ->
                 case eta of wild {
                   GHC.Base.Nothing -> Data.Bson.Null
                   GHC.Base.Just x
                   -> Data.Bson.Doc
                        (DirectoryServer.$fFromBSONFileMapping_$s$dmtoBSON x) }) -}
3c2ba257a5ddb3e3149e96c606ab4f0d
  $fFromBSONFileMapping_$sconstructorCount ::
    DirectoryServer.FileLock -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: DirectoryServer.FileLock) ->
                 DirectoryServer.$fFromBSONFileMapping14
                   `cast`
                 (Data.Bson.Generic.N:GConstructorCount[0]
                      (Sym (DirectoryServer.Rep_FileLock[0])))
                   @ GHC.Prim.Any
                   (DirectoryServer.$fFromBSONFileMapping_$cfrom @ GHC.Prim.Any x)) -}
1fd2a367471800d2b722f13dfb7faed2
  $fFromBSONFileMapping_lvl47 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 3#) -}
3c2ba257a5ddb3e3149e96c606ab4f0d
  $fFromJSONFileLock ::
    Data.Aeson.Types.Class.FromJSON DirectoryServer.FileLock
  DFunId
  {- Arity: 1, Strictness: <L,U>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                DirectoryServer.$fFromJSONFileLock_$cparseJSON
                  `cast`
                (Sym (Data.Aeson.Types.Class.N:FromJSON[0]
                          <DirectoryServer.FileLock>_N)) -}
a3c5197721f48cb9612bbf94b240f4eb
  $fFromJSONFileLock1 ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.M1
            GHC.Generics.D
            ('GHC.Generics.MetaData
               "FileLock"
               "DirectoryServer"
               "Gluon-0.1.0.0-2zM8ehVFg6FFhvYw0f6srV"
               'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "FileLocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
             GHC.Generics.:+: (GHC.Generics.C1
                                 ('GHC.Generics.MetaCons
                                    "FileUnlocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                 GHC.Generics.U1
                               GHC.Generics.:+: GHC.Generics.C1
                                                  ('GHC.Generics.MetaCons
                                                     "FileReadOnly"
                                                     'GHC.Generics.PrefixI
                                                     'GHC.Types.False)
                                                  GHC.Generics.U1))
            GHC.Prim.Any)
  {- Unfolding: (DirectoryServer.$fFromJSONFileLock2
                   @ GHC.Prim.Any
                   Data.Aeson.Types.Internal.defaultOptions) -}
06009ca41be6c1dbc5fdfbde3affc02c
  $fFromJSONFileLock10 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.Internal.Pair
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            ((GHC.Generics.:+:)
               (GHC.Generics.M1
                  GHC.Generics.C
                  ('GHC.Generics.MetaCons
                     "FileUnlocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                  GHC.Generics.U1)
               (GHC.Generics.M1
                  GHC.Generics.C
                  ('GHC.Generics.MetaCons
                     "FileReadOnly" 'GHC.Generics.PrefixI 'GHC.Types.False)
                  GHC.Generics.U1)
               a1))
  {- Arity: 2,
     Unfolding: (Data.Aeson.Types.Generic.$fFromPair:+:_$cparsePair
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "FileUnlocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "FileReadOnly" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   DirectoryServer.$fFromJSONFileLock14
                     `cast`
                   (Sym (Data.Aeson.Types.Generic.N:FromPair[0]
                             <GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "FileUnlocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1>_N))
                   DirectoryServer.$fFromJSONFileLock11
                     `cast`
                   (Sym (Data.Aeson.Types.Generic.N:FromPair[0]
                             <GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "FileReadOnly" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1>_N))) -}
9013513565f3828cdf47fdc8eb3ad800
  $fFromJSONFileLock11 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.Internal.Pair
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "FileReadOnly" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
               a1))
  {- Arity: 2,
     Strictness: <S(LC(S)LLLL),1*U(U,U,U,U,U,U)><S(S(SSS)L),1*U(1*U(U,U,U),U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ @ a1
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: Data.Aeson.Types.Internal.Pair) ->
                 case w of ww { Data.Aeson.Types.Internal.Options ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1 of ww7 { (,) ww8 ww9 ->
                 case ww8 of ww10 { Data.Text.Internal.Text ww11 ww12 ww13 ->
                 DirectoryServer.$w$dFromPair
                   @ a1
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww11
                   ww12
                   ww13
                   ww9 } } }) -}
bf77da177c8aeb8dc410728a91cbf692
  $fFromJSONFileLock12 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser (GHC.Generics.U1 a)
  {- Arity: 2,
     Unfolding: (Data.Aeson.Types.Generic.$fConsFromJSONf_$cconsParseJSON
                   @ GHC.Generics.U1
                   @ Data.Aeson.Types.Generic.False
                   Data.Aeson.Types.Generic.$fIsRecordU1False_$cisUnary
                     `cast`
                   (Sym (Data.Aeson.Types.Generic.N:IsRecord[0]
                             <GHC.Generics.U1>_N <Data.Aeson.Types.Generic.False>_N))
                   DirectoryServer.$fFromJSONFileLock13
                     `cast`
                   (Trans
                        (forall (a :: <*>_N).
                         <Data.Aeson.Types.Internal.Options>_R
                         ->_R <GHC.Base.Maybe Data.Text.Internal.Text>_R
                         ->_R <Data.Aeson.Types.Internal.Value>_R
                         ->_R Sym (Data.Aeson.Types.Generic.N:Tagged[0]
                                       <Data.Aeson.Types.Generic.False>_P
                                       <Data.Aeson.Types.Internal.Parser (GHC.Generics.U1 a)>_R))
                        (Sym (Data.Aeson.Types.Generic.N:ConsFromJSON'[0]
                                  <GHC.Generics.U1>_N <Data.Aeson.Types.Generic.False>_N)))) -}
de4e48ef8c5e6f9160cd5ef2bce86d0f
  $fFromJSONFileLock13 ::
    Data.Aeson.Types.Internal.Options
    -> GHC.Base.Maybe Data.Text.Internal.Text
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser (GHC.Generics.U1 a)
  {- Arity: 3, Strictness: <L,A><L,A><S,1*U>,
     Unfolding: InlineRule (3, True, True)
                (\ @ a
                   (opts :: Data.Aeson.Types.Internal.Options)
                   (ds :: GHC.Base.Maybe Data.Text.Internal.Text)
                   (x :: Data.Aeson.Types.Internal.Value) ->
                 Data.Aeson.Types.Generic.$w$cgParseJSON @ a x) -}
33ba20c282dd94be094cf3f73f0ab6f5
  $fFromJSONFileLock14 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.Internal.Pair
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "FileUnlocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
               a1))
  {- Arity: 2,
     Strictness: <S(LC(S)LLLL),1*U(U,U,U,U,U,U)><S(S(SSS)L),1*U(1*U(U,U,U),U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ @ a1
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: Data.Aeson.Types.Internal.Pair) ->
                 case w of ww { Data.Aeson.Types.Internal.Options ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1 of ww7 { (,) ww8 ww9 ->
                 case ww8 of ww10 { Data.Text.Internal.Text ww11 ww12 ww13 ->
                 DirectoryServer.$w$dFromPair1
                   @ a1
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww11
                   ww12
                   ww13
                   ww9 } } }) -}
af21dcb1c711c7bf32a12ac598244e48
  $fFromJSONFileLock15 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.Internal.Pair
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "FileLocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
               a1))
  {- Arity: 2,
     Strictness: <S(LC(S)LLLL),1*U(U,U,U,U,U,U)><S(S(SSS)L),1*U(1*U(U,U,U),U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ @ a1
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: Data.Aeson.Types.Internal.Pair) ->
                 case w of ww { Data.Aeson.Types.Internal.Options ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1 of ww7 { (,) ww8 ww9 ->
                 case ww8 of ww10 { Data.Text.Internal.Text ww11 ww12 ww13 ->
                 DirectoryServer.$w$dFromPair2
                   @ a1
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww11
                   ww12
                   ww13
                   ww9 } } }) -}
12c7f0de5a99ed0b62158d56992c22b3
  $fFromJSONFileLock16 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Text.Internal.Text
    -> GHC.Base.Maybe
         ((GHC.Generics.:+:)
            (GHC.Generics.M1
               GHC.Generics.C
               ('GHC.Generics.MetaCons
                  "FileLocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "FileUnlocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
             GHC.Generics.:+: GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "FileReadOnly" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1)
            a1)
  {- Arity: 2,
     Strictness: <S(LC(S)LLLL),1*U(A,C(U),A,A,A,A)><S(SSS),1*U(U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ @ a1
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: Data.Text.Internal.Text) ->
                 case w of ww { Data.Aeson.Types.Internal.Options ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1 of ww7 { Data.Text.Internal.Text ww8 ww9 ww10 ->
                 DirectoryServer.$w$dSumFromString @ a1 ww2 ww8 ww9 ww10 } }) -}
fec54d4a8fd5c3a3c8f2b1c3005e03aa
  $fFromJSONFileLock2 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.M1
            GHC.Generics.D
            ('GHC.Generics.MetaData
               "FileLock"
               "DirectoryServer"
               "Gluon-0.1.0.0-2zM8ehVFg6FFhvYw0f6srV"
               'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "FileLocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
             GHC.Generics.:+: (GHC.Generics.C1
                                 ('GHC.Generics.MetaCons
                                    "FileUnlocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                 GHC.Generics.U1
                               GHC.Generics.:+: GHC.Generics.C1
                                                  ('GHC.Generics.MetaCons
                                                     "FileReadOnly"
                                                     'GHC.Generics.PrefixI
                                                     'GHC.Types.False)
                                                  GHC.Generics.U1))
            a1)
  {- Arity: 1, Strictness: <L,1*U(U,U,U,U,U,U)>,
     Unfolding: (\ @ a1 (opts :: Data.Aeson.Types.Internal.Options) ->
                 let {
                   g :: Data.Aeson.Types.Internal.Value
                        -> Data.Aeson.Types.Generic.Tagged
                             Data.Aeson.Types.Generic.True
                             (Data.Aeson.Types.Internal.Parser
                                ((GHC.Generics.:+:)
                                   (GHC.Generics.M1
                                      GHC.Generics.C
                                      ('GHC.Generics.MetaCons
                                         "FileLocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                      GHC.Generics.U1)
                                   (GHC.Generics.C1
                                      ('GHC.Generics.MetaCons
                                         "FileUnlocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                      GHC.Generics.U1
                                    GHC.Generics.:+: GHC.Generics.C1
                                                       ('GHC.Generics.MetaCons
                                                          "FileReadOnly"
                                                          'GHC.Generics.PrefixI
                                                          'GHC.Types.False)
                                                       GHC.Generics.U1)
                                   a1))
                   = case opts of ww { Data.Aeson.Types.Internal.Options ww1 ww2 ww3 ww4 ww5 ww6 ->
                     Data.Aeson.Types.Generic.$w$cparseSum
                       @ (GHC.Generics.M1
                            GHC.Generics.C
                            ('GHC.Generics.MetaCons
                               "FileLocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                            GHC.Generics.U1)
                       @ (GHC.Generics.C1
                            ('GHC.Generics.MetaCons
                               "FileUnlocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                            GHC.Generics.U1
                          GHC.Generics.:+: GHC.Generics.C1
                                             ('GHC.Generics.MetaCons
                                                "FileReadOnly"
                                                'GHC.Generics.PrefixI
                                                'GHC.Types.False)
                                             GHC.Generics.U1)
                       DirectoryServer.$fFromJSONFileLock16
                         `cast`
                       (Sym (Data.Aeson.Types.Generic.N:SumFromString[0]
                                 <GHC.Generics.M1
                                    GHC.Generics.C
                                    ('GHC.Generics.MetaCons
                                       "FileLocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                    GHC.Generics.U1
                                  GHC.Generics.:+: (GHC.Generics.C1
                                                      ('GHC.Generics.MetaCons
                                                         "FileUnlocked"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1
                                                    GHC.Generics.:+: GHC.Generics.C1
                                                                       ('GHC.Generics.MetaCons
                                                                          "FileReadOnly"
                                                                          'GHC.Generics.PrefixI
                                                                          'GHC.Types.False)
                                                                       GHC.Generics.U1)>_N))
                       DirectoryServer.$fFromJSONFileLock9
                         `cast`
                       (Sym (Data.Aeson.Types.Generic.N:FromPair[0]
                                 <GHC.Generics.M1
                                    GHC.Generics.C
                                    ('GHC.Generics.MetaCons
                                       "FileLocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                    GHC.Generics.U1
                                  GHC.Generics.:+: (GHC.Generics.C1
                                                      ('GHC.Generics.MetaCons
                                                         "FileUnlocked"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1
                                                    GHC.Generics.:+: GHC.Generics.C1
                                                                       ('GHC.Generics.MetaCons
                                                                          "FileReadOnly"
                                                                          'GHC.Generics.PrefixI
                                                                          'GHC.Types.False)
                                                                       GHC.Generics.U1)>_N))
                       DirectoryServer.$fFromJSONFileLock3
                         `cast`
                       (Sym (Data.Aeson.Types.Generic.N:FromTaggedObject[0]
                                 <GHC.Generics.M1
                                    GHC.Generics.C
                                    ('GHC.Generics.MetaCons
                                       "FileLocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                    GHC.Generics.U1
                                  GHC.Generics.:+: (GHC.Generics.C1
                                                      ('GHC.Generics.MetaCons
                                                         "FileUnlocked"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1
                                                    GHC.Generics.:+: GHC.Generics.C1
                                                                       ('GHC.Generics.MetaCons
                                                                          "FileReadOnly"
                                                                          'GHC.Generics.PrefixI
                                                                          'GHC.Types.False)
                                                                       GHC.Generics.U1)>_N))
                       @ a1
                       ww1
                       ww2
                       ww3
                       ww4
                       ww5
                       ww6 }
                 } in
                 \ (x :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   m :: Data.Aeson.Types.Generic.Tagged
                          Data.Aeson.Types.Generic.True
                          (Data.Aeson.Types.Internal.Parser
                             ((GHC.Generics.:+:)
                                (GHC.Generics.M1
                                   GHC.Generics.C
                                   ('GHC.Generics.MetaCons
                                      "FileLocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                   GHC.Generics.U1)
                                (GHC.Generics.C1
                                   ('GHC.Generics.MetaCons
                                      "FileUnlocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                   GHC.Generics.U1
                                 GHC.Generics.:+: GHC.Generics.C1
                                                    ('GHC.Generics.MetaCons
                                                       "FileReadOnly"
                                                       'GHC.Generics.PrefixI
                                                       'GHC.Types.False)
                                                    GHC.Generics.U1)
                                a1))
                   = g x
                 } in
                 (\ @ (f1 :: * -> *)
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f1 r)
                    (ks :: Data.Aeson.Types.Internal.Success
                             (GHC.Generics.M1
                                GHC.Generics.D
                                ('GHC.Generics.MetaData
                                   "FileLock"
                                   "DirectoryServer"
                                   "Gluon-0.1.0.0-2zM8ehVFg6FFhvYw0f6srV"
                                   'GHC.Types.False)
                                (GHC.Generics.C1
                                   ('GHC.Generics.MetaCons
                                      "FileLocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                   GHC.Generics.U1
                                 GHC.Generics.:+: (GHC.Generics.C1
                                                     ('GHC.Generics.MetaCons
                                                        "FileUnlocked"
                                                        'GHC.Generics.PrefixI
                                                        'GHC.Types.False)
                                                     GHC.Generics.U1
                                                   GHC.Generics.:+: GHC.Generics.C1
                                                                      ('GHC.Generics.MetaCons
                                                                         "FileReadOnly"
                                                                         'GHC.Generics.PrefixI
                                                                         'GHC.Types.False)
                                                                      GHC.Generics.U1))
                                a1)
                             f1
                             r) ->
                  m `cast`
                  (Trans
                       (Data.Aeson.Types.Generic.N:Tagged[0]
                            <Data.Aeson.Types.Generic.True>_P
                            <Data.Aeson.Types.Internal.Parser
                               ((GHC.Generics.:+:)
                                  (GHC.Generics.M1
                                     GHC.Generics.C
                                     ('GHC.Generics.MetaCons
                                        "FileLocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     GHC.Generics.U1)
                                  (GHC.Generics.C1
                                     ('GHC.Generics.MetaCons
                                        "FileUnlocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     GHC.Generics.U1
                                   GHC.Generics.:+: GHC.Generics.C1
                                                      ('GHC.Generics.MetaCons
                                                         "FileReadOnly"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1)
                                  a1)>_R)
                       (Data.Aeson.Types.Internal.N:Parser[0]
                            <(GHC.Generics.:+:)
                               (GHC.Generics.C1
                                  ('GHC.Generics.MetaCons
                                     "FileLocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                  GHC.Generics.U1)
                               (GHC.Generics.C1
                                  ('GHC.Generics.MetaCons
                                     "FileUnlocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                  GHC.Generics.U1
                                GHC.Generics.:+: GHC.Generics.C1
                                                   ('GHC.Generics.MetaCons
                                                      "FileReadOnly"
                                                      'GHC.Generics.PrefixI
                                                      'GHC.Types.False)
                                                   GHC.Generics.U1)
                               a1>_R))
                    @ f1
                    @ r
                    path
                    kf
                    (\ (a2 :: (GHC.Generics.:+:)
                                (GHC.Generics.C1
                                   ('GHC.Generics.MetaCons
                                      "FileLocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                   GHC.Generics.U1)
                                (GHC.Generics.C1
                                   ('GHC.Generics.MetaCons
                                      "FileUnlocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                   GHC.Generics.U1
                                 GHC.Generics.:+: GHC.Generics.C1
                                                    ('GHC.Generics.MetaCons
                                                       "FileReadOnly"
                                                       'GHC.Generics.PrefixI
                                                       'GHC.Types.False)
                                                    GHC.Generics.U1)
                                a1) ->
                     ks
                       a2
                         `cast`
                       (Sym (GHC.Generics.N:M1[0]
                                 <GHC.Generics.D>_P
                                 <'GHC.Generics.MetaData
                                    "FileLock"
                                    "DirectoryServer"
                                    "Gluon-0.1.0.0-2zM8ehVFg6FFhvYw0f6srV"
                                    'GHC.Types.False>_P
                                 <GHC.Generics.C1
                                    ('GHC.Generics.MetaCons
                                       "FileLocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                    GHC.Generics.U1
                                  GHC.Generics.:+: (GHC.Generics.C1
                                                      ('GHC.Generics.MetaCons
                                                         "FileUnlocked"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1
                                                    GHC.Generics.:+: GHC.Generics.C1
                                                                       ('GHC.Generics.MetaCons
                                                                          "FileReadOnly"
                                                                          'GHC.Generics.PrefixI
                                                                          'GHC.Types.False)
                                                                       GHC.Generics.U1)>_R) <a1>_N)))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                           <GHC.Generics.M1
                              GHC.Generics.D
                              ('GHC.Generics.MetaData
                                 "FileLock"
                                 "DirectoryServer"
                                 "Gluon-0.1.0.0-2zM8ehVFg6FFhvYw0f6srV"
                                 'GHC.Types.False)
                              (GHC.Generics.C1
                                 ('GHC.Generics.MetaCons
                                    "FileLocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                 GHC.Generics.U1
                               GHC.Generics.:+: (GHC.Generics.C1
                                                   ('GHC.Generics.MetaCons
                                                      "FileUnlocked"
                                                      'GHC.Generics.PrefixI
                                                      'GHC.Types.False)
                                                   GHC.Generics.U1
                                                 GHC.Generics.:+: GHC.Generics.C1
                                                                    ('GHC.Generics.MetaCons
                                                                       "FileReadOnly"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1))
                              a1>_R))) -}
e86c725f9f9c0424b53513b441d3b6a9
  $fFromJSONFileLock3 ::
    Data.Aeson.Types.Internal.Options
    -> GHC.Base.String
    -> Data.Aeson.Types.Internal.Object
    -> Data.Text.Internal.Text
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            ((GHC.Generics.:+:)
               (GHC.Generics.M1
                  GHC.Generics.C
                  ('GHC.Generics.MetaCons
                     "FileLocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                  GHC.Generics.U1)
               (GHC.Generics.C1
                  ('GHC.Generics.MetaCons
                     "FileUnlocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                  GHC.Generics.U1
                GHC.Generics.:+: GHC.Generics.C1
                                   ('GHC.Generics.MetaCons
                                      "FileReadOnly" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                   GHC.Generics.U1)
               a1))
  {- Arity: 4,
     Unfolding: (Data.Aeson.Types.Generic.$fFromTaggedObject:+:_$cparseFromTaggedObject
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "FileLocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.C1
                        ('GHC.Generics.MetaCons
                           "FileUnlocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: GHC.Generics.C1
                                         ('GHC.Generics.MetaCons
                                            "FileReadOnly" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                   DirectoryServer.$fFromJSONFileLock8
                     `cast`
                   (Sym (Data.Aeson.Types.Generic.N:FromTaggedObject[0]
                             <GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "FileLocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1>_N))
                   DirectoryServer.$fFromJSONFileLock4
                     `cast`
                   (Sym (Data.Aeson.Types.Generic.N:FromTaggedObject[0]
                             <GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "FileUnlocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1
                              GHC.Generics.:+: GHC.Generics.M1
                                                 GHC.Generics.C
                                                 ('GHC.Generics.MetaCons
                                                    "FileReadOnly"
                                                    'GHC.Generics.PrefixI
                                                    'GHC.Types.False)
                                                 GHC.Generics.U1>_N))) -}
da0443e16fe63337baf527612ff9d30b
  $fFromJSONFileLock4 ::
    Data.Aeson.Types.Internal.Options
    -> GHC.Base.String
    -> Data.Aeson.Types.Internal.Object
    -> Data.Text.Internal.Text
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            ((GHC.Generics.:+:)
               (GHC.Generics.M1
                  GHC.Generics.C
                  ('GHC.Generics.MetaCons
                     "FileUnlocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                  GHC.Generics.U1)
               (GHC.Generics.M1
                  GHC.Generics.C
                  ('GHC.Generics.MetaCons
                     "FileReadOnly" 'GHC.Generics.PrefixI 'GHC.Types.False)
                  GHC.Generics.U1)
               a1))
  {- Arity: 4,
     Unfolding: (Data.Aeson.Types.Generic.$fFromTaggedObject:+:_$cparseFromTaggedObject
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "FileUnlocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "FileReadOnly" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   DirectoryServer.$fFromJSONFileLock7
                     `cast`
                   (Sym (Data.Aeson.Types.Generic.N:FromTaggedObject[0]
                             <GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "FileUnlocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1>_N))
                   DirectoryServer.$fFromJSONFileLock5
                     `cast`
                   (Sym (Data.Aeson.Types.Generic.N:FromTaggedObject[0]
                             <GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "FileReadOnly" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1>_N))) -}
b74b445aab2d563f048bb16596f512c6
  $fFromJSONFileLock5 ::
    Data.Aeson.Types.Internal.Options
    -> GHC.Base.String
    -> Data.Aeson.Types.Internal.Object
    -> Data.Text.Internal.Text
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "FileReadOnly" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
               a))
  {- Arity: 4,
     Strictness: <S(LC(S)LLLL),1*U(U,U,U,U,U,U)><L,U><L,U><S(SSS),1*U(U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ @ a
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: GHC.Base.String)
                   (w2 :: Data.Aeson.Types.Internal.Object)
                   (w3 :: Data.Text.Internal.Text) ->
                 case w of ww { Data.Aeson.Types.Internal.Options ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w3 of ww7 { Data.Text.Internal.Text ww8 ww9 ww10 ->
                 DirectoryServer.$w$dFromTaggedObject
                   @ a
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   w1
                   w2
                   ww8
                   ww9
                   ww10 } }) -}
5c556ccbb9970b38c349f9cb8beb3cfc
  $fFromJSONFileLock6 ::
    Data.Aeson.Types.Internal.Options
    -> GHC.Base.String
    -> Data.Aeson.Types.Internal.Object
    -> Data.Aeson.Types.Internal.Parser (GHC.Generics.U1 a)
  {- Arity: 2, Strictness: <L,U><L,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   (opts :: Data.Aeson.Types.Internal.Options)
                   (contentsFieldName :: GHC.Base.String) ->
                 let {
                   g :: Data.Aeson.Types.Internal.Object
                        -> Data.Aeson.Types.Generic.Tagged
                             Data.Aeson.Types.Generic.False
                             (Data.Aeson.Types.Internal.Parser (GHC.Generics.U1 a))
                   = Data.Aeson.Types.Generic.$fFromTaggedObject''fFalse_$cparseFromTaggedObject''
                       @ GHC.Generics.U1
                       Data.Aeson.Types.Generic.$fGFromJSONU1_$cgParseJSON
                         `cast`
                       (Sym (Data.Aeson.Types.Class.N:GFromJSON[0] <GHC.Generics.U1>_N))
                       @ a
                       opts
                       contentsFieldName
                 } in
                 (\ (x :: Data.Aeson.Types.Internal.Object) -> g x)
                   `cast`
                 (<Data.Aeson.Types.Internal.Object>_R
                  ->_R Data.Aeson.Types.Generic.N:Tagged[0]
                           <Data.Aeson.Types.Generic.False>_P
                           <Data.Aeson.Types.Internal.Parser (GHC.Generics.U1 a)>_R)) -}
9874ab3d92d96f0aa53553a20eabc0eb
  $fFromJSONFileLock7 ::
    Data.Aeson.Types.Internal.Options
    -> GHC.Base.String
    -> Data.Aeson.Types.Internal.Object
    -> Data.Text.Internal.Text
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "FileUnlocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
               a))
  {- Arity: 4,
     Strictness: <S(LC(S)LLLL),1*U(U,U,U,U,U,U)><L,U><L,U><S(SSS),1*U(U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ @ a
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: GHC.Base.String)
                   (w2 :: Data.Aeson.Types.Internal.Object)
                   (w3 :: Data.Text.Internal.Text) ->
                 case w of ww { Data.Aeson.Types.Internal.Options ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w3 of ww7 { Data.Text.Internal.Text ww8 ww9 ww10 ->
                 DirectoryServer.$w$dFromTaggedObject1
                   @ a
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   w1
                   w2
                   ww8
                   ww9
                   ww10 } }) -}
ec3df11873f7a3ce07c83244b5fc3050
  $fFromJSONFileLock8 ::
    Data.Aeson.Types.Internal.Options
    -> GHC.Base.String
    -> Data.Aeson.Types.Internal.Object
    -> Data.Text.Internal.Text
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "FileLocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
               a))
  {- Arity: 4,
     Strictness: <S(LC(S)LLLL),1*U(U,U,U,U,U,U)><L,U><L,U><S(SSS),1*U(U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ @ a
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: GHC.Base.String)
                   (w2 :: Data.Aeson.Types.Internal.Object)
                   (w3 :: Data.Text.Internal.Text) ->
                 case w of ww { Data.Aeson.Types.Internal.Options ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w3 of ww7 { Data.Text.Internal.Text ww8 ww9 ww10 ->
                 DirectoryServer.$w$dFromTaggedObject2
                   @ a
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   w1
                   w2
                   ww8
                   ww9
                   ww10 } }) -}
6162abd4528fb82264e1ea3cfeafb809
  $fFromJSONFileLock9 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.Internal.Pair
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            ((GHC.Generics.:+:)
               (GHC.Generics.M1
                  GHC.Generics.C
                  ('GHC.Generics.MetaCons
                     "FileLocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                  GHC.Generics.U1)
               (GHC.Generics.C1
                  ('GHC.Generics.MetaCons
                     "FileUnlocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                  GHC.Generics.U1
                GHC.Generics.:+: GHC.Generics.C1
                                   ('GHC.Generics.MetaCons
                                      "FileReadOnly" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                   GHC.Generics.U1)
               a1))
  {- Arity: 2,
     Unfolding: (Data.Aeson.Types.Generic.$fFromPair:+:_$cparsePair
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "FileLocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.C1
                        ('GHC.Generics.MetaCons
                           "FileUnlocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: GHC.Generics.C1
                                         ('GHC.Generics.MetaCons
                                            "FileReadOnly" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                   DirectoryServer.$fFromJSONFileLock15
                     `cast`
                   (Sym (Data.Aeson.Types.Generic.N:FromPair[0]
                             <GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "FileLocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1>_N))
                   DirectoryServer.$fFromJSONFileLock10
                     `cast`
                   (Sym (Data.Aeson.Types.Generic.N:FromPair[0]
                             <GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "FileUnlocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1
                              GHC.Generics.:+: GHC.Generics.M1
                                                 GHC.Generics.C
                                                 ('GHC.Generics.MetaCons
                                                    "FileReadOnly"
                                                    'GHC.Generics.PrefixI
                                                    'GHC.Types.False)
                                                 GHC.Generics.U1>_N))) -}
3c2ba257a5ddb3e3149e96c606ab4f0d
  $fFromJSONFileLock_$cparseJSON ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser DirectoryServer.FileLock
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (x :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser
                          (GHC.Generics.M1
                             GHC.Generics.D
                             ('GHC.Generics.MetaData
                                "FileLock"
                                "DirectoryServer"
                                "Gluon-0.1.0.0-2zM8ehVFg6FFhvYw0f6srV"
                                'GHC.Types.False)
                             (GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "FileLocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1
                              GHC.Generics.:+: (GHC.Generics.C1
                                                  ('GHC.Generics.MetaCons
                                                     "FileUnlocked"
                                                     'GHC.Generics.PrefixI
                                                     'GHC.Types.False)
                                                  GHC.Generics.U1
                                                GHC.Generics.:+: GHC.Generics.C1
                                                                   ('GHC.Generics.MetaCons
                                                                      "FileReadOnly"
                                                                      'GHC.Generics.PrefixI
                                                                      'GHC.Types.False)
                                                                   GHC.Generics.U1))
                             GHC.Prim.Any)
                   = DirectoryServer.$fFromJSONFileLock1 x
                 } in
                 (\ @ (f1 :: * -> *)
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f1 r)
                    (ks :: Data.Aeson.Types.Internal.Success
                             DirectoryServer.FileLock f1 r) ->
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0]
                       (Sub (Sym (DirectoryServer.Rep_FileLock[0])) <GHC.Prim.Any>_N))
                    @ f1
                    @ r
                    path
                    kf
                    (\ (a1 :: GHC.Generics.Rep
                                DirectoryServer.FileLock GHC.Prim.Any) ->
                     ks (DirectoryServer.$fFromJSONFileLock_$cto @ GHC.Prim.Any a1)))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                           <DirectoryServer.FileLock>_R))) -}
3c2ba257a5ddb3e3149e96c606ab4f0d
  $fFromJSONFileLock_$cto ::
    GHC.Generics.Rep DirectoryServer.FileLock x
    -> DirectoryServer.FileLock
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (ds :: GHC.Generics.Rep DirectoryServer.FileLock x) ->
                 case ds
                        `cast`
                      (Trans
                           (Sub (DirectoryServer.Rep_FileLock[0]))
                           (GHC.Generics.N:M1[0]
                                <GHC.Generics.D>_P
                                <'GHC.Generics.MetaData
                                   "FileLock"
                                   "DirectoryServer"
                                   "Gluon-0.1.0.0-2zM8ehVFg6FFhvYw0f6srV"
                                   'GHC.Types.False>_P
                                <GHC.Generics.M1
                                   GHC.Generics.C
                                   ('GHC.Generics.MetaCons
                                      "FileLocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                   GHC.Generics.U1
                                 GHC.Generics.:+: (GHC.Generics.C1
                                                     ('GHC.Generics.MetaCons
                                                        "FileUnlocked"
                                                        'GHC.Generics.PrefixI
                                                        'GHC.Types.False)
                                                     GHC.Generics.U1
                                                   GHC.Generics.:+: GHC.Generics.C1
                                                                      ('GHC.Generics.MetaCons
                                                                         "FileReadOnly"
                                                                         'GHC.Generics.PrefixI
                                                                         'GHC.Types.False)
                                                                      GHC.Generics.U1)>_R) <x>_N) of wild {
                   GHC.Generics.L1 ds1
                   -> case ds1 of tpl { DEFAULT -> DirectoryServer.FileLocked }
                   GHC.Generics.R1 ds1
                   -> case ds1 of wild1 {
                        GHC.Generics.L1 ds2
                        -> case ds2 of tpl { DEFAULT -> DirectoryServer.FileUnlocked }
                        GHC.Generics.R1 ds2
                        -> case ds2 of tpl { DEFAULT ->
                           DirectoryServer.FileReadOnly } } }) -}
3c2ba257a5ddb3e3149e96c606ab4f0d
  $fFromJSONFileMapping ::
    Data.Aeson.Types.Class.FromJSON DirectoryServer.FileMapping
  DFunId
  {- Arity: 1, Strictness: <L,U>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                DirectoryServer.$fFromJSONFileMapping_$cparseJSON
                  `cast`
                (Sym (Data.Aeson.Types.Class.N:FromJSON[0]
                          <DirectoryServer.FileMapping>_N)) -}
3c2ba257a5ddb3e3149e96c606ab4f0d
  $fFromJSONFileMapping1 ::
    Data.Aeson.Types.Internal.Options
    -> GHC.Base.Maybe Data.Text.Internal.Text
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Generic.Tagged
         Data.Aeson.Types.Generic.True
         (Data.Aeson.Types.Internal.Parser
            ((GHC.Generics.:*:)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "fileName")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 GHC.IO.FilePath))
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "identity")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 CommonServer.Identity)
                GHC.Generics.:*: GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "lock")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 DirectoryServer.FileLock))
               a))
  {- Arity: 3, Strictness: <L,U(U,U,U,U,U,U)><L,A><S,1*U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, True)
                (\ @ a
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: GHC.Base.Maybe Data.Text.Internal.Text)
                   (w2 :: Data.Aeson.Types.Internal.Value) ->
                 DirectoryServer.$w$dConsFromJSON' @ a w w2) -}
aeedc48275dadc6b73695724060a5306
  $fFromJSONFileMapping2 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1)
  {- Arity: 2, Strictness: <L,A><L,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, True)
                (\ @ a1
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: Data.Aeson.Types.Internal.Value) ->
                 DirectoryServer.$w$dGFromJSON @ a1 w1) -}
6bed1d4384014016c909f1fa15355e59
  $fFromJSONFileMapping3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "String"#) -}
64ccda2ed8341b837271d10483ecc8bf
  $fFromJSONFileMapping4 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.K1 GHC.Generics.R CommonServer.Identity a1)
  {- Arity: 2, Strictness: <L,A><L,U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, True)
                (\ @ a1
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: Data.Aeson.Types.Internal.Value) ->
                 DirectoryServer.$w$dGFromJSON1 @ a1 w1) -}
3c2ba257a5ddb3e3149e96c606ab4f0d
  $fFromJSONFileMapping5 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.K1 GHC.Generics.R DirectoryServer.FileLock a1)
  {- Arity: 2, Strictness: <L,A><L,U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, True)
                (\ @ a1
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: Data.Aeson.Types.Internal.Value) ->
                 DirectoryServer.$w$dGFromJSON2 @ a1 w1) -}
3c2ba257a5ddb3e3149e96c606ab4f0d
  $fFromJSONFileMapping6 ::
    (GHC.Generics.:*:)
      (GHC.Generics.M1
         GHC.Generics.S
         ('GHC.Generics.MetaSel
            ('GHC.Base.Just "fileName")
            'GHC.Generics.NoSourceUnpackedness
            'GHC.Generics.NoSourceStrictness
            'GHC.Generics.DecidedLazy)
         (GHC.Generics.Rec0 GHC.IO.FilePath))
      (GHC.Generics.S1
         ('GHC.Generics.MetaSel
            ('GHC.Base.Just "identity")
            'GHC.Generics.NoSourceUnpackedness
            'GHC.Generics.NoSourceStrictness
            'GHC.Generics.DecidedLazy)
         (GHC.Generics.Rec0 CommonServer.Identity)
       GHC.Generics.:*: GHC.Generics.S1
                          ('GHC.Generics.MetaSel
                             ('GHC.Base.Just "lock")
                             'GHC.Generics.NoSourceUnpackedness
                             'GHC.Generics.NoSourceStrictness
                             'GHC.Generics.DecidedLazy)
                          (GHC.Generics.Rec0 DirectoryServer.FileLock))
      a
    -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ a
                   (eta :: (GHC.Generics.:*:)
                             (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "fileName")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 GHC.IO.FilePath))
                             (GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "identity")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 CommonServer.Identity)
                              GHC.Generics.:*: GHC.Generics.S1
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "lock")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.Rec0 DirectoryServer.FileLock))
                             a) ->
                 GHC.Types.False) -}
3c2ba257a5ddb3e3149e96c606ab4f0d
  $fFromJSONFileMapping_$cparseJSON ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser DirectoryServer.FileMapping
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (x :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser
                          ((GHC.Generics.:*:)
                             (GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "fileName")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 GHC.IO.FilePath))
                             (GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "identity")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 CommonServer.Identity)
                              GHC.Generics.:*: GHC.Generics.S1
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "lock")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.Rec0 DirectoryServer.FileLock))
                             GHC.Prim.Any)
                   = Data.Aeson.Types.Generic.$fConsFromJSONf_$cconsParseJSON
                       @ (GHC.Generics.S1
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "fileName")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.Rec0 GHC.IO.FilePath)
                          GHC.Generics.:*: (GHC.Generics.S1
                                              ('GHC.Generics.MetaSel
                                                 ('GHC.Base.Just "identity")
                                                 'GHC.Generics.NoSourceUnpackedness
                                                 'GHC.Generics.NoSourceStrictness
                                                 'GHC.Generics.DecidedLazy)
                                              (GHC.Generics.Rec0 CommonServer.Identity)
                                            GHC.Generics.:*: GHC.Generics.S1
                                                               ('GHC.Generics.MetaSel
                                                                  ('GHC.Base.Just "lock")
                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                  'GHC.Generics.NoSourceStrictness
                                                                  'GHC.Generics.DecidedLazy)
                                                               (GHC.Generics.Rec0
                                                                  DirectoryServer.FileLock)))
                       @ Data.Aeson.Types.Generic.True
                       DirectoryServer.$fFromJSONFileMapping6
                         `cast`
                       (Sym (Data.Aeson.Types.Generic.N:IsRecord[0]
                                 <GHC.Generics.M1
                                    GHC.Generics.S
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "fileName")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.IO.FilePath)
                                  GHC.Generics.:*: (GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "identity")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0 CommonServer.Identity)
                                                    GHC.Generics.:*: GHC.Generics.S1
                                                                       ('GHC.Generics.MetaSel
                                                                          ('GHC.Base.Just "lock")
                                                                          'GHC.Generics.NoSourceUnpackedness
                                                                          'GHC.Generics.NoSourceStrictness
                                                                          'GHC.Generics.DecidedLazy)
                                                                       (GHC.Generics.Rec0
                                                                          DirectoryServer.FileLock))>_N
                                 <Data.Aeson.Types.Generic.True>_N))
                       DirectoryServer.$fFromJSONFileMapping1
                         `cast`
                       (Sym (Data.Aeson.Types.Generic.N:ConsFromJSON'[0]
                                 <GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "fileName")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.IO.FilePath)
                                  GHC.Generics.:*: (GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "identity")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0 CommonServer.Identity)
                                                    GHC.Generics.:*: GHC.Generics.S1
                                                                       ('GHC.Generics.MetaSel
                                                                          ('GHC.Base.Just "lock")
                                                                          'GHC.Generics.NoSourceUnpackedness
                                                                          'GHC.Generics.NoSourceStrictness
                                                                          'GHC.Generics.DecidedLazy)
                                                                       (GHC.Generics.Rec0
                                                                          DirectoryServer.FileLock))>_N
                                 <Data.Aeson.Types.Generic.True>_N))
                       @ GHC.Prim.Any
                       Data.Aeson.Types.Internal.defaultOptions
                       x
                 } in
                 (\ @ (f1 :: * -> *)
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f1 r)
                    (ks :: Data.Aeson.Types.Internal.Success
                             DirectoryServer.FileMapping f1 r) ->
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0]
                       <(GHC.Generics.:*:)
                          (GHC.Generics.S1
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "fileName")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 GHC.IO.FilePath))
                          (GHC.Generics.S1
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "identity")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 CommonServer.Identity)
                           GHC.Generics.:*: GHC.Generics.S1
                                              ('GHC.Generics.MetaSel
                                                 ('GHC.Base.Just "lock")
                                                 'GHC.Generics.NoSourceUnpackedness
                                                 'GHC.Generics.NoSourceStrictness
                                                 'GHC.Generics.DecidedLazy)
                                              (GHC.Generics.Rec0 DirectoryServer.FileLock))
                          GHC.Prim.Any>_R)
                    @ f1
                    @ r
                    path
                    kf
                    (\ (a2 :: (GHC.Generics.:*:)
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "fileName")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.IO.FilePath))
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "identity")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 CommonServer.Identity)
                                 GHC.Generics.:*: GHC.Generics.S1
                                                    ('GHC.Generics.MetaSel
                                                       ('GHC.Base.Just "lock")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.Rec0 DirectoryServer.FileLock))
                                GHC.Prim.Any) ->
                     ks
                       (DirectoryServer.$fFromBSONFileMapping_$cto
                          @ GHC.Prim.Any
                          a2
                            `cast`
                          (Trans
                               (Sym (GHC.Generics.N:M1[0]
                                         <GHC.Generics.C>_P
                                         <'GHC.Generics.MetaCons
                                            "FileMapping" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                         <GHC.Generics.S1
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "fileName")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0 GHC.IO.FilePath)
                                          GHC.Generics.:*: (GHC.Generics.S1
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "identity")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.Rec0
                                                                 CommonServer.Identity)
                                                            GHC.Generics.:*: GHC.Generics.S1
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Base.Just
                                                                                     "lock")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.Rec0
                                                                                  DirectoryServer.FileLock))>_R))
                               (Trans
                                    (Sym (GHC.Generics.N:M1[0]
                                              <GHC.Generics.D>_P
                                              <'GHC.Generics.MetaData
                                                 "FileMapping"
                                                 "DirectoryServer"
                                                 "Gluon-0.1.0.0-2zM8ehVFg6FFhvYw0f6srV"
                                                 'GHC.Types.False>_P
                                              <GHC.Generics.M1
                                                 GHC.Generics.C
                                                 ('GHC.Generics.MetaCons
                                                    "FileMapping"
                                                    'GHC.Generics.PrefixI
                                                    'GHC.Types.True)
                                                 (GHC.Generics.S1
                                                    ('GHC.Generics.MetaSel
                                                       ('GHC.Base.Just "fileName")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.Rec0 GHC.IO.FilePath)
                                                  GHC.Generics.:*: (GHC.Generics.S1
                                                                      ('GHC.Generics.MetaSel
                                                                         ('GHC.Base.Just "identity")
                                                                         'GHC.Generics.NoSourceUnpackedness
                                                                         'GHC.Generics.NoSourceStrictness
                                                                         'GHC.Generics.DecidedLazy)
                                                                      (GHC.Generics.Rec0
                                                                         CommonServer.Identity)
                                                                    GHC.Generics.:*: GHC.Generics.S1
                                                                                       ('GHC.Generics.MetaSel
                                                                                          ('GHC.Base.Just
                                                                                             "lock")
                                                                                          'GHC.Generics.NoSourceUnpackedness
                                                                                          'GHC.Generics.NoSourceStrictness
                                                                                          'GHC.Generics.DecidedLazy)
                                                                                       (GHC.Generics.Rec0
                                                                                          DirectoryServer.FileLock)))>_R))
                                    (Sub (Sym (DirectoryServer.Rep_FileMapping[0])))) <GHC.Prim.Any>_N))))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                           <DirectoryServer.FileMapping>_R))) -}
3c2ba257a5ddb3e3149e96c606ab4f0d
  $fGenericFileLock :: GHC.Generics.Generic DirectoryServer.FileLock
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ DirectoryServer.FileLock
                  DirectoryServer.$fFromBSONFileMapping_$cfrom
                  DirectoryServer.$fFromJSONFileLock_$cto -}
3c2ba257a5ddb3e3149e96c606ab4f0d
  $fGenericFileMapping ::
    GHC.Generics.Generic DirectoryServer.FileMapping
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ DirectoryServer.FileMapping
                  DirectoryServer.$fGenericFileMapping_$cfrom
                  DirectoryServer.$fFromBSONFileMapping_$cto -}
3c2ba257a5ddb3e3149e96c606ab4f0d
  $fGenericFileMapping_$cfrom ::
    DirectoryServer.FileMapping
    -> GHC.Generics.Rep DirectoryServer.FileMapping x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (ds :: DirectoryServer.FileMapping) ->
                 case ds of wild { DirectoryServer.FileMapping g1 g2 g3 ->
                 (GHC.Generics.:*:
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "fileName")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R GHC.IO.FilePath))
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "identity")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R CommonServer.Identity)
                       GHC.Generics.:*: GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "lock")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.K1 GHC.Generics.R DirectoryServer.FileLock))
                    @ x
                    g1
                      `cast`
                    (Trans
                         (Sym (GHC.Generics.N:K1[0]
                                   <GHC.Generics.R>_P <GHC.IO.FilePath>_R <x>_P))
                         (Sym (GHC.Generics.N:M1[0]
                                   <GHC.Generics.S>_P
                                   <'GHC.Generics.MetaSel
                                      ('GHC.Base.Just "fileName")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy>_P
                                   <GHC.Generics.K1 GHC.Generics.R GHC.IO.FilePath>_R) <x>_N))
                    (GHC.Generics.:*:
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "identity")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R CommonServer.Identity))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "lock")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R DirectoryServer.FileLock))
                       @ x
                       g2
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <GHC.Generics.R>_P <CommonServer.Identity>_R <x>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "identity")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1
                                         GHC.Generics.R CommonServer.Identity>_R) <x>_N))
                       g3
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <GHC.Generics.R>_P <DirectoryServer.FileLock>_R <x>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "lock")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1
                                         GHC.Generics.R DirectoryServer.FileLock>_R) <x>_N))))
                   `cast`
                 (Trans
                      (Sym (GHC.Generics.N:M1[0]
                                <GHC.Generics.C>_P
                                <'GHC.Generics.MetaCons
                                   "FileMapping" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                <GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "fileName")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1 GHC.Generics.R GHC.IO.FilePath)
                                 GHC.Generics.:*: (GHC.Generics.M1
                                                     GHC.Generics.S
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "identity")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.K1
                                                        GHC.Generics.R CommonServer.Identity)
                                                   GHC.Generics.:*: GHC.Generics.M1
                                                                      GHC.Generics.S
                                                                      ('GHC.Generics.MetaSel
                                                                         ('GHC.Base.Just "lock")
                                                                         'GHC.Generics.NoSourceUnpackedness
                                                                         'GHC.Generics.NoSourceStrictness
                                                                         'GHC.Generics.DecidedLazy)
                                                                      (GHC.Generics.K1
                                                                         GHC.Generics.R
                                                                         DirectoryServer.FileLock))>_R))
                      (Trans
                           (Sym (GHC.Generics.N:M1[0]
                                     <GHC.Generics.D>_P
                                     <'GHC.Generics.MetaData
                                        "FileMapping"
                                        "DirectoryServer"
                                        "Gluon-0.1.0.0-2zM8ehVFg6FFhvYw0f6srV"
                                        'GHC.Types.False>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.C
                                        ('GHC.Generics.MetaCons
                                           "FileMapping" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                        (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "fileName")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1 GHC.Generics.R GHC.IO.FilePath)
                                         GHC.Generics.:*: (GHC.Generics.M1
                                                             GHC.Generics.S
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "identity")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.K1
                                                                GHC.Generics.R
                                                                CommonServer.Identity)
                                                           GHC.Generics.:*: GHC.Generics.M1
                                                                              GHC.Generics.S
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Base.Just
                                                                                    "lock")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.K1
                                                                                 GHC.Generics.R
                                                                                 DirectoryServer.FileLock)))>_R))
                           (Sub (Sym (DirectoryServer.Rep_FileMapping[0])))) <x>_N) }) -}
3c2ba257a5ddb3e3149e96c606ab4f0d
  $fShowFileLock :: GHC.Show.Show DirectoryServer.FileLock
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ DirectoryServer.FileLock
                  DirectoryServer.$fShowFileLock_$cshowsPrec
                  DirectoryServer.$fShowFileLock_$cshow
                  DirectoryServer.$fShowFileLock_$cshowList -}
3c2ba257a5ddb3e3149e96c606ab4f0d
  $fShowFileLock_$cshow ::
    DirectoryServer.FileLock -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: DirectoryServer.FileLock) ->
                 case x of wild {
                   DirectoryServer.FileLocked -> DirectoryServer.$fFromBSONFileLock2
                   DirectoryServer.FileUnlocked -> DirectoryServer.$fFromBSONFileLock5
                   DirectoryServer.FileReadOnly
                   -> DirectoryServer.$fFromBSONFileLock8 }) -}
3c2ba257a5ddb3e3149e96c606ab4f0d
  $fShowFileLock_$cshowList ::
    [DirectoryServer.FileLock] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ DirectoryServer.FileLock
                   DirectoryServer.$w$cshowsPrec) -}
3c2ba257a5ddb3e3149e96c606ab4f0d
  $fShowFileLock_$cshowsPrec ::
    GHC.Types.Int -> DirectoryServer.FileLock -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, True)
                (\ (w :: GHC.Types.Int)
                   (w1 :: DirectoryServer.FileLock)
                   (w2 :: GHC.Base.String) ->
                 DirectoryServer.$w$cshowsPrec w1 w2) -}
3c2ba257a5ddb3e3149e96c606ab4f0d
  $fShowFileMapping :: GHC.Show.Show DirectoryServer.FileMapping
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ DirectoryServer.FileMapping
                  DirectoryServer.$fShowFileMapping_$cshowsPrec
                  DirectoryServer.$fShowFileMapping_$cshow
                  DirectoryServer.$fShowFileMapping_$cshowList -}
3c2ba257a5ddb3e3149e96c606ab4f0d
  $fShowFileMapping1 :: DirectoryServer.FileMapping -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (\ (w :: DirectoryServer.FileMapping)
                   (w1 :: GHC.Base.String) ->
                 case w of ww { DirectoryServer.FileMapping ww1 ww2 ww3 ->
                 DirectoryServer.$w$cshowsPrec1 0# ww1 ww2 ww3 w1 }) -}
37c449d8d5513a8aad8850407a4ba384
  $fShowFileMapping2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "}"#) -}
83ba658514be3d7d5cbfabb6bc7304e9
  $fShowFileMapping3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "lock = "#) -}
3edb92c1d87a82f582fa56eaae8386ae
  $fShowFileMapping4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "identity = "#) -}
eae34cfed5afd9b83d02debbb72b5f30
  $fShowFileMapping5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# ", "#) -}
cf169b2ac7e5f5853cbe122b2e5dd8db
  $fShowFileMapping6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "fileName = "#) -}
407c1dba046f7e66c74444a8a852c478
  $fShowFileMapping7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "FileMapping {"#) -}
3c2ba257a5ddb3e3149e96c606ab4f0d
  $fShowFileMapping_$cshow ::
    DirectoryServer.FileMapping -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U(1*U,1*U,1*U),1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: DirectoryServer.FileMapping) ->
                 DirectoryServer.$fShowFileMapping_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
3c2ba257a5ddb3e3149e96c606ab4f0d
  $fShowFileMapping_$cshowList ::
    [DirectoryServer.FileMapping] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ DirectoryServer.FileMapping
                   DirectoryServer.$fShowFileMapping1) -}
3c2ba257a5ddb3e3149e96c606ab4f0d
  $fShowFileMapping_$cshowsPrec ::
    GHC.Types.Int -> DirectoryServer.FileMapping -> GHC.Show.ShowS
  {- Arity: 3,
     Strictness: <S(S),1*U(U)><S,1*U(1*U,1*U(1*U,1*U,1*U),1*U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: DirectoryServer.FileMapping)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { DirectoryServer.FileMapping ww3 ww4 ww5 ->
                 DirectoryServer.$w$cshowsPrec1 ww1 ww3 ww4 ww5 w2 } }) -}
3c2ba257a5ddb3e3149e96c606ab4f0d
  $fToBSONFileLock ::
    Data.Bson.Generic.ToBSON DirectoryServer.FileLock
  DFunId
  {- Arity: 1, Strictness: <S,1*U>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                DirectoryServer.$fFromBSONFileMapping_$s$dmtoBSON
                  `cast`
                (Sym (Data.Bson.Generic.N:ToBSON[0]
                          <DirectoryServer.FileLock>_N)) -}
3c2ba257a5ddb3e3149e96c606ab4f0d
  $fToBSONFileMapping ::
    Data.Bson.Generic.ToBSON DirectoryServer.FileMapping
  DFunId
  {- Arity: 1, Strictness: <L,1*U(U,U,U)>,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                DirectoryServer.$fToBSONFileMapping_$s$dmtoBSON
                  `cast`
                (Sym (Data.Bson.Generic.N:ToBSON[0]
                          <DirectoryServer.FileMapping>_N)) -}
3c2ba257a5ddb3e3149e96c606ab4f0d
  $fToBSONFileMapping1 ::
    Data.Bson.Generic.GConstructorCount
      (GHC.Generics.D1
         ('GHC.Generics.MetaData
            "FileMapping"
            "DirectoryServer"
            "Gluon-0.1.0.0-2zM8ehVFg6FFhvYw0f6srV"
            'GHC.Types.False)
         (GHC.Generics.C1
            ('GHC.Generics.MetaCons
               "FileMapping" 'GHC.Generics.PrefixI 'GHC.Types.True)
            (GHC.Generics.S1
               ('GHC.Generics.MetaSel
                  ('GHC.Base.Just "fileName")
                  'GHC.Generics.NoSourceUnpackedness
                  'GHC.Generics.NoSourceStrictness
                  'GHC.Generics.DecidedLazy)
               (GHC.Generics.Rec0 GHC.IO.FilePath)
             GHC.Generics.:*: (GHC.Generics.S1
                                 ('GHC.Generics.MetaSel
                                    ('GHC.Base.Just "identity")
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.Rec0 CommonServer.Identity)
                               GHC.Generics.:*: GHC.Generics.S1
                                                  ('GHC.Generics.MetaSel
                                                     ('GHC.Base.Just "lock")
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.Rec0 DirectoryServer.FileLock)))))
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>m,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.$fToBSONFileMapping2
                  `cast`
                (Sym (Data.Bson.Generic.N:GConstructorCount[0]
                          <GHC.Generics.D1
                             ('GHC.Generics.MetaData
                                "FileMapping"
                                "DirectoryServer"
                                "Gluon-0.1.0.0-2zM8ehVFg6FFhvYw0f6srV"
                                'GHC.Types.False)
                             (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "FileMapping" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "fileName")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.IO.FilePath)
                                 GHC.Generics.:*: (GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "identity")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0 CommonServer.Identity)
                                                   GHC.Generics.:*: GHC.Generics.S1
                                                                      ('GHC.Generics.MetaSel
                                                                         ('GHC.Base.Just "lock")
                                                                         'GHC.Generics.NoSourceUnpackedness
                                                                         'GHC.Generics.NoSourceStrictness
                                                                         'GHC.Generics.DecidedLazy)
                                                                      (GHC.Generics.Rec0
                                                                         DirectoryServer.FileLock))))>_N)) -}
3c2ba257a5ddb3e3149e96c606ab4f0d
  $fToBSONFileMapping2 ::
    GHC.Generics.M1
      GHC.Generics.D
      ('GHC.Generics.MetaData
         "FileMapping"
         "DirectoryServer"
         "Gluon-0.1.0.0-2zM8ehVFg6FFhvYw0f6srV"
         'GHC.Types.False)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "FileMapping" 'GHC.Generics.PrefixI 'GHC.Types.True)
         (GHC.Generics.S1
            ('GHC.Generics.MetaSel
               ('GHC.Base.Just "fileName")
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.Rec0 GHC.IO.FilePath)
          GHC.Generics.:*: (GHC.Generics.S1
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "identity")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.Rec0 CommonServer.Identity)
                            GHC.Generics.:*: GHC.Generics.S1
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "lock")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.Rec0 DirectoryServer.FileLock))))
      a1
    -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, True)
                (\ @ a1
                   (ds :: GHC.Generics.M1
                            GHC.Generics.D
                            ('GHC.Generics.MetaData
                               "FileMapping"
                               "DirectoryServer"
                               "Gluon-0.1.0.0-2zM8ehVFg6FFhvYw0f6srV"
                               'GHC.Types.False)
                            (GHC.Generics.M1
                               GHC.Generics.C
                               ('GHC.Generics.MetaCons
                                  "FileMapping" 'GHC.Generics.PrefixI 'GHC.Types.True)
                               (GHC.Generics.S1
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "fileName")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.Rec0 GHC.IO.FilePath)
                                GHC.Generics.:*: (GHC.Generics.S1
                                                    ('GHC.Generics.MetaSel
                                                       ('GHC.Base.Just "identity")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.Rec0 CommonServer.Identity)
                                                  GHC.Generics.:*: GHC.Generics.S1
                                                                     ('GHC.Generics.MetaSel
                                                                        ('GHC.Base.Just "lock")
                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                        'GHC.Generics.NoSourceStrictness
                                                                        'GHC.Generics.DecidedLazy)
                                                                     (GHC.Generics.Rec0
                                                                        DirectoryServer.FileLock))))
                            a1) ->
                 Data.Bson.Generic.$dmfromBSON1) -}
3c2ba257a5ddb3e3149e96c606ab4f0d
  $fToBSONFileMapping3 ::
    Data.Bson.Generic.GToBSON
      (GHC.Generics.D1
         ('GHC.Generics.MetaData
            "FileMapping"
            "DirectoryServer"
            "Gluon-0.1.0.0-2zM8ehVFg6FFhvYw0f6srV"
            'GHC.Types.False)
         (GHC.Generics.C1
            ('GHC.Generics.MetaCons
               "FileMapping" 'GHC.Generics.PrefixI 'GHC.Types.True)
            (GHC.Generics.S1
               ('GHC.Generics.MetaSel
                  ('GHC.Base.Just "fileName")
                  'GHC.Generics.NoSourceUnpackedness
                  'GHC.Generics.NoSourceStrictness
                  'GHC.Generics.DecidedLazy)
               (GHC.Generics.Rec0 GHC.IO.FilePath)
             GHC.Generics.:*: (GHC.Generics.S1
                                 ('GHC.Generics.MetaSel
                                    ('GHC.Base.Just "identity")
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.Rec0 CommonServer.Identity)
                               GHC.Generics.:*: GHC.Generics.S1
                                                  ('GHC.Generics.MetaSel
                                                     ('GHC.Base.Just "lock")
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.Rec0 DirectoryServer.FileLock)))))
  {- Arity: 2, Strictness: <S(S),1*U(U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.$fToBSONFileMapping4
                  `cast`
                (Sym (Data.Bson.Generic.N:GToBSON[0]
                          <GHC.Generics.D1
                             ('GHC.Generics.MetaData
                                "FileMapping"
                                "DirectoryServer"
                                "Gluon-0.1.0.0-2zM8ehVFg6FFhvYw0f6srV"
                                'GHC.Types.False)
                             (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "FileMapping" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "fileName")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.IO.FilePath)
                                 GHC.Generics.:*: (GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "identity")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0 CommonServer.Identity)
                                                   GHC.Generics.:*: GHC.Generics.S1
                                                                      ('GHC.Generics.MetaSel
                                                                         ('GHC.Base.Just "lock")
                                                                         'GHC.Generics.NoSourceUnpackedness
                                                                         'GHC.Generics.NoSourceStrictness
                                                                         'GHC.Generics.DecidedLazy)
                                                                      (GHC.Generics.Rec0
                                                                         DirectoryServer.FileLock))))>_N)) -}
3c2ba257a5ddb3e3149e96c606ab4f0d
  $fToBSONFileMapping4 ::
    GHC.Types.Int
    -> GHC.Generics.M1
         GHC.Generics.D
         ('GHC.Generics.MetaData
            "FileMapping"
            "DirectoryServer"
            "Gluon-0.1.0.0-2zM8ehVFg6FFhvYw0f6srV"
            'GHC.Types.False)
         (GHC.Generics.M1
            GHC.Generics.C
            ('GHC.Generics.MetaCons
               "FileMapping" 'GHC.Generics.PrefixI 'GHC.Types.True)
            (GHC.Generics.S1
               ('GHC.Generics.MetaSel
                  ('GHC.Base.Just "fileName")
                  'GHC.Generics.NoSourceUnpackedness
                  'GHC.Generics.NoSourceStrictness
                  'GHC.Generics.DecidedLazy)
               (GHC.Generics.Rec0 GHC.IO.FilePath)
             GHC.Generics.:*: (GHC.Generics.S1
                                 ('GHC.Generics.MetaSel
                                    ('GHC.Base.Just "identity")
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.Rec0 CommonServer.Identity)
                               GHC.Generics.:*: GHC.Generics.S1
                                                  ('GHC.Generics.MetaSel
                                                     ('GHC.Base.Just "lock")
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.Rec0 DirectoryServer.FileLock))))
         a1
    -> Data.Bson.Document
  {- Arity: 2, Strictness: <S(S),1*U(U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a1
                   (n :: GHC.Types.Int)
                   (ds :: GHC.Generics.M1
                            GHC.Generics.D
                            ('GHC.Generics.MetaData
                               "FileMapping"
                               "DirectoryServer"
                               "Gluon-0.1.0.0-2zM8ehVFg6FFhvYw0f6srV"
                               'GHC.Types.False)
                            (GHC.Generics.M1
                               GHC.Generics.C
                               ('GHC.Generics.MetaCons
                                  "FileMapping" 'GHC.Generics.PrefixI 'GHC.Types.True)
                               (GHC.Generics.S1
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "fileName")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.Rec0 GHC.IO.FilePath)
                                GHC.Generics.:*: (GHC.Generics.S1
                                                    ('GHC.Generics.MetaSel
                                                       ('GHC.Base.Just "identity")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.Rec0 CommonServer.Identity)
                                                  GHC.Generics.:*: GHC.Generics.S1
                                                                     ('GHC.Generics.MetaSel
                                                                        ('GHC.Base.Just "lock")
                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                        'GHC.Generics.NoSourceStrictness
                                                                        'GHC.Generics.DecidedLazy)
                                                                     (GHC.Generics.Rec0
                                                                        DirectoryServer.FileLock))))
                            a1) ->
                 case n of ww { GHC.Types.I# ww1 ->
                 Data.Bson.Generic.$w$cgenericToBSON1
                   @ (GHC.Generics.S1
                        ('GHC.Generics.MetaSel
                           ('GHC.Base.Just "fileName")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy)
                        (GHC.Generics.Rec0 GHC.IO.FilePath)
                      GHC.Generics.:*: (GHC.Generics.S1
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "identity")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.Rec0 CommonServer.Identity)
                                        GHC.Generics.:*: GHC.Generics.S1
                                                           ('GHC.Generics.MetaSel
                                                              ('GHC.Base.Just "lock")
                                                              'GHC.Generics.NoSourceUnpackedness
                                                              'GHC.Generics.NoSourceStrictness
                                                              'GHC.Generics.DecidedLazy)
                                                           (GHC.Generics.Rec0
                                                              DirectoryServer.FileLock)))
                   @ ('GHC.Generics.MetaCons
                        "FileMapping" 'GHC.Generics.PrefixI 'GHC.Types.True)
                   DirectoryServer.$fToBSONFileMapping6
                     `cast`
                   (Sym (Data.Bson.Generic.N:GToBSON[0]
                             <GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "fileName")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 GHC.IO.FilePath)
                              GHC.Generics.:*: (GHC.Generics.S1
                                                  ('GHC.Generics.MetaSel
                                                     ('GHC.Base.Just "identity")
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.Rec0 CommonServer.Identity)
                                                GHC.Generics.:*: GHC.Generics.S1
                                                                   ('GHC.Generics.MetaSel
                                                                      ('GHC.Base.Just "lock")
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.Rec0
                                                                      DirectoryServer.FileLock))>_N))
                   DirectoryServer.$fToBSONFileMapping_$s$fConstructorMetaMetaCons
                   @ a1
                   ww1
                   ds
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <GHC.Generics.D>_P
                        <'GHC.Generics.MetaData
                           "FileMapping"
                           "DirectoryServer"
                           "Gluon-0.1.0.0-2zM8ehVFg6FFhvYw0f6srV"
                           'GHC.Types.False>_P
                        <GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "FileMapping" 'GHC.Generics.PrefixI 'GHC.Types.True)
                           (GHC.Generics.S1
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "fileName")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.Rec0 GHC.IO.FilePath)
                            GHC.Generics.:*: (GHC.Generics.S1
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "identity")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.Rec0 CommonServer.Identity)
                                              GHC.Generics.:*: GHC.Generics.S1
                                                                 ('GHC.Generics.MetaSel
                                                                    ('GHC.Base.Just "lock")
                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                    'GHC.Generics.NoSourceStrictness
                                                                    'GHC.Generics.DecidedLazy)
                                                                 (GHC.Generics.Rec0
                                                                    DirectoryServer.FileLock)))>_R <a1>_N) }) -}
414f78d0dcdb87c566b5c722122794a9
  $fToBSONFileMapping5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "FileMapping"#) -}
3c2ba257a5ddb3e3149e96c606ab4f0d
  $fToBSONFileMapping6 ::
    GHC.Types.Int
    -> (GHC.Generics.:*:)
         (GHC.Generics.M1
            GHC.Generics.S
            ('GHC.Generics.MetaSel
               ('GHC.Base.Just "fileName")
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.Rec0 GHC.IO.FilePath))
         (GHC.Generics.S1
            ('GHC.Generics.MetaSel
               ('GHC.Base.Just "identity")
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.Rec0 CommonServer.Identity)
          GHC.Generics.:*: GHC.Generics.S1
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "lock")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 DirectoryServer.FileLock))
         a1
    -> [Data.Bson.Field]
  {- Arity: 2, Strictness: <L,A><S,1*U(1*U,1*U(1*U(U,U,U),1*U))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ @ a1
                   (w :: GHC.Types.Int)
                   (w1 :: (GHC.Generics.:*:)
                            (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "fileName")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.Rec0 GHC.IO.FilePath))
                            (GHC.Generics.S1
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "identity")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.Rec0 CommonServer.Identity)
                             GHC.Generics.:*: GHC.Generics.S1
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "lock")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.Rec0 DirectoryServer.FileLock))
                            a1) ->
                 case w1 of ww { GHC.Generics.:*: ww1 ww2 ->
                 DirectoryServer.$w$dGToBSON1 @ a1 ww1 ww2 }) -}
a8efc35545f751f8d5ab091032e3570c
  $fToBSONFileMapping7 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        8#
                        s1 of ds1 { (#,#) ipv ipv1 ->
                 Data.Bson.Generic.$wouter2
                   (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                   Data.Bson.Generic.$fFromBSONObjectKey5
                   DirectoryServer.$fFromBSONFileMapping5
                   0#
                   ipv }) -}
032bfa43c369c032565db590fe46c91a
  $fToBSONFileMapping8 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        8#
                        s1 of ds1 { (#,#) ipv ipv1 ->
                 Data.Bson.Generic.$wouter2
                   (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                   Data.Bson.Generic.$fFromBSONObjectKey5
                   DirectoryServer.$fFromBSONFileMapping22
                   0#
                   ipv }) -}
1747302d401b1d55bca26d9b960af25d
  $fToBSONFileMapping9 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        8#
                        s1 of ds1 { (#,#) ipv ipv1 ->
                 Data.Bson.Generic.$wouter2
                   (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                   Data.Bson.Generic.$fFromBSONObjectKey5
                   CommonServer.$fFromJSONFile5
                   0#
                   ipv }) -}
3c2ba257a5ddb3e3149e96c606ab4f0d
  $fToBSONFileMapping_$s$dmtoBSON ::
    DirectoryServer.FileMapping -> Data.Bson.Document
  {- Arity: 1, Strictness: <L,1*U(U,U,U)>,
     Unfolding: InlineRule (-4, True, False)
                (\ (a1 :: DirectoryServer.FileMapping) ->
                 DirectoryServer.$fToBSONFileMapping3
                   `cast`
                 (Data.Bson.Generic.N:GToBSON[0]
                      (Sym (DirectoryServer.Rep_FileMapping[0])))
                   @ GHC.Prim.Any
                   (DirectoryServer.$fToBSONFileMapping_$sconstructorCount a1)
                   (DirectoryServer.$fGenericFileMapping_$cfrom @ GHC.Prim.Any a1)) -}
0ff55a8b6bfcd1a3d62300040f02f642
  $fToBSONFileMapping_$s$fConstructorMetaMetaCons ::
    GHC.Generics.Constructor
      ('GHC.Generics.MetaCons
         "FileMapping" 'GHC.Generics.PrefixI 'GHC.Types.True)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaCons
                       "FileMapping" 'GHC.Generics.PrefixI 'GHC.Types.True)
                  (GHC.Generics.$fConstructorMetaMetaCons_$cconName
                     @ "FileMapping"
                     @ 'GHC.Generics.PrefixI
                     @ 'GHC.Types.True
                     DirectoryServer.$fToBSONFileMapping5
                       `cast`
                     (Trans
                          (Sym (GHC.TypeLits.N:SSymbol[0] <"FileMapping">_P))
                          (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"FileMapping">_N))
                     GHC.Generics.$WSPrefix
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.FixityI>_N <'GHC.Generics.PrefixI>_N)
                     GHC.Generics.$WSTrue
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Types.Bool>_N <'GHC.Types.True>_N))
                  (GHC.Generics.$fConstructorMetaMetaCons_$cconFixity
                     @ "FileMapping"
                     @ 'GHC.Generics.PrefixI
                     @ 'GHC.Types.True
                     DirectoryServer.$fToBSONFileMapping5
                       `cast`
                     (Trans
                          (Sym (GHC.TypeLits.N:SSymbol[0] <"FileMapping">_P))
                          (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"FileMapping">_N))
                     GHC.Generics.$WSPrefix
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.FixityI>_N <'GHC.Generics.PrefixI>_N)
                     GHC.Generics.$WSTrue
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Types.Bool>_N <'GHC.Types.True>_N))
                  (GHC.Generics.$fConstructorMetaMetaCons_$cconIsRecord
                     @ "FileMapping"
                     @ 'GHC.Generics.PrefixI
                     @ 'GHC.Types.True
                     DirectoryServer.$fToBSONFileMapping5
                       `cast`
                     (Trans
                          (Sym (GHC.TypeLits.N:SSymbol[0] <"FileMapping">_P))
                          (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"FileMapping">_N))
                     GHC.Generics.$WSPrefix
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.FixityI>_N <'GHC.Generics.PrefixI>_N)
                     GHC.Generics.$WSTrue
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Types.Bool>_N <'GHC.Types.True>_N)) -}
3c2ba257a5ddb3e3149e96c606ab4f0d
  $fToBSONFileMapping_$sconstructorCount ::
    DirectoryServer.FileMapping -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: DirectoryServer.FileMapping) ->
                 DirectoryServer.$fToBSONFileMapping1
                   `cast`
                 (Data.Bson.Generic.N:GConstructorCount[0]
                      (Sym (DirectoryServer.Rep_FileMapping[0])))
                   @ GHC.Prim.Any
                   (DirectoryServer.$fGenericFileMapping_$cfrom @ GHC.Prim.Any x)) -}
3c2ba257a5ddb3e3149e96c606ab4f0d
  $fToJSONFileLock ::
    Data.Aeson.Types.Class.ToJSON DirectoryServer.FileLock
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ DirectoryServer.FileLock
                  DirectoryServer.$fToJSONFileLock_$ctoJSON
                  DirectoryServer.$fToJSONFileLock_$ctoEncoding -}
3c2ba257a5ddb3e3149e96c606ab4f0d
  $fToJSONFileLock1 ::
    DirectoryServer.FileLock
    -> Data.Aeson.Types.Generic.Tagged
         Data.Aeson.Types.Generic.True Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m3,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: DirectoryServer.FileLock) ->
                 case x of wild {
                   DirectoryServer.FileLocked
                   -> DirectoryServer.$fToJSONFileLock_g
                        (DirectoryServer.$fFromBSONFileMapping13 @ GHC.Prim.Any)
                   DirectoryServer.FileUnlocked
                   -> DirectoryServer.$fToJSONFileLock_g
                        (DirectoryServer.$fFromBSONFileMapping12 @ GHC.Prim.Any)
                   DirectoryServer.FileReadOnly
                   -> DirectoryServer.$fToJSONFileLock_g
                        (DirectoryServer.$fFromBSONFileMapping11 @ GHC.Prim.Any) }) -}
3c2ba257a5ddb3e3149e96c606ab4f0d
  $fToJSONFileLock_$ctoEncoding ::
    DirectoryServer.FileLock -> Data.Aeson.Types.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: DirectoryServer.FileLock) ->
                 Data.Aeson.Encode.Builder.encodeToBuilder
                   (DirectoryServer.$fToJSONFileLock_$ctoJSON eta))
                  `cast`
                (<DirectoryServer.FileLock>_R
                 ->_R Sym (Data.Aeson.Types.Internal.N:Encoding[0])) -}
3c2ba257a5ddb3e3149e96c606ab4f0d
  $fToJSONFileLock_$ctoJSON ::
    DirectoryServer.FileLock -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m3,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.$fToJSONFileLock1
                  `cast`
                (<DirectoryServer.FileLock>_R
                 ->_R Data.Aeson.Types.Generic.N:Tagged[0]
                          <Data.Aeson.Types.Generic.True>_P
                          <Data.Aeson.Types.Internal.Value>_R) -}
24ac9d1a8bb41f8deb7fbeb49cdcc678
  $fToJSONFileLock_g ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "FileLocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.C1
         ('GHC.Generics.MetaCons
            "FileUnlocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: GHC.Generics.C1
                          ('GHC.Generics.MetaCons
                             "FileReadOnly" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          GHC.Generics.U1)
      GHC.Prim.Any
    -> Data.Aeson.Types.Generic.Tagged
         Data.Aeson.Types.Generic.True Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m3, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: (GHC.Generics.:+:)
                           (GHC.Generics.M1
                              GHC.Generics.C
                              ('GHC.Generics.MetaCons
                                 "FileLocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                              GHC.Generics.U1)
                           (GHC.Generics.C1
                              ('GHC.Generics.MetaCons
                                 "FileUnlocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                              GHC.Generics.U1
                            GHC.Generics.:+: GHC.Generics.C1
                                               ('GHC.Generics.MetaCons
                                                  "FileReadOnly"
                                                  'GHC.Generics.PrefixI
                                                  'GHC.Types.False)
                                               GHC.Generics.U1)
                           GHC.Prim.Any) ->
                 case DirectoryServer.$wg w of ww { Unit# ww1 ->
                 (Data.Aeson.Types.Internal.String ww1)
                   `cast`
                 (Sym (Data.Aeson.Types.Generic.N:Tagged[0]
                           <Data.Aeson.Types.Generic.True>_P
                           <Data.Aeson.Types.Internal.Value>_R)) }) -}
3c2ba257a5ddb3e3149e96c606ab4f0d
  $fToJSONFileMapping ::
    Data.Aeson.Types.Class.ToJSON DirectoryServer.FileMapping
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ DirectoryServer.FileMapping
                  DirectoryServer.$fToJSONFileMapping_$ctoJSON
                  DirectoryServer.$fToJSONFileMapping_$ctoEncoding -}
3c2ba257a5ddb3e3149e96c606ab4f0d
  $fToJSONFileMapping1 ::
    DirectoryServer.FileMapping
    -> Data.Aeson.Types.Generic.Tagged
         Data.Aeson.Types.Generic.True Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U(U,U,U)>m1, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: DirectoryServer.FileMapping) ->
                 case w of ww { DirectoryServer.FileMapping ww1 ww2 ww3 ->
                 case Data.Aeson.Types.Internal.$sfromList1
                        @ Data.Aeson.Types.Internal.Value
                        (DirectoryServer.$w$dRecordToPairs
                           @ GHC.Prim.Any
                           (Data.Aeson.Types.Internal.Options
                              (GHC.Base.id @ GHC.Base.String)
                              (GHC.Base.id @ GHC.Base.String)
                              GHC.Types.True
                              GHC.Types.False
                              Data.Aeson.Types.Internal.defaultTaggedObject
                              GHC.Types.False)
                           ww1
                             `cast`
                           (Trans
                                (Sym (GHC.Generics.N:K1[0]
                                          <GHC.Generics.R>_P <GHC.IO.FilePath>_R <GHC.Prim.Any>_P))
                                (Sym (GHC.Generics.N:M1[0]
                                          <GHC.Generics.S>_P
                                          <'GHC.Generics.MetaSel
                                             ('GHC.Base.Just "fileName")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy>_P
                                          <GHC.Generics.K1
                                             GHC.Generics.R GHC.IO.FilePath>_R) <GHC.Prim.Any>_N))
                           (GHC.Generics.:*:
                              @ (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "identity")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1 GHC.Generics.R CommonServer.Identity))
                              @ (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "lock")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1 GHC.Generics.R DirectoryServer.FileLock))
                              @ GHC.Prim.Any
                              ww2
                                `cast`
                              (Trans
                                   (Sym (GHC.Generics.N:K1[0]
                                             <GHC.Generics.R>_P
                                             <CommonServer.Identity>_R
                                             <GHC.Prim.Any>_P))
                                   (Sym (GHC.Generics.N:M1[0]
                                             <GHC.Generics.S>_P
                                             <'GHC.Generics.MetaSel
                                                ('GHC.Base.Just "identity")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy>_P
                                             <GHC.Generics.K1
                                                GHC.Generics.R
                                                CommonServer.Identity>_R) <GHC.Prim.Any>_N))
                              ww3
                                `cast`
                              (Trans
                                   (Sym (GHC.Generics.N:K1[0]
                                             <GHC.Generics.R>_P
                                             <DirectoryServer.FileLock>_R
                                             <GHC.Prim.Any>_P))
                                   (Sym (GHC.Generics.N:M1[0]
                                             <GHC.Generics.S>_P
                                             <'GHC.Generics.MetaSel
                                                ('GHC.Base.Just "lock")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy>_P
                                             <GHC.Generics.K1
                                                GHC.Generics.R
                                                DirectoryServer.FileLock>_R) <GHC.Prim.Any>_N)))
                           (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair))
                        (Data.HashMap.Base.Empty
                           @ Data.Text.Internal.Text
                           @ Data.Aeson.Types.Internal.Value) of dt { DEFAULT ->
                 (Data.Aeson.Types.Internal.Object dt)
                   `cast`
                 (Sym (Data.Aeson.Types.Generic.N:Tagged[0]
                           <Data.Aeson.Types.Generic.True>_P
                           <Data.Aeson.Types.Internal.Value>_R)) } }) -}
3c2ba257a5ddb3e3149e96c606ab4f0d
  $fToJSONFileMapping2 ::
    Data.Aeson.Types.Internal.Options
    -> GHC.Generics.K1 GHC.Generics.R DirectoryServer.FileLock a1
    -> Data.Aeson.Types.Generic.Tagged
         Data.Aeson.Types.Generic.True Data.Aeson.Types.Internal.Value
  {- Arity: 2, Strictness: <L,A><S,1*U>m3,
     Unfolding: InlineRule (2, True, False)
                (\ @ a1
                   (_opts :: Data.Aeson.Types.Internal.Options)
                   (eta :: GHC.Generics.K1
                             GHC.Generics.R DirectoryServer.FileLock a1) ->
                 case eta
                        `cast`
                      (GHC.Generics.N:K1[0]
                           <GHC.Generics.R>_P <DirectoryServer.FileLock>_R <a1>_P) of wild {
                   DirectoryServer.FileLocked
                   -> DirectoryServer.$fToJSONFileLock_g
                        (DirectoryServer.$fFromBSONFileMapping13 @ GHC.Prim.Any)
                   DirectoryServer.FileUnlocked
                   -> DirectoryServer.$fToJSONFileLock_g
                        (DirectoryServer.$fFromBSONFileMapping12 @ GHC.Prim.Any)
                   DirectoryServer.FileReadOnly
                   -> DirectoryServer.$fToJSONFileLock_g
                        (DirectoryServer.$fFromBSONFileMapping11 @ GHC.Prim.Any) }) -}
09a798a2e7f58f7ab786def8ce933263
  $fToJSONFileMapping3 ::
    Data.Aeson.Types.Internal.Options
    -> GHC.Generics.K1 GHC.Generics.R CommonServer.Identity a1
    -> Data.Aeson.Types.Generic.Tagged
         Data.Aeson.Types.Generic.True Data.Aeson.Types.Internal.Value
  {- Arity: 2, Strictness: <L,A><S,1*U(U,U,U)>m1,
     Unfolding: InlineRule (2, True, True)
                (\ @ a1
                   (_opts :: Data.Aeson.Types.Internal.Options)
                   (eta :: GHC.Generics.K1 GHC.Generics.R CommonServer.Identity a1) ->
                 CommonServer.$fToJSONIdentity1
                   eta
                     `cast`
                   (GHC.Generics.N:K1[0]
                        <GHC.Generics.R>_P <CommonServer.Identity>_R <a1>_P)) -}
b0bc1e128c3495d361238f052ee3176e
  $fToJSONFileMapping4 ::
    Data.Aeson.Types.Internal.Options
    -> GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 2, Strictness: <L,A><S,1*U>m3, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ @ a1
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1) ->
                 case DirectoryServer.$w$dGToJSON @ a1 w1 of ww { Unit# ww1 ->
                 Data.Aeson.Types.Internal.String ww1 }) -}
9c347f1d69880aab8cc5917d956166a1
  $fToJSONFileMapping5 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 4#) -}
3c2ba257a5ddb3e3149e96c606ab4f0d
  $fToJSONFileMapping_$ctoEncoding ::
    DirectoryServer.FileMapping -> Data.Aeson.Types.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U(U,U,U)>,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: DirectoryServer.FileMapping) ->
                 Data.Aeson.Encode.Builder.encodeToBuilder
                   (DirectoryServer.$fToJSONFileMapping_$ctoJSON eta))
                  `cast`
                (<DirectoryServer.FileMapping>_R
                 ->_R Sym (Data.Aeson.Types.Internal.N:Encoding[0])) -}
3c2ba257a5ddb3e3149e96c606ab4f0d
  $fToJSONFileMapping_$ctoJSON ::
    DirectoryServer.FileMapping -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U(U,U,U)>m1,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.$fToJSONFileMapping1
                  `cast`
                (<DirectoryServer.FileMapping>_R
                 ->_R Data.Aeson.Types.Generic.N:Tagged[0]
                          <Data.Aeson.Types.Generic.True>_P
                          <Data.Aeson.Types.Internal.Value>_R) -}
c409a2c5a5c9350bc1f0e84c98c1aab7
  $s$fAllCTRender:a ::
    Servant.API.ContentTypes.AllCTRender
      '[Servant.API.ContentTypes.JSON] CommonServer.Response
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ '[Servant.API.ContentTypes.JSON]
                  @ CommonServer.Response
                  (Servant.API.ContentTypes.$fAllCTRender:a_$cp1AllCTRender
                     @ Servant.API.ContentTypes.JSON
                     @ '[]
                     @ CommonServer.Response
                     Servant.API.ContentTypes.$fAcceptTYPEJSON_$ccontentType
                       `cast`
                     (Sym (Servant.API.ContentTypes.N:Accept[0]
                               <*>_N <Servant.API.ContentTypes.JSON>_N))
                     Servant.API.ContentTypes.$fAllMimeUnrender[]a_$callMime
                       `cast`
                     (Sym (Servant.API.ContentTypes.N:AllMime[0] <'[]>_N))
                     DirectoryServer.$s$fAllCTRender:a1)
                  (Servant.API.ContentTypes.$fAllCTRender:a_$chandleAcceptH
                     @ Servant.API.ContentTypes.JSON
                     @ '[]
                     @ CommonServer.Response
                     Servant.API.ContentTypes.$fAcceptTYPEJSON_$ccontentType
                       `cast`
                     (Sym (Servant.API.ContentTypes.N:Accept[0]
                               <*>_N <Servant.API.ContentTypes.JSON>_N))
                     Servant.API.ContentTypes.$fAllMimeUnrender[]a_$callMime
                       `cast`
                     (Sym (Servant.API.ContentTypes.N:AllMime[0] <'[]>_N))
                     DirectoryServer.$s$fAllCTRender:a1) -}
3add3b5a4990af3d7fc8db20e719d168
  $s$fAllCTRender:a1 ::
    Servant.API.ContentTypes.AllMimeRender
      '[Servant.API.ContentTypes.JSON] CommonServer.Response
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.$s$fAllCTRender:a_$s$fAllMimeRender:a0 -}
2ae4bd8b2dfd7c23fbce412bb91234ed
  $s$fAllCTRender:a2 ::
    Data.Proxy.Proxy '[Servant.API.ContentTypes.JSON]
    -> CommonServer.Response
    -> [(Network.HTTP.Media.MediaType.Internal.MediaType,
         Data.ByteString.Lazy.Internal.ByteString)]
  {- Arity: 2, Strictness: <L,A><L,1*U(U,U,U)>m2,
     Unfolding: InlineRule (2, True, False)
                (\ (eta :: Data.Proxy.Proxy '[Servant.API.ContentTypes.JSON])
                   (eta1 :: CommonServer.Response) ->
                 GHC.Types.:
                   @ (Network.HTTP.Media.MediaType.Internal.MediaType,
                      Data.ByteString.Lazy.Internal.ByteString)
                   (Servant.API.ContentTypes.$fAcceptTYPEJSON1,
                    Data.ByteString.Builder.toLazyByteString
                      (Data.Aeson.Encode.Builder.encodeToBuilder
                         (CommonServer.$fToJSONResponse1 eta1)
                           `cast`
                         (Data.Aeson.Types.Generic.N:Tagged[0]
                              <Data.Aeson.Types.Generic.True>_P
                              <Data.Aeson.Types.Internal.Value>_R)))
                   (GHC.Types.[]
                      @ (Network.HTTP.Media.MediaType.Internal.MediaType,
                         Data.ByteString.Lazy.Internal.ByteString))) -}
f7593963be4e91fc7ebf2980aafea751
  $s$fAllCTRender:a3 ::
    Servant.API.ContentTypes.MimeRender
      Servant.API.ContentTypes.JSON CommonServer.Response
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.$s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa -}
779d806c8b2b7df38bcd9a0008c37d0e
  $s$fAllCTRender:a4 ::
    Servant.API.ContentTypes.AllCTRender
      '[Servant.API.ContentTypes.JSON] CommonServer.File
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ '[Servant.API.ContentTypes.JSON]
                  @ CommonServer.File
                  (Servant.API.ContentTypes.$fAllCTRender:a_$cp1AllCTRender
                     @ Servant.API.ContentTypes.JSON
                     @ '[]
                     @ CommonServer.File
                     Servant.API.ContentTypes.$fAcceptTYPEJSON_$ccontentType
                       `cast`
                     (Sym (Servant.API.ContentTypes.N:Accept[0]
                               <*>_N <Servant.API.ContentTypes.JSON>_N))
                     Servant.API.ContentTypes.$fAllMimeUnrender[]a_$callMime
                       `cast`
                     (Sym (Servant.API.ContentTypes.N:AllMime[0] <'[]>_N))
                     DirectoryServer.$s$fAllCTRender:a_$dAllMimeRender)
                  (Servant.API.ContentTypes.$fAllCTRender:a_$chandleAcceptH
                     @ Servant.API.ContentTypes.JSON
                     @ '[]
                     @ CommonServer.File
                     Servant.API.ContentTypes.$fAcceptTYPEJSON_$ccontentType
                       `cast`
                     (Sym (Servant.API.ContentTypes.N:Accept[0]
                               <*>_N <Servant.API.ContentTypes.JSON>_N))
                     Servant.API.ContentTypes.$fAllMimeUnrender[]a_$callMime
                       `cast`
                     (Sym (Servant.API.ContentTypes.N:AllMime[0] <'[]>_N))
                     DirectoryServer.$s$fAllCTRender:a_$dAllMimeRender) -}
79be29672ac6d842e018d8288dbe72ad
  $s$fAllCTRender:a5 ::
    Data.Proxy.Proxy '[Servant.API.ContentTypes.JSON]
    -> CommonServer.File
    -> [(Network.HTTP.Media.MediaType.Internal.MediaType,
         Data.ByteString.Lazy.Internal.ByteString)]
  {- Arity: 2, Strictness: <L,A><L,1*U(1*U,1*U)>m2,
     Unfolding: InlineRule (2, True, False)
                (\ (eta :: Data.Proxy.Proxy '[Servant.API.ContentTypes.JSON])
                   (eta1 :: CommonServer.File) ->
                 GHC.Types.:
                   @ (Network.HTTP.Media.MediaType.Internal.MediaType,
                      Data.ByteString.Lazy.Internal.ByteString)
                   (Servant.API.ContentTypes.$fAcceptTYPEJSON1,
                    Data.ByteString.Builder.toLazyByteString
                      (Data.Aeson.Encode.Builder.encodeToBuilder
                         (CommonServer.$fToJSONFile1 eta1)
                           `cast`
                         (Data.Aeson.Types.Generic.N:Tagged[0]
                              <Data.Aeson.Types.Generic.True>_P
                              <Data.Aeson.Types.Internal.Value>_R)))
                   (GHC.Types.[]
                      @ (Network.HTTP.Media.MediaType.Internal.MediaType,
                         Data.ByteString.Lazy.Internal.ByteString))) -}
b596ee1b1722e74ada7f768b206e6aee
  $s$fAllCTRender:a6 ::
    Servant.API.ContentTypes.AllCTRender
      '[Servant.API.ContentTypes.JSON] [GHC.IO.FilePath]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ '[Servant.API.ContentTypes.JSON]
                  @ [GHC.IO.FilePath]
                  (Servant.API.ContentTypes.$fAllCTRender:a_$cp1AllCTRender
                     @ Servant.API.ContentTypes.JSON
                     @ '[]
                     @ [GHC.IO.FilePath]
                     Servant.API.ContentTypes.$fAcceptTYPEJSON_$ccontentType
                       `cast`
                     (Sym (Servant.API.ContentTypes.N:Accept[0]
                               <*>_N <Servant.API.ContentTypes.JSON>_N))
                     Servant.API.ContentTypes.$fAllMimeUnrender[]a_$callMime
                       `cast`
                     (Sym (Servant.API.ContentTypes.N:AllMime[0] <'[]>_N))
                     DirectoryServer.$s$fAllCTRender:a_$dAllMimeRender1)
                  (Servant.API.ContentTypes.$fAllCTRender:a_$chandleAcceptH
                     @ Servant.API.ContentTypes.JSON
                     @ '[]
                     @ [GHC.IO.FilePath]
                     Servant.API.ContentTypes.$fAcceptTYPEJSON_$ccontentType
                       `cast`
                     (Sym (Servant.API.ContentTypes.N:Accept[0]
                               <*>_N <Servant.API.ContentTypes.JSON>_N))
                     Servant.API.ContentTypes.$fAllMimeUnrender[]a_$callMime
                       `cast`
                     (Sym (Servant.API.ContentTypes.N:AllMime[0] <'[]>_N))
                     DirectoryServer.$s$fAllCTRender:a_$dAllMimeRender1) -}
a6c503f8c7107767be9f1c94b9eb30cc
  $s$fAllCTRender:a_$dAllMimeRender ::
    Servant.API.ContentTypes.AllMimeRender
      '[Servant.API.ContentTypes.JSON] CommonServer.File
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.$s$fAllCTRender:a_$s$fAllMimeRender:a1 -}
4f1a78f98e28e43ac1a5f05802238cfc
  $s$fAllCTRender:a_$dAllMimeRender1 ::
    Servant.API.ContentTypes.AllMimeRender
      '[Servant.API.ContentTypes.JSON] [GHC.IO.FilePath]
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.$s$fAllCTRender:a_$s$fAllMimeRender:a2 -}
6be21189102cfaf36b6d247daaa122a5
  $s$fAllCTRender:a_$dMimeRender ::
    Servant.API.ContentTypes.MimeRender
      Servant.API.ContentTypes.JSON CommonServer.File
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.$s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa1 -}
9fe25d3e4f312ba38d26e8bdb0a0473f
  $s$fAllCTRender:a_$dMimeRender1 ::
    Servant.API.ContentTypes.MimeRender
      Servant.API.ContentTypes.JSON [GHC.IO.FilePath]
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.$s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa2 -}
369c54d0242420c12db31166d62ac51e
  $s$fAllCTRender:a_$dToJSON ::
    Data.Aeson.Types.Class.ToJSON [GHC.IO.FilePath]
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.$s$fAllCTRender:a_$s$fToJSON[] -}
32911819d9dd4bd1d7ecab78b25d4946
  $s$fAllCTRender:a_$s$fAllMimeRender:a0 ::
    Servant.API.ContentTypes.AllMimeRender
      '[Servant.API.ContentTypes.JSON] CommonServer.Response
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ '[Servant.API.ContentTypes.JSON]
                  @ CommonServer.Response
                  (Servant.API.ContentTypes.$fAllMimeRender:a0_$cp1AllMimeRender
                     @ Servant.API.ContentTypes.JSON
                     @ CommonServer.Response
                     DirectoryServer.$s$fAllCTRender:a3)
                  DirectoryServer.$s$fAllCTRender:a2 -}
eb0f6909c835584440479c9d19625211
  $s$fAllCTRender:a_$s$fAllMimeRender:a0_$callMimeRender ::
    Data.Proxy.Proxy '[Servant.API.ContentTypes.JSON]
    -> [GHC.IO.FilePath]
    -> [(Network.HTTP.Media.MediaType.Internal.MediaType,
         Data.ByteString.Lazy.Internal.ByteString)]
  {- Arity: 2, Strictness: <L,A><L,1*U>m2,
     Unfolding: InlineRule (2, True, False)
                (\ (eta :: Data.Proxy.Proxy '[Servant.API.ContentTypes.JSON])
                   (eta1 :: [GHC.IO.FilePath]) ->
                 GHC.Types.:
                   @ (Network.HTTP.Media.MediaType.Internal.MediaType,
                      Data.ByteString.Lazy.Internal.ByteString)
                   ((Servant.API.ContentTypes.$fMimeRenderTYPEJSONa_$cp1MimeRender
                       @ [GHC.IO.FilePath]
                       DirectoryServer.$s$fAllCTRender:a_$dToJSON)
                      `cast`
                    (Servant.API.ContentTypes.N:Accept[0]
                         <GHC.Types.*>_N <Servant.API.ContentTypes.JSON>_N)
                      (Data.Proxy.Proxy @ GHC.Types.* @ Servant.API.ContentTypes.JSON),
                    DirectoryServer.$s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa_$cmimeRender2
                      (Data.Proxy.Proxy @ GHC.Types.* @ Servant.API.ContentTypes.JSON)
                      eta1)
                   (GHC.Types.[]
                      @ (Network.HTTP.Media.MediaType.Internal.MediaType,
                         Data.ByteString.Lazy.Internal.ByteString))) -}
60e35b60efc27072fe896e8257fd3da7
  $s$fAllCTRender:a_$s$fAllMimeRender:a1 ::
    Servant.API.ContentTypes.AllMimeRender
      '[Servant.API.ContentTypes.JSON] CommonServer.File
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ '[Servant.API.ContentTypes.JSON]
                  @ CommonServer.File
                  (Servant.API.ContentTypes.$fAllMimeRender:a0_$cp1AllMimeRender
                     @ Servant.API.ContentTypes.JSON
                     @ CommonServer.File
                     DirectoryServer.$s$fAllCTRender:a_$dMimeRender)
                  DirectoryServer.$s$fAllCTRender:a5 -}
ea85de756cd8b5aa9bf861e99eda976d
  $s$fAllCTRender:a_$s$fAllMimeRender:a2 ::
    Servant.API.ContentTypes.AllMimeRender
      '[Servant.API.ContentTypes.JSON] [GHC.IO.FilePath]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ '[Servant.API.ContentTypes.JSON]
                  @ [GHC.IO.FilePath]
                  (Servant.API.ContentTypes.$fAllMimeRender:a0_$cp1AllMimeRender
                     @ Servant.API.ContentTypes.JSON
                     @ [GHC.IO.FilePath]
                     DirectoryServer.$s$fAllCTRender:a_$dMimeRender1)
                  DirectoryServer.$s$fAllCTRender:a_$s$fAllMimeRender:a0_$callMimeRender -}
f1b8b14455421ad68b5613c2f7b043c4
  $s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa ::
    Servant.API.ContentTypes.MimeRender
      Servant.API.ContentTypes.JSON CommonServer.Response
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ *
                  @ Servant.API.ContentTypes.JSON
                  @ CommonServer.Response
                  (Servant.API.ContentTypes.$fMimeRenderTYPEJSONa_$cp1MimeRender
                     @ CommonServer.Response
                     CommonServer.$fToJSONResponse)
                  DirectoryServer.$s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa_$cmimeRender -}
8ecaf09ecda21d13bf6903dbf8105dfa
  $s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa1 ::
    Servant.API.ContentTypes.MimeRender
      Servant.API.ContentTypes.JSON CommonServer.File
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ *
                  @ Servant.API.ContentTypes.JSON
                  @ CommonServer.File
                  (Servant.API.ContentTypes.$fMimeRenderTYPEJSONa_$cp1MimeRender
                     @ CommonServer.File
                     CommonServer.$fToJSONFile)
                  DirectoryServer.$s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa_$cmimeRender1 -}
5589e79c47a8e3637f75eb4b32e8cd5c
  $s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa2 ::
    Servant.API.ContentTypes.MimeRender
      Servant.API.ContentTypes.JSON [GHC.IO.FilePath]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ *
                  @ Servant.API.ContentTypes.JSON
                  @ [GHC.IO.FilePath]
                  (Servant.API.ContentTypes.$fMimeRenderTYPEJSONa_$cp1MimeRender
                     @ [GHC.IO.FilePath]
                     DirectoryServer.$s$fAllCTRender:a_$dToJSON)
                  DirectoryServer.$s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa_$cmimeRender2 -}
e411cfb51f7e1eac4b73c78e472f1a16
  $s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa_$cmimeRender ::
    Data.Proxy.Proxy Servant.API.ContentTypes.JSON
    -> CommonServer.Response
    -> Data.ByteString.Lazy.Internal.ByteString
  {- Arity: 2, Strictness: <L,A><L,1*U(U,U,U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Data.Proxy.Proxy Servant.API.ContentTypes.JSON)
                   (eta :: CommonServer.Response) ->
                 Data.ByteString.Builder.toLazyByteString
                   (Data.Aeson.Types.Internal.fromEncoding
                      (Data.Aeson.Encode.Builder.encodeToBuilder
                         (CommonServer.$fToJSONResponse_$ctoJSON eta))
                        `cast`
                      (Sym (Data.Aeson.Types.Internal.N:Encoding[0])))) -}
b7e6ea18921bf3b59c5ce4e874b1af97
  $s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa_$cmimeRender1 ::
    Data.Proxy.Proxy Servant.API.ContentTypes.JSON
    -> CommonServer.File -> Data.ByteString.Lazy.Internal.ByteString
  {- Arity: 2, Strictness: <L,A><L,1*U(1*U,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Data.Proxy.Proxy Servant.API.ContentTypes.JSON)
                   (eta :: CommonServer.File) ->
                 Data.ByteString.Builder.toLazyByteString
                   (Data.Aeson.Types.Internal.fromEncoding
                      (Data.Aeson.Encode.Builder.encodeToBuilder
                         (CommonServer.$fToJSONFile_$ctoJSON eta))
                        `cast`
                      (Sym (Data.Aeson.Types.Internal.N:Encoding[0])))) -}
c9245e16606cf86496392ecfbeba071e
  $s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa_$cmimeRender2 ::
    Data.Proxy.Proxy Servant.API.ContentTypes.JSON
    -> [GHC.IO.FilePath] -> Data.ByteString.Lazy.Internal.ByteString
  {- Arity: 2, Strictness: <L,A><L,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Data.Proxy.Proxy Servant.API.ContentTypes.JSON)
                   (eta :: [GHC.IO.FilePath]) ->
                 Data.ByteString.Builder.toLazyByteString
                   (case eta of wild {
                      []
                      -> Data.Aeson.Types.Internal.fromEncoding
                           Data.Aeson.Encode.Builder.emptyArray_
                      : x xs
                      -> Data.Aeson.Types.Internal.fromEncoding
                           (GHC.Base.$
                              @ 'GHC.Types.PtrRepLifted
                              @ Data.ByteString.Builder.Internal.Builder
                              @ Data.Aeson.Types.Internal.Encoding
                              (\ (tpl :: Data.ByteString.Builder.Internal.Builder) -> tpl)
                                `cast`
                              (<Data.ByteString.Builder.Internal.Builder>_R
                               ->_R Sym (Data.Aeson.Types.Internal.N:Encoding[0]))
                              (Data.ByteString.Builder.Internal.append
                                 (Data.ByteString.Builder.Prim.primBounded
                                    @ GHC.Types.Char
                                    (Data.ByteString.Builder.Prim.Internal.toB
                                       @ GHC.Types.Char
                                       Data.ByteString.Builder.Prim.ASCII.char7)
                                    (GHC.Types.C# '['#))
                                 (Data.ByteString.Builder.Internal.append
                                    (Data.Aeson.Types.Internal.fromEncoding
                                       (Data.Aeson.Encode.Builder.string x)
                                         `cast`
                                       (Sym (Data.Aeson.Types.Internal.N:Encoding[0])))
                                    (Data.ByteString.Builder.Internal.append
                                       (GHC.Base.foldr
                                          @ [GHC.Types.Char]
                                          @ Data.ByteString.Builder.Internal.Builder
                                          (\ (v :: [GHC.Types.Char])
                                             (vs :: Data.ByteString.Builder.Internal.Builder)[OneShot] ->
                                           Data.ByteString.Builder.Internal.append
                                             (Data.ByteString.Builder.Prim.primBounded
                                                @ GHC.Types.Char
                                                (Data.ByteString.Builder.Prim.Internal.toB
                                                   @ GHC.Types.Char
                                                   Data.ByteString.Builder.Prim.ASCII.char7)
                                                (GHC.Types.C# ','#))
                                             (Data.ByteString.Builder.Internal.append
                                                (Data.Aeson.Types.Internal.fromEncoding
                                                   (Data.Aeson.Encode.Builder.string v)
                                                     `cast`
                                                   (Sym (Data.Aeson.Types.Internal.N:Encoding[0])))
                                                vs))
                                          Data.ByteString.Builder.Internal.empty
                                          xs)
                                       (Data.ByteString.Builder.Prim.primBounded
                                          @ GHC.Types.Char
                                          (Data.ByteString.Builder.Prim.Internal.toB
                                             @ GHC.Types.Char
                                             Data.ByteString.Builder.Prim.ASCII.char7)
                                          (GHC.Types.C# ']'#)))))) })) -}
f0bcc71fdebbfd5059ea092315029b16
  $s$fAllCTRender:a_$s$fToJSON[] ::
    Data.Aeson.Types.Class.ToJSON [[GHC.Types.Char]]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ [[GHC.Types.Char]]
                  (\ (eta :: [[GHC.Types.Char]]) ->
                   case Data.Vector.Generic.new
                          @ Data.Vector.Vector
                          @ Data.Aeson.Types.Internal.Value
                          (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                          (Data.Vector.Generic.New.unstream
                             @ Data.Vector.Vector
                             @ Data.Aeson.Types.Internal.Value
                             (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                             (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                                @ Data.Vector.Fusion.Util.Id
                                @ Data.Aeson.Types.Internal.Value
                                @ Data.Vector.Vector
                                Data.Vector.Fusion.Util.$fMonadId
                                Data.Vector.Fusion.Bundle.Size.Unknown
                                (GHC.Base.build
                                   @ Data.Aeson.Types.Internal.Value
                                   (\ @ b1
                                      (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                      (n :: b1)[OneShot] ->
                                    GHC.Base.foldr
                                      @ [GHC.Types.Char]
                                      @ b1
                                      (GHC.Base.mapFB
                                         @ Data.Aeson.Types.Internal.Value
                                         @ b1
                                         @ [GHC.Types.Char]
                                         c
                                         Data.Aeson.Types.Instances.$fToJSON[]0_$ctoJSON)
                                      n
                                      eta)))) of dt { Data.Vector.Vector ipv ipv1 ipv2 ->
                   Data.Aeson.Types.Internal.Array dt })
                  (Data.Aeson.Types.Instances.$fToJSON[]_$ctoEncoding
                     @ [GHC.Types.Char]
                     Data.Aeson.Types.Instances.$fToJSON[]0) -}
8f17e40751da6151b80ecef58c5894e3
  $s$fAllMimeUnrender:a ::
    Servant.API.ContentTypes.AllMimeUnrender
      '[Servant.API.ContentTypes.JSON] CommonServer.Ticket
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ '[Servant.API.ContentTypes.JSON]
                  @ CommonServer.Ticket
                  (Servant.API.ContentTypes.$fAllMimeUnrender:a_$cp1AllMimeUnrender
                     @ Servant.API.ContentTypes.JSON
                     @ CommonServer.Ticket
                     @ '[]
                     DirectoryServer.$s$fAllMimeUnrender:a1
                     (Servant.API.ContentTypes.$fAllMimeUnrender[]a
                        @ CommonServer.Ticket))
                  (Servant.API.ContentTypes.$fAllMimeUnrender:a_$callMimeUnrender
                     @ Servant.API.ContentTypes.JSON
                     @ CommonServer.Ticket
                     @ '[]
                     DirectoryServer.$s$fAllMimeUnrender:a1
                     (Servant.API.ContentTypes.$fAllMimeUnrender[]a
                        @ CommonServer.Ticket)) -}
06f6e5c0f8d8e880010813a20c2a2f4e
  $s$fAllMimeUnrender:a1 ::
    Servant.API.ContentTypes.MimeUnrender
      Servant.API.ContentTypes.JSON CommonServer.Ticket
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.$s$fAllMimeUnrender:a_$s$fMimeUnrenderTYPEJSONa -}
72d1c57790a3b11526b4fc48a992270d
  $s$fAllMimeUnrender:a2 ::
    Servant.API.ContentTypes.AllMimeUnrender
      '[Servant.API.ContentTypes.JSON] [GHC.Types.Char]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ '[Servant.API.ContentTypes.JSON]
                  @ [GHC.Types.Char]
                  (Servant.API.ContentTypes.$fAllMimeUnrender:a_$cp1AllMimeUnrender
                     @ Servant.API.ContentTypes.JSON
                     @ [GHC.Types.Char]
                     @ '[]
                     DirectoryServer.$s$fAllMimeUnrender:a_$dMimeUnrender
                     (Servant.API.ContentTypes.$fAllMimeUnrender[]a @ [GHC.Types.Char]))
                  (Servant.API.ContentTypes.$fAllMimeUnrender:a_$callMimeUnrender
                     @ Servant.API.ContentTypes.JSON
                     @ [GHC.Types.Char]
                     @ '[]
                     DirectoryServer.$s$fAllMimeUnrender:a_$dMimeUnrender
                     (Servant.API.ContentTypes.$fAllMimeUnrender[]a
                        @ [GHC.Types.Char])) -}
fcff9dcaa643bb609c0181cfb1b302ee
  $s$fAllMimeUnrender:a3 ::
    Servant.API.ContentTypes.AllMimeUnrender
      '[Servant.API.ContentTypes.JSON] CommonServer.Identity
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ '[Servant.API.ContentTypes.JSON]
                  @ CommonServer.Identity
                  (Servant.API.ContentTypes.$fAllMimeUnrender:a_$cp1AllMimeUnrender
                     @ Servant.API.ContentTypes.JSON
                     @ CommonServer.Identity
                     @ '[]
                     DirectoryServer.$s$fAllMimeUnrender:a_$dMimeUnrender1
                     (Servant.API.ContentTypes.$fAllMimeUnrender[]a
                        @ CommonServer.Identity))
                  (Servant.API.ContentTypes.$fAllMimeUnrender:a_$callMimeUnrender
                     @ Servant.API.ContentTypes.JSON
                     @ CommonServer.Identity
                     @ '[]
                     DirectoryServer.$s$fAllMimeUnrender:a_$dMimeUnrender1
                     (Servant.API.ContentTypes.$fAllMimeUnrender[]a
                        @ CommonServer.Identity)) -}
96059a8ac29b79224d23b9d4f869b667
  $s$fAllMimeUnrender:a4 ::
    Servant.API.ContentTypes.AllMimeUnrender
      '[Servant.API.ContentTypes.JSON] CommonServer.File
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ '[Servant.API.ContentTypes.JSON]
                  @ CommonServer.File
                  (Servant.API.ContentTypes.$fAllMimeUnrender:a_$cp1AllMimeUnrender
                     @ Servant.API.ContentTypes.JSON
                     @ CommonServer.File
                     @ '[]
                     DirectoryServer.$s$fAllMimeUnrender:a_$dMimeUnrender2
                     (Servant.API.ContentTypes.$fAllMimeUnrender[]a
                        @ CommonServer.File))
                  (Servant.API.ContentTypes.$fAllMimeUnrender:a_$callMimeUnrender
                     @ Servant.API.ContentTypes.JSON
                     @ CommonServer.File
                     @ '[]
                     DirectoryServer.$s$fAllMimeUnrender:a_$dMimeUnrender2
                     (Servant.API.ContentTypes.$fAllMimeUnrender[]a
                        @ CommonServer.File)) -}
b50b483cbc9e8e583bac204300130e66
  $s$fAllMimeUnrender:a_$dMimeUnrender ::
    Servant.API.ContentTypes.MimeUnrender
      Servant.API.ContentTypes.JSON [GHC.Types.Char]
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.$s$fAllMimeUnrender:a_$s$fMimeUnrenderTYPEJSONa1 -}
4883729455dbf057acdcb2e56198941e
  $s$fAllMimeUnrender:a_$dMimeUnrender1 ::
    Servant.API.ContentTypes.MimeUnrender
      Servant.API.ContentTypes.JSON CommonServer.Identity
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.$s$fAllMimeUnrender:a_$s$fMimeUnrenderTYPEJSONa2 -}
b8e2147e050f5917153c31d50d0d6c14
  $s$fAllMimeUnrender:a_$dMimeUnrender2 ::
    Servant.API.ContentTypes.MimeUnrender
      Servant.API.ContentTypes.JSON CommonServer.File
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.$s$fAllMimeUnrender:a_$s$fMimeUnrenderTYPEJSONa3 -}
dc07df4e6ee53f1a0dc808af3a56435a
  $s$fAllMimeUnrender:a_$s$fMimeUnrenderTYPEJSONa ::
    Servant.API.ContentTypes.MimeUnrender
      Servant.API.ContentTypes.JSON CommonServer.Ticket
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ *
                  @ Servant.API.ContentTypes.JSON
                  @ CommonServer.Ticket
                  (Servant.API.ContentTypes.$fMimeUnrenderTYPEJSONa_$cp1MimeUnrender
                     @ CommonServer.Ticket
                     CommonServer.$fFromJSONSessionFile_$cparseJSON1
                       `cast`
                     (Sym (Data.Aeson.Types.Class.N:FromJSON[0]
                               <CommonServer.Ticket>_N)))
                  DirectoryServer.$s$fAllMimeUnrender:a_$s$fMimeUnrenderTYPEJSONa_$cmimeUnrender -}
5564007e98b7b60cb1cc2133eba25a75
  $s$fAllMimeUnrender:a_$s$fMimeUnrenderTYPEJSONa1 ::
    Servant.API.ContentTypes.MimeUnrender
      Servant.API.ContentTypes.JSON [GHC.Types.Char]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ *
                  @ Servant.API.ContentTypes.JSON
                  @ [GHC.Types.Char]
                  (Servant.API.ContentTypes.$fMimeUnrenderTYPEJSONa_$cp1MimeUnrender
                     @ [GHC.Types.Char]
                     Data.Aeson.Types.Instances.$fFromJSON[]0_$cparseJSON
                       `cast`
                     (Sym (Data.Aeson.Types.Class.N:FromJSON[0] <[GHC.Types.Char]>_N)))
                  DirectoryServer.$s$fAllMimeUnrender:a_$s$fMimeUnrenderTYPEJSONa_$cmimeUnrender1 -}
5e8be5acd757fef02e97bdb0db724b89
  $s$fAllMimeUnrender:a_$s$fMimeUnrenderTYPEJSONa2 ::
    Servant.API.ContentTypes.MimeUnrender
      Servant.API.ContentTypes.JSON CommonServer.Identity
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ *
                  @ Servant.API.ContentTypes.JSON
                  @ CommonServer.Identity
                  (Servant.API.ContentTypes.$fMimeUnrenderTYPEJSONa_$cp1MimeUnrender
                     @ CommonServer.Identity
                     CommonServer.$fFromJSONIdentity_$cparseJSON
                       `cast`
                     (Sym (Data.Aeson.Types.Class.N:FromJSON[0]
                               <CommonServer.Identity>_N)))
                  DirectoryServer.$s$fAllMimeUnrender:a_$s$fMimeUnrenderTYPEJSONa_$cmimeUnrender2 -}
061033966a076f4fe97930e6e7592631
  $s$fAllMimeUnrender:a_$s$fMimeUnrenderTYPEJSONa3 ::
    Servant.API.ContentTypes.MimeUnrender
      Servant.API.ContentTypes.JSON CommonServer.File
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ *
                  @ Servant.API.ContentTypes.JSON
                  @ CommonServer.File
                  (Servant.API.ContentTypes.$fMimeUnrenderTYPEJSONa_$cp1MimeUnrender
                     @ CommonServer.File
                     CommonServer.$fFromJSONFile_$cparseJSON
                       `cast`
                     (Sym (Data.Aeson.Types.Class.N:FromJSON[0] <CommonServer.File>_N)))
                  DirectoryServer.$s$fAllMimeUnrender:a_$s$fMimeUnrenderTYPEJSONa_$cmimeUnrender3 -}
a1acfa615e06923af1e96c8fdc6ea3d2
  $s$fAllMimeUnrender:a_$s$fMimeUnrenderTYPEJSONa_$cmimeUnrender ::
    Data.Proxy.Proxy Servant.API.ContentTypes.JSON
    -> Data.ByteString.Lazy.Internal.ByteString
    -> Data.Either.Either GHC.Base.String CommonServer.Ticket
  {- Arity: 2, Strictness: <L,A><S,1*U>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Proxy.Proxy Servant.API.ContentTypes.JSON)
                   (eta :: Data.ByteString.Lazy.Internal.ByteString) ->
                 Servant.API.ContentTypes.eitherDecodeLenient
                   @ CommonServer.Ticket
                   CommonServer.$fFromJSONSessionFile_$cparseJSON1
                     `cast`
                   (Sym (Data.Aeson.Types.Class.N:FromJSON[0]
                             <CommonServer.Ticket>_N))
                   eta) -}
b0d5948217043d74df5066fd5ee6d9e4
  $s$fAllMimeUnrender:a_$s$fMimeUnrenderTYPEJSONa_$cmimeUnrender1 ::
    Data.Proxy.Proxy Servant.API.ContentTypes.JSON
    -> Data.ByteString.Lazy.Internal.ByteString
    -> Data.Either.Either GHC.Base.String [GHC.Types.Char]
  {- Arity: 2, Strictness: <L,A><S,1*U>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Proxy.Proxy Servant.API.ContentTypes.JSON)
                   (eta :: Data.ByteString.Lazy.Internal.ByteString) ->
                 Servant.API.ContentTypes.eitherDecodeLenient
                   @ [GHC.Types.Char]
                   Data.Aeson.Types.Instances.$fFromJSON[]0_$cparseJSON
                     `cast`
                   (Sym (Data.Aeson.Types.Class.N:FromJSON[0] <[GHC.Types.Char]>_N))
                   eta) -}
ba3276f6d7905c47b737f3fc81059f28
  $s$fAllMimeUnrender:a_$s$fMimeUnrenderTYPEJSONa_$cmimeUnrender2 ::
    Data.Proxy.Proxy Servant.API.ContentTypes.JSON
    -> Data.ByteString.Lazy.Internal.ByteString
    -> Data.Either.Either GHC.Base.String CommonServer.Identity
  {- Arity: 2, Strictness: <L,A><S,1*U>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Proxy.Proxy Servant.API.ContentTypes.JSON)
                   (eta :: Data.ByteString.Lazy.Internal.ByteString) ->
                 Servant.API.ContentTypes.eitherDecodeLenient
                   @ CommonServer.Identity
                   CommonServer.$fFromJSONIdentity_$cparseJSON
                     `cast`
                   (Sym (Data.Aeson.Types.Class.N:FromJSON[0]
                             <CommonServer.Identity>_N))
                   eta) -}
4554f7adb43a0006a3a4c7388bb03170
  $s$fAllMimeUnrender:a_$s$fMimeUnrenderTYPEJSONa_$cmimeUnrender3 ::
    Data.Proxy.Proxy Servant.API.ContentTypes.JSON
    -> Data.ByteString.Lazy.Internal.ByteString
    -> Data.Either.Either GHC.Base.String CommonServer.File
  {- Arity: 2, Strictness: <L,A><S,1*U>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Proxy.Proxy Servant.API.ContentTypes.JSON)
                   (eta :: Data.ByteString.Lazy.Internal.ByteString) ->
                 Servant.API.ContentTypes.eitherDecodeLenient
                   @ CommonServer.File
                   CommonServer.$fFromJSONFile_$cparseJSON
                     `cast`
                   (Sym (Data.Aeson.Types.Class.N:FromJSON[0] <CommonServer.File>_N))
                   eta) -}
36a8a10cad6742b9e0da41f0a9305ee3
  $tc'FileLocked :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7658552782808936982##
                   4145760155786002598##
                   DirectoryServer.$trModule
                   DirectoryServer.$tc'FileLocked1) -}
19587c2db1cd163163595218c6ff19be
  $tc'FileLocked1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'FileLocked"#) -}
1b7e62feb3480093e8b1c5e244f801a0
  $tc'FileMapping :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12696745465732506708##
                   14057977081985999169##
                   DirectoryServer.$trModule
                   DirectoryServer.$tc'FileMapping1) -}
05e73e6c527c5ba11281d37582a6859b
  $tc'FileMapping1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'FileMapping"#) -}
b50c96553f2921d7bd162a51197e4b7d
  $tc'FileReadOnly :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13558864263803169566##
                   341083812531732636##
                   DirectoryServer.$trModule
                   DirectoryServer.$tc'FileReadOnly1) -}
50324181938cc497054051c1d20f316c
  $tc'FileReadOnly1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'FileReadOnly"#) -}
4584ee67f6ab2701e6b34ac2c7d2d638
  $tc'FileUnlocked :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2229987240768892396##
                   14589764264887269238##
                   DirectoryServer.$trModule
                   DirectoryServer.$tc'FileUnlocked1) -}
8f4d99de6bf34ecb31d3e3a19efe38de
  $tc'FileUnlocked1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'FileUnlocked"#) -}
59323c01688ef21ce7a2e92d19df64c3
  $tcFileLock :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7116576064863553412##
                   4344262045150587073##
                   DirectoryServer.$trModule
                   DirectoryServer.$tcFileLock1) -}
343d2b3ada3c81c80ed4bcbf8ccfa108
  $tcFileLock1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "FileLock"#) -}
3d6898ae6208660af2d296e8368ec159
  $tcFileMapping :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5841432484127658430##
                   7587004353211859868##
                   DirectoryServer.$trModule
                   DirectoryServer.$tcFileMapping1) -}
2422c49c16cf16e0a208fc8c042baef8
  $tcFileMapping1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "FileMapping"#) -}
664e31ee349cc5ccbc4227d1eb8a8f0b
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   DirectoryServer.$trModule2
                   DirectoryServer.$trModule1) -}
286852470b9f0f8b69eadb9dd65fea59
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "DirectoryServer"#) -}
caff13491a021247426a4298dd50bd6f
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "Gluon-0.1.0.0-2zM8ehVFg6FFhvYw0f6srV"#) -}
3c2ba257a5ddb3e3149e96c606ab4f0d
  $w$c== ::
    GHC.IO.FilePath
    -> CommonServer.Identity
    -> DirectoryServer.FileLock
    -> GHC.IO.FilePath
    -> CommonServer.Identity
    -> DirectoryServer.FileLock
    -> GHC.Types.Bool
  {- Arity: 6, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U(1*U,1*U,1*U)><L,1*U><S,1*U><L,1*U(1*U,1*U,1*U)><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.IO.FilePath)
                   (ww1 :: CommonServer.Identity)
                   (ww2 :: DirectoryServer.FileLock)
                   (ww3 :: GHC.IO.FilePath)
                   (ww4 :: CommonServer.Identity)
                   (ww5 :: DirectoryServer.FileLock) ->
                 case GHC.Base.eqString ww ww3 of wild {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> case ww1 of ww6 { CommonServer.Identity ww7 ww8 ww9 ->
                      case ww4 of ww10 { CommonServer.Identity ww11 ww12 ww13 ->
                      case GHC.Base.eqString ww7 ww11 of wild1 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True
                        -> case GHC.Base.eqString ww8 ww12 of wild2 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True
                             -> case ww9 of wild3 {
                                  CommonServer.FileServer
                                  -> case ww13 of wild4 {
                                       DEFAULT -> GHC.Types.False
                                       CommonServer.FileServer
                                       -> DirectoryServer.$fEqFileLock_$c== ww2 ww5 }
                                  CommonServer.DirectoryServer
                                  -> case ww13 of wild4 {
                                       DEFAULT -> GHC.Types.False
                                       CommonServer.DirectoryServer
                                       -> DirectoryServer.$fEqFileLock_$c== ww2 ww5 }
                                  CommonServer.ProxyServer
                                  -> case ww13 of wild4 {
                                       DEFAULT -> GHC.Types.False
                                       CommonServer.ProxyServer
                                       -> DirectoryServer.$fEqFileLock_$c== ww2 ww5 }
                                  CommonServer.SecurityServer
                                  -> case ww13 of wild4 {
                                       DEFAULT -> GHC.Types.False
                                       CommonServer.SecurityServer
                                       -> DirectoryServer.$fEqFileLock_$c== ww2 ww5 }
                                  CommonServer.TransactionServer
                                  -> case ww13 of wild4 {
                                       DEFAULT -> GHC.Types.False
                                       CommonServer.TransactionServer
                                       -> DirectoryServer.$fEqFileLock_$c== ww2 ww5 }
                                  CommonServer.ReplicationServer
                                  -> case ww13 of wild4 {
                                       DEFAULT -> GHC.Types.False
                                       CommonServer.ReplicationServer
                                       -> DirectoryServer.$fEqFileLock_$c==
                                            ww2
                                            ww5 } } } } } } }) -}
3c2ba257a5ddb3e3149e96c606ab4f0d
  $w$cshowsPrec ::
    DirectoryServer.FileLock -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (w :: DirectoryServer.FileLock)
                   (w1 :: GHC.Base.String) ->
                 case w of wild {
                   DirectoryServer.FileLocked
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        DirectoryServer.$fFromBSONFileLock2
                        w1
                   DirectoryServer.FileUnlocked
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        DirectoryServer.$fFromBSONFileLock5
                        w1
                   DirectoryServer.FileReadOnly
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        DirectoryServer.$fFromBSONFileLock8
                        w1 }) -}
3c2ba257a5ddb3e3149e96c606ab4f0d
  $w$cshowsPrec1 ::
    GHC.Prim.Int#
    -> GHC.IO.FilePath
    -> CommonServer.Identity
    -> DirectoryServer.FileLock
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 5,
     Strictness: <S,U><L,1*U><L,1*U(1*U,1*U,1*U)><L,1*U><L,U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.IO.FilePath)
                   (ww2 :: CommonServer.Identity)
                   (ww3 :: DirectoryServer.FileLock)
                   (w :: GHC.Base.String) ->
                 let {
                   p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,1*U> -}
                   = \ (x :: GHC.Base.String)[OneShot] ->
                     GHC.Base.++
                       @ GHC.Types.Char
                       DirectoryServer.$fShowFileMapping7
                       (GHC.Base.++
                          @ GHC.Types.Char
                          DirectoryServer.$fShowFileMapping6
                          (GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows8
                             (GHC.Show.showLitString
                                ww1
                                (GHC.Types.:
                                   @ GHC.Types.Char
                                   GHC.Show.shows8
                                   (GHC.Base.++
                                      @ GHC.Types.Char
                                      DirectoryServer.$fShowFileMapping5
                                      (GHC.Base.++
                                         @ GHC.Types.Char
                                         DirectoryServer.$fShowFileMapping4
                                         (case ww2 of ww4 { CommonServer.Identity ww5 ww6 ww7 ->
                                          CommonServer.$w$cshowsPrec1
                                            0#
                                            ww5
                                            ww6
                                            ww7
                                            (GHC.Base.++
                                               @ GHC.Types.Char
                                               DirectoryServer.$fShowFileMapping5
                                               (GHC.Base.++
                                                  @ GHC.Types.Char
                                                  DirectoryServer.$fShowFileMapping3
                                                  (case ww3 of wild {
                                                     DirectoryServer.FileLocked
                                                     -> GHC.Base.++
                                                          @ GHC.Types.Char
                                                          DirectoryServer.$fFromBSONFileLock2
                                                          (GHC.Base.++
                                                             @ GHC.Types.Char
                                                             DirectoryServer.$fShowFileMapping2
                                                             x)
                                                     DirectoryServer.FileUnlocked
                                                     -> GHC.Base.++
                                                          @ GHC.Types.Char
                                                          DirectoryServer.$fFromBSONFileLock5
                                                          (GHC.Base.++
                                                             @ GHC.Types.Char
                                                             DirectoryServer.$fShowFileMapping2
                                                             x)
                                                     DirectoryServer.FileReadOnly
                                                     -> GHC.Base.++
                                                          @ GHC.Types.Char
                                                          DirectoryServer.$fFromBSONFileLock8
                                                          (GHC.Base.++
                                                             @ GHC.Types.Char
                                                             DirectoryServer.$fShowFileMapping2
                                                             x) }))) })))))))
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False -> p w
                   GHC.Types.True
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.shows9
                        (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows6 w)) }) -}
3c2ba257a5ddb3e3149e96c606ab4f0d
  $w$dConsFromJSON' ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Generic.Tagged
         Data.Aeson.Types.Generic.True
         (Data.Aeson.Types.Internal.Parser
            ((GHC.Generics.:*:)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "fileName")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 GHC.IO.FilePath))
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "identity")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 CommonServer.Identity)
                GHC.Generics.:*: GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "lock")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 DirectoryServer.FileLock))
               a))
  {- Arity: 2, Strictness: <L,U(U,U,U,U,U,U)><S,1*U>, Inline: [0],
     Unfolding: (\ @ a
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: Data.Aeson.Types.Internal.Value) ->
                 case w1 of wild {
                   DEFAULT
                   -> (Data.Aeson.Types.Class.typeMismatch
                         @ ((GHC.Generics.:*:)
                              (GHC.Generics.S1
                                 ('GHC.Generics.MetaSel
                                    ('GHC.Base.Just "fileName")
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.Rec0 GHC.IO.FilePath))
                              (GHC.Generics.S1
                                 ('GHC.Generics.MetaSel
                                    ('GHC.Base.Just "identity")
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.Rec0 CommonServer.Identity)
                               GHC.Generics.:*: GHC.Generics.S1
                                                  ('GHC.Generics.MetaSel
                                                     ('GHC.Base.Just "lock")
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.Rec0 DirectoryServer.FileLock))
                              a)
                         Data.Aeson.Types.Generic.$fConsFromJSON'fTrue1
                         wild)
                        `cast`
                      (Sym (Data.Aeson.Types.Generic.N:Tagged[0]
                                <Data.Aeson.Types.Generic.True>_P
                                <Data.Aeson.Types.Internal.Parser
                                   ((GHC.Generics.:*:)
                                      (GHC.Generics.S1
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "fileName")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.Rec0 GHC.IO.FilePath))
                                      (GHC.Generics.S1
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "identity")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.Rec0 CommonServer.Identity)
                                       GHC.Generics.:*: GHC.Generics.S1
                                                          ('GHC.Generics.MetaSel
                                                             ('GHC.Base.Just "lock")
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.Rec0
                                                             DirectoryServer.FileLock))
                                      a)>_R))
                   Data.Aeson.Types.Internal.Object obj
                   -> let {
                        e :: Data.Aeson.Types.Internal.Parser
                               (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "lock")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.Rec0 DirectoryServer.FileLock)
                                  a)
                        = Data.Aeson.Types.Generic.$fFromRecordM10_$cparseRecord
                            @ ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "lock")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                            @ (GHC.Generics.K1 GHC.Generics.R DirectoryServer.FileLock)
                            DirectoryServer.$fFromBSONFileMapping_$s$fSelectorMetaMetaSel
                            DirectoryServer.$fFromJSONFileMapping5
                              `cast`
                            (Sym (Data.Aeson.Types.Class.N:GFromJSON[0]
                                      <GHC.Generics.K1 GHC.Generics.R DirectoryServer.FileLock>_N))
                            @ a
                            w
                            (GHC.Base.Nothing @ Data.Text.Internal.Text)
                            obj
                      } in
                      let {
                        m :: Data.Aeson.Types.Internal.Parser
                               (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "identity")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.Rec0 CommonServer.Identity)
                                  a)
                        = Data.Aeson.Types.Generic.$fFromRecordM10_$cparseRecord
                            @ ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "identity")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                            @ (GHC.Generics.K1 GHC.Generics.R CommonServer.Identity)
                            DirectoryServer.$fFromBSONFileMapping_$s$fSelectorMetaMetaSel1
                            DirectoryServer.$fFromJSONFileMapping4
                              `cast`
                            (Sym (Data.Aeson.Types.Class.N:GFromJSON[0]
                                      <GHC.Generics.K1 GHC.Generics.R CommonServer.Identity>_N))
                            @ a
                            w
                            (GHC.Base.Nothing @ Data.Text.Internal.Text)
                            obj
                      } in
                      let {
                        m1 :: Data.Aeson.Types.Internal.Parser
                                (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "fileName")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.IO.FilePath)
                                   a)
                        = Data.Aeson.Types.Generic.$fFromRecordM10_$cparseRecord
                            @ ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "fileName")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                            @ (GHC.Generics.K1 GHC.Generics.R GHC.IO.FilePath)
                            CommonServer.$fFromJSONFile_$s$fSelectorMetaMetaSel
                            DirectoryServer.$fFromJSONFileMapping2
                              `cast`
                            (Sym (Data.Aeson.Types.Class.N:GFromJSON[0]
                                      <GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char]>_N))
                            @ a
                            w
                            (GHC.Base.Nothing @ Data.Text.Internal.Text)
                            obj
                      } in
                      (\ @ (f :: * -> *)
                         @ r
                         (path :: Data.Aeson.Types.Internal.JSONPath)
                         (kf :: Data.Aeson.Types.Internal.Failure f r)
                         (ks :: Data.Aeson.Types.Internal.Success
                                  ((GHC.Generics.:*:)
                                     (GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Base.Just "fileName")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.Rec0 GHC.IO.FilePath))
                                     (GHC.Generics.S1
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Base.Just "identity")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.Rec0 CommonServer.Identity)
                                      GHC.Generics.:*: GHC.Generics.S1
                                                         ('GHC.Generics.MetaSel
                                                            ('GHC.Base.Just "lock")
                                                            'GHC.Generics.NoSourceUnpackedness
                                                            'GHC.Generics.NoSourceStrictness
                                                            'GHC.Generics.DecidedLazy)
                                                         (GHC.Generics.Rec0
                                                            DirectoryServer.FileLock))
                                     a)
                                  f
                                  r) ->
                       m1
                         `cast`
                       (Data.Aeson.Types.Internal.N:Parser[0]
                            <GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "fileName")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.Rec0 GHC.IO.FilePath)
                               a>_R)
                         @ f
                         @ r
                         path
                         kf
                         (\ (a2 :: GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "fileName")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.Rec0 GHC.IO.FilePath)
                                     a) ->
                          m `cast`
                          (Data.Aeson.Types.Internal.N:Parser[0]
                               <GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "identity")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.Rec0 CommonServer.Identity)
                                  a>_R)
                            @ f
                            @ r
                            path
                            kf
                            (\ (a1 :: GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Base.Just "identity")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.Rec0 CommonServer.Identity)
                                        a) ->
                             e `cast`
                             (Data.Aeson.Types.Internal.N:Parser[0]
                                  <GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "lock")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.Rec0 DirectoryServer.FileLock)
                                     a>_R)
                               @ f
                               @ r
                               path
                               kf
                               (\ (a3 :: GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "lock")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.Rec0 DirectoryServer.FileLock)
                                           a) ->
                                ks
                                  (GHC.Generics.:*:
                                     @ (GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "fileName")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.Rec0 GHC.IO.FilePath))
                                     @ (GHC.Generics.S1
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "identity")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.Rec0 CommonServer.Identity)
                                        GHC.Generics.:*: GHC.Generics.S1
                                                           ('GHC.Generics.MetaSel
                                                              ('GHC.Base.Just "lock")
                                                              'GHC.Generics.NoSourceUnpackedness
                                                              'GHC.Generics.NoSourceStrictness
                                                              'GHC.Generics.DecidedLazy)
                                                           (GHC.Generics.Rec0
                                                              DirectoryServer.FileLock))
                                     @ a
                                     a2
                                     (GHC.Generics.:*:
                                        @ (GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "identity")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.Rec0 CommonServer.Identity))
                                        @ (GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "lock")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.Rec0 DirectoryServer.FileLock))
                                        @ a
                                        a1
                                        a3))))))
                        `cast`
                      (Trans
                           (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                     <(GHC.Generics.:*:)
                                        (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "fileName")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.Rec0 GHC.IO.FilePath))
                                        (GHC.Generics.S1
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "identity")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.Rec0 CommonServer.Identity)
                                         GHC.Generics.:*: GHC.Generics.S1
                                                            ('GHC.Generics.MetaSel
                                                               ('GHC.Base.Just "lock")
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy)
                                                            (GHC.Generics.Rec0
                                                               DirectoryServer.FileLock))
                                        a>_R))
                           (Sym (Data.Aeson.Types.Generic.N:Tagged[0]
                                     <Data.Aeson.Types.Generic.True>_P
                                     <Data.Aeson.Types.Internal.Parser
                                        ((GHC.Generics.:*:)
                                           (GHC.Generics.S1
                                              ('GHC.Generics.MetaSel
                                                 ('GHC.Base.Just "fileName")
                                                 'GHC.Generics.NoSourceUnpackedness
                                                 'GHC.Generics.NoSourceStrictness
                                                 'GHC.Generics.DecidedLazy)
                                              (GHC.Generics.Rec0 GHC.IO.FilePath))
                                           (GHC.Generics.S1
                                              ('GHC.Generics.MetaSel
                                                 ('GHC.Base.Just "identity")
                                                 'GHC.Generics.NoSourceUnpackedness
                                                 'GHC.Generics.NoSourceStrictness
                                                 'GHC.Generics.DecidedLazy)
                                              (GHC.Generics.Rec0 CommonServer.Identity)
                                            GHC.Generics.:*: GHC.Generics.S1
                                                               ('GHC.Generics.MetaSel
                                                                  ('GHC.Base.Just "lock")
                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                  'GHC.Generics.NoSourceStrictness
                                                                  'GHC.Generics.DecidedLazy)
                                                               (GHC.Generics.Rec0
                                                                  DirectoryServer.FileLock))
                                           a)>_R))) }) -}
3430850c40ef7f6f335191b48326019a
  $w$dFromPair ::
    (GHC.Base.String -> GHC.Base.String)
    -> (GHC.Base.String -> GHC.Base.String)
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> Data.Aeson.Types.Internal.SumEncoding
    -> GHC.Types.Bool
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Aeson.Types.Internal.Value
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "FileReadOnly" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
               a1))
  {- Arity: 10,
     Strictness: <L,U><C(S),U><L,U><L,U><L,U><L,U><S,U><S,U><S,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ a1
                   (ww :: GHC.Base.String -> GHC.Base.String)
                   (ww1 :: GHC.Base.String -> GHC.Base.String)
                   (ww2 :: GHC.Types.Bool)
                   (ww3 :: GHC.Types.Bool)
                   (ww4 :: Data.Aeson.Types.Internal.SumEncoding)
                   (ww5 :: GHC.Types.Bool)
                   (ww6 :: GHC.Prim.ByteArray#)
                   (ww7 :: GHC.Prim.Int#)
                   (ww8 :: GHC.Prim.Int#)
                   (ww9 :: Data.Aeson.Types.Internal.Value) ->
                 Data.Aeson.Types.Generic.$w$cparsePair
                   @ ('GHC.Generics.MetaCons
                        "FileReadOnly" 'GHC.Generics.PrefixI 'GHC.Types.False)
                   @ GHC.Generics.U1
                   DirectoryServer.$fFromBSONFileMapping_$s$fConstructorMetaMetaCons
                   DirectoryServer.$fFromJSONFileLock12
                     `cast`
                   (Sym (Data.Aeson.Types.Generic.N:ConsFromJSON[0]
                             <GHC.Generics.U1>_N))
                   @ a1
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9) -}
96081c310e26405f2dbae2111728475e
  $w$dFromPair1 ::
    (GHC.Base.String -> GHC.Base.String)
    -> (GHC.Base.String -> GHC.Base.String)
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> Data.Aeson.Types.Internal.SumEncoding
    -> GHC.Types.Bool
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Aeson.Types.Internal.Value
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "FileUnlocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
               a1))
  {- Arity: 10,
     Strictness: <L,U><C(S),U><L,U><L,U><L,U><L,U><S,U><S,U><S,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ a1
                   (ww :: GHC.Base.String -> GHC.Base.String)
                   (ww1 :: GHC.Base.String -> GHC.Base.String)
                   (ww2 :: GHC.Types.Bool)
                   (ww3 :: GHC.Types.Bool)
                   (ww4 :: Data.Aeson.Types.Internal.SumEncoding)
                   (ww5 :: GHC.Types.Bool)
                   (ww6 :: GHC.Prim.ByteArray#)
                   (ww7 :: GHC.Prim.Int#)
                   (ww8 :: GHC.Prim.Int#)
                   (ww9 :: Data.Aeson.Types.Internal.Value) ->
                 Data.Aeson.Types.Generic.$w$cparsePair
                   @ ('GHC.Generics.MetaCons
                        "FileUnlocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                   @ GHC.Generics.U1
                   DirectoryServer.$fFromBSONFileMapping_$s$fConstructorMetaMetaCons1
                   DirectoryServer.$fFromJSONFileLock12
                     `cast`
                   (Sym (Data.Aeson.Types.Generic.N:ConsFromJSON[0]
                             <GHC.Generics.U1>_N))
                   @ a1
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9) -}
96b19863985717524549db000e037c2a
  $w$dFromPair2 ::
    (GHC.Base.String -> GHC.Base.String)
    -> (GHC.Base.String -> GHC.Base.String)
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> Data.Aeson.Types.Internal.SumEncoding
    -> GHC.Types.Bool
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Aeson.Types.Internal.Value
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "FileLocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
               a1))
  {- Arity: 10,
     Strictness: <L,U><C(S),U><L,U><L,U><L,U><L,U><S,U><S,U><S,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ a1
                   (ww :: GHC.Base.String -> GHC.Base.String)
                   (ww1 :: GHC.Base.String -> GHC.Base.String)
                   (ww2 :: GHC.Types.Bool)
                   (ww3 :: GHC.Types.Bool)
                   (ww4 :: Data.Aeson.Types.Internal.SumEncoding)
                   (ww5 :: GHC.Types.Bool)
                   (ww6 :: GHC.Prim.ByteArray#)
                   (ww7 :: GHC.Prim.Int#)
                   (ww8 :: GHC.Prim.Int#)
                   (ww9 :: Data.Aeson.Types.Internal.Value) ->
                 Data.Aeson.Types.Generic.$w$cparsePair
                   @ ('GHC.Generics.MetaCons
                        "FileLocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                   @ GHC.Generics.U1
                   DirectoryServer.$fFromBSONFileMapping_$s$fConstructorMetaMetaCons2
                   DirectoryServer.$fFromJSONFileLock12
                     `cast`
                   (Sym (Data.Aeson.Types.Generic.N:ConsFromJSON[0]
                             <GHC.Generics.U1>_N))
                   @ a1
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9) -}
5d905258e1385478a1c70e512ce4a15b
  $w$dFromTaggedObject ::
    (GHC.Base.String -> GHC.Base.String)
    -> (GHC.Base.String -> GHC.Base.String)
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> Data.Aeson.Types.Internal.SumEncoding
    -> GHC.Types.Bool
    -> GHC.Base.String
    -> Data.Aeson.Types.Internal.Object
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "FileReadOnly" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
               a))
  {- Arity: 11,
     Strictness: <L,U><C(S),U><L,U><L,U><L,U><L,U><L,U><L,U><S,U><S,U><S,U>,
     Inline: [0],
     Unfolding: (\ @ a
                   (ww :: GHC.Base.String -> GHC.Base.String)
                   (ww1 :: GHC.Base.String -> GHC.Base.String)
                   (ww2 :: GHC.Types.Bool)
                   (ww3 :: GHC.Types.Bool)
                   (ww4 :: Data.Aeson.Types.Internal.SumEncoding)
                   (ww5 :: GHC.Types.Bool)
                   (w :: GHC.Base.String)
                   (w1 :: Data.Aeson.Types.Internal.Object)
                   (ww6 :: GHC.Prim.ByteArray#)
                   (ww7 :: GHC.Prim.Int#)
                   (ww8 :: GHC.Prim.Int#) ->
                 Data.Aeson.Types.Generic.$w$cparseFromTaggedObject
                   @ GHC.Generics.U1
                   @ ('GHC.Generics.MetaCons
                        "FileReadOnly" 'GHC.Generics.PrefixI 'GHC.Types.False)
                   DirectoryServer.$fFromJSONFileLock6
                     `cast`
                   (Sym (Data.Aeson.Types.Generic.N:FromTaggedObject'[0]
                             <GHC.Generics.U1>_N))
                   DirectoryServer.$fFromBSONFileMapping_$s$fConstructorMetaMetaCons
                   @ a
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   w
                   w1
                   ww6
                   ww7
                   ww8) -}
ed1f5e9b5ec2a25ea1099d00d6fbd96a
  $w$dFromTaggedObject1 ::
    (GHC.Base.String -> GHC.Base.String)
    -> (GHC.Base.String -> GHC.Base.String)
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> Data.Aeson.Types.Internal.SumEncoding
    -> GHC.Types.Bool
    -> GHC.Base.String
    -> Data.Aeson.Types.Internal.Object
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "FileUnlocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
               a))
  {- Arity: 11,
     Strictness: <L,U><C(S),U><L,U><L,U><L,U><L,U><L,U><L,U><S,U><S,U><S,U>,
     Inline: [0],
     Unfolding: (\ @ a
                   (ww :: GHC.Base.String -> GHC.Base.String)
                   (ww1 :: GHC.Base.String -> GHC.Base.String)
                   (ww2 :: GHC.Types.Bool)
                   (ww3 :: GHC.Types.Bool)
                   (ww4 :: Data.Aeson.Types.Internal.SumEncoding)
                   (ww5 :: GHC.Types.Bool)
                   (w :: GHC.Base.String)
                   (w1 :: Data.Aeson.Types.Internal.Object)
                   (ww6 :: GHC.Prim.ByteArray#)
                   (ww7 :: GHC.Prim.Int#)
                   (ww8 :: GHC.Prim.Int#) ->
                 Data.Aeson.Types.Generic.$w$cparseFromTaggedObject
                   @ GHC.Generics.U1
                   @ ('GHC.Generics.MetaCons
                        "FileUnlocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                   DirectoryServer.$fFromJSONFileLock6
                     `cast`
                   (Sym (Data.Aeson.Types.Generic.N:FromTaggedObject'[0]
                             <GHC.Generics.U1>_N))
                   DirectoryServer.$fFromBSONFileMapping_$s$fConstructorMetaMetaCons1
                   @ a
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   w
                   w1
                   ww6
                   ww7
                   ww8) -}
5a253497788331e2fddaff3bbab8b836
  $w$dFromTaggedObject2 ::
    (GHC.Base.String -> GHC.Base.String)
    -> (GHC.Base.String -> GHC.Base.String)
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> Data.Aeson.Types.Internal.SumEncoding
    -> GHC.Types.Bool
    -> GHC.Base.String
    -> Data.Aeson.Types.Internal.Object
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "FileLocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
               a))
  {- Arity: 11,
     Strictness: <L,U><C(S),U><L,U><L,U><L,U><L,U><L,U><L,U><S,U><S,U><S,U>,
     Inline: [0],
     Unfolding: (\ @ a
                   (ww :: GHC.Base.String -> GHC.Base.String)
                   (ww1 :: GHC.Base.String -> GHC.Base.String)
                   (ww2 :: GHC.Types.Bool)
                   (ww3 :: GHC.Types.Bool)
                   (ww4 :: Data.Aeson.Types.Internal.SumEncoding)
                   (ww5 :: GHC.Types.Bool)
                   (w :: GHC.Base.String)
                   (w1 :: Data.Aeson.Types.Internal.Object)
                   (ww6 :: GHC.Prim.ByteArray#)
                   (ww7 :: GHC.Prim.Int#)
                   (ww8 :: GHC.Prim.Int#) ->
                 Data.Aeson.Types.Generic.$w$cparseFromTaggedObject
                   @ GHC.Generics.U1
                   @ ('GHC.Generics.MetaCons
                        "FileLocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                   DirectoryServer.$fFromJSONFileLock6
                     `cast`
                   (Sym (Data.Aeson.Types.Generic.N:FromTaggedObject'[0]
                             <GHC.Generics.U1>_N))
                   DirectoryServer.$fFromBSONFileMapping_$s$fConstructorMetaMetaCons2
                   @ a
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   w
                   w1
                   ww6
                   ww7
                   ww8) -}
2e0a6965fbd7f2552f47592d260d9e21
  $w$dGFromBSON ::
    GHC.Prim.Int#
    -> Data.Bson.Document
    -> GHC.Base.Maybe
         ((GHC.Generics.:+:)
            (GHC.Generics.M1
               GHC.Generics.C
               ('GHC.Generics.MetaCons
                  "FileUnlocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1)
            (GHC.Generics.M1
               GHC.Generics.C
               ('GHC.Generics.MetaCons
                  "FileReadOnly" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1)
            a1)
  {- Arity: 2, Strictness: <S,1*U><L,U>, Inline: [0],
     Unfolding: (\ @ a1
                   (ww :: GHC.Prim.Int#)
                   (w :: Data.Bson.Document) ->
                 case ww of ds {
                   DEFAULT
                   -> let {
                        $j :: GHC.Prim.Void#
                              -> GHC.Base.Maybe
                                   ((GHC.Generics.:+:)
                                      (GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "FileUnlocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                                      (GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "FileReadOnly" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                                      a1)
                          {- Arity: 1, Strictness: <L,A> -}
                        = \ (w1 :: GHC.Prim.Void#)[OneShot] ->
                          case Data.Bson.!?_$slook
                                 Data.Bson.Generic.constructorLabel
                                 w of wild {
                            GHC.Base.Nothing
                            -> GHC.Base.Nothing
                                 @ ((GHC.Generics.:+:)
                                      (GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "FileUnlocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                                      (GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "FileReadOnly" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                                      a1)
                            GHC.Base.Just x
                            -> case Data.Bson.cast
                                      @ [GHC.Types.Char]
                                      @ GHC.Base.Maybe
                                      Data.Bson.Generic.$fGFromBSONM12_$s$fVal[]
                                      GHC.Base.$fMonadMaybe
                                      x of wild1 {
                                 GHC.Base.Nothing
                                 -> GHC.Base.Nothing
                                      @ ((GHC.Generics.:+:)
                                           (GHC.Generics.M1
                                              GHC.Generics.C
                                              ('GHC.Generics.MetaCons
                                                 "FileUnlocked"
                                                 'GHC.Generics.PrefixI
                                                 'GHC.Types.False)
                                              GHC.Generics.U1)
                                           (GHC.Generics.M1
                                              GHC.Generics.C
                                              ('GHC.Generics.MetaCons
                                                 "FileReadOnly"
                                                 'GHC.Generics.PrefixI
                                                 'GHC.Types.False)
                                              GHC.Generics.U1)
                                           a1)
                                 GHC.Base.Just x1
                                 -> case GHC.Base.eqString
                                           x1
                                           DirectoryServer.$fFromBSONFileLock8 of wild2 {
                                      GHC.Types.False
                                      -> GHC.Base.Nothing
                                           @ ((GHC.Generics.:+:)
                                                (GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "FileUnlocked"
                                                      'GHC.Generics.PrefixI
                                                      'GHC.Types.False)
                                                   GHC.Generics.U1)
                                                (GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "FileReadOnly"
                                                      'GHC.Generics.PrefixI
                                                      'GHC.Types.False)
                                                   GHC.Generics.U1)
                                                a1)
                                      GHC.Types.True
                                      -> DirectoryServer.$fFromBSONFileLock6 @ a1 } } }
                      } in
                      case Data.Bson.!?_$slook
                             Data.Bson.Generic.constructorLabel
                             w of wild {
                        GHC.Base.Nothing -> $j GHC.Prim.void#
                        GHC.Base.Just x
                        -> case Data.Bson.cast
                                  @ [GHC.Types.Char]
                                  @ GHC.Base.Maybe
                                  Data.Bson.Generic.$fGFromBSONM12_$s$fVal[]
                                  GHC.Base.$fMonadMaybe
                                  x of wild1 {
                             GHC.Base.Nothing -> $j GHC.Prim.void#
                             GHC.Base.Just x1
                             -> case GHC.Base.eqString
                                       x1
                                       DirectoryServer.$fFromBSONFileLock5 of wild2 {
                                  GHC.Types.False -> $j GHC.Prim.void#
                                  GHC.Types.True -> DirectoryServer.$fFromBSONFileLock3 @ a1 } } }
                   0# -> DirectoryServer.$fFromBSONFileLock3 @ a1
                   1# -> DirectoryServer.$fFromBSONFileLock3 @ a1 }) -}
3c2ba257a5ddb3e3149e96c606ab4f0d
  $w$dGFromBSON1 ::
    Data.Bson.Document
    -> GHC.Base.Maybe
         ((GHC.Generics.:*:)
            (GHC.Generics.M1
               GHC.Generics.S
               ('GHC.Generics.MetaSel
                  ('GHC.Base.Just "fileName")
                  'GHC.Generics.NoSourceUnpackedness
                  'GHC.Generics.NoSourceStrictness
                  'GHC.Generics.DecidedLazy)
               (GHC.Generics.Rec0 GHC.IO.FilePath))
            (GHC.Generics.S1
               ('GHC.Generics.MetaSel
                  ('GHC.Base.Just "identity")
                  'GHC.Generics.NoSourceUnpackedness
                  'GHC.Generics.NoSourceStrictness
                  'GHC.Generics.DecidedLazy)
               (GHC.Generics.Rec0 CommonServer.Identity)
             GHC.Generics.:*: GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "lock")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 DirectoryServer.FileLock))
            a1)
  {- Arity: 1, Strictness: <S,U>, Inline: [0],
     Unfolding: (\ @ a1 (w :: Data.Bson.Document) ->
                 case Data.Bson.Generic.$w$cgenericFromBSON
                        @ [GHC.Types.Char]
                        @ ('GHC.Generics.MetaSel
                             ('GHC.Base.Just "fileName")
                             'GHC.Generics.NoSourceUnpackedness
                             'GHC.Generics.NoSourceStrictness
                             'GHC.Generics.DecidedLazy)
                        @ GHC.Generics.R
                        Data.Bson.Generic.$fGFromBSONM12_$s$fVal[]
                        CommonServer.$fFromJSONFile_$s$fSelectorMetaMetaSel
                        @ a1
                        w of wild {
                   GHC.Base.Nothing
                   -> GHC.Base.Nothing
                        @ ((GHC.Generics.:*:)
                             (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "fileName")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 GHC.IO.FilePath))
                             (GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "identity")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 CommonServer.Identity)
                              GHC.Generics.:*: GHC.Generics.S1
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "lock")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.Rec0 DirectoryServer.FileLock))
                             a1)
                   GHC.Base.Just x
                   -> case Data.Bson.Generic.$w$cgenericFromBSON
                             @ CommonServer.Identity
                             @ ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "identity")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                             @ GHC.Generics.R
                             CommonServer.$fFromBSONResponse_$s$fVala
                             DirectoryServer.$fFromBSONFileMapping_$s$fSelectorMetaMetaSel1
                             @ a1
                             w of wild1 {
                        GHC.Base.Nothing
                        -> GHC.Base.Nothing
                             @ ((GHC.Generics.:*:)
                                  (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "fileName")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.Rec0 GHC.IO.FilePath))
                                  (GHC.Generics.S1
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "identity")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.Rec0 CommonServer.Identity)
                                   GHC.Generics.:*: GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "lock")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0 DirectoryServer.FileLock))
                                  a1)
                        GHC.Base.Just x1
                        -> case Data.Bson.Generic.$w$cgenericFromBSON
                                  @ DirectoryServer.FileLock
                                  @ ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "lock")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                  @ GHC.Generics.R
                                  DirectoryServer.$fFromBSONFileMapping_$s$fVala
                                  DirectoryServer.$fFromBSONFileMapping_$s$fSelectorMetaMetaSel
                                  @ a1
                                  w of wild2 {
                             GHC.Base.Nothing
                             -> GHC.Base.Nothing
                                  @ ((GHC.Generics.:*:)
                                       (GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "fileName")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.Rec0 GHC.IO.FilePath))
                                       (GHC.Generics.S1
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "identity")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.Rec0 CommonServer.Identity)
                                        GHC.Generics.:*: GHC.Generics.S1
                                                           ('GHC.Generics.MetaSel
                                                              ('GHC.Base.Just "lock")
                                                              'GHC.Generics.NoSourceUnpackedness
                                                              'GHC.Generics.NoSourceStrictness
                                                              'GHC.Generics.DecidedLazy)
                                                           (GHC.Generics.Rec0
                                                              DirectoryServer.FileLock))
                                       a1)
                             GHC.Base.Just x2
                             -> GHC.Base.Just
                                  @ ((GHC.Generics.:*:)
                                       (GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "fileName")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.Rec0 GHC.IO.FilePath))
                                       (GHC.Generics.S1
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "identity")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.Rec0 CommonServer.Identity)
                                        GHC.Generics.:*: GHC.Generics.S1
                                                           ('GHC.Generics.MetaSel
                                                              ('GHC.Base.Just "lock")
                                                              'GHC.Generics.NoSourceUnpackedness
                                                              'GHC.Generics.NoSourceStrictness
                                                              'GHC.Generics.DecidedLazy)
                                                           (GHC.Generics.Rec0
                                                              DirectoryServer.FileLock))
                                       a1)
                                  (GHC.Generics.:*:
                                     @ (GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "fileName")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.Rec0 GHC.IO.FilePath))
                                     @ (GHC.Generics.S1
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "identity")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.Rec0 CommonServer.Identity)
                                        GHC.Generics.:*: GHC.Generics.S1
                                                           ('GHC.Generics.MetaSel
                                                              ('GHC.Base.Just "lock")
                                                              'GHC.Generics.NoSourceUnpackedness
                                                              'GHC.Generics.NoSourceStrictness
                                                              'GHC.Generics.DecidedLazy)
                                                           (GHC.Generics.Rec0
                                                              DirectoryServer.FileLock))
                                     @ a1
                                     x
                                     (GHC.Generics.:*:
                                        @ (GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "identity")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.Rec0 CommonServer.Identity))
                                        @ (GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "lock")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.Rec0 DirectoryServer.FileLock))
                                        @ a1
                                        x1
                                        x2)) } } }) -}
fb38a4f6bb049c7654e789d92a733de6
  $w$dGFromJSON ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1)
  {- Arity: 1, Strictness: <L,1*U>, Inline: [0],
     Unfolding: (\ @ a1 (w :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser [GHC.Types.Char]
                   = case w of wild {
                       DEFAULT
                       -> Data.Aeson.Types.Class.typeMismatch
                            @ [GHC.Types.Char]
                            DirectoryServer.$fFromJSONFileMapping3
                            wild
                       Data.Aeson.Types.Internal.String txt
                       -> case txt of wild1 { Data.Text.Internal.Text dt dt1 dt2 ->
                          let {
                            a2 :: [GHC.Types.Char]
                            = let {
                                end :: GHC.Prim.Int# = GHC.Prim.+# dt1 dt2
                              } in
                              letrec {
                                $wunfold :: GHC.Prim.Int# -> [GHC.Types.Char]
                                  {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                                = \ (ww :: GHC.Prim.Int#) ->
                                  case GHC.Prim.tagToEnum#
                                         @ GHC.Types.Bool
                                         (GHC.Prim.>=# ww end) of wild2 {
                                    GHC.Types.False
                                    -> case GHC.Prim.indexWord16Array# dt ww of r# { DEFAULT ->
                                       case GHC.Prim.tagToEnum#
                                              @ GHC.Types.Bool
                                              (GHC.Prim.geWord# r# 55296##) of wild3 {
                                         GHC.Types.False
                                         -> GHC.Types.:
                                              @ GHC.Types.Char
                                              (GHC.Types.C# (GHC.Prim.chr# (GHC.Prim.word2Int# r#)))
                                              ($wunfold (GHC.Prim.+# ww 1#))
                                         GHC.Types.True
                                         -> case GHC.Prim.tagToEnum#
                                                   @ GHC.Types.Bool
                                                   (GHC.Prim.leWord# r# 56319##) of wild4 {
                                              GHC.Types.False
                                              -> GHC.Types.:
                                                   @ GHC.Types.Char
                                                   (GHC.Types.C#
                                                      (GHC.Prim.chr# (GHC.Prim.word2Int# r#)))
                                                   ($wunfold (GHC.Prim.+# ww 1#))
                                              GHC.Types.True
                                              -> case GHC.Prim.indexWord16Array#
                                                        dt
                                                        (GHC.Prim.+# ww 1#) of r#1 { DEFAULT ->
                                                 GHC.Types.:
                                                   @ GHC.Types.Char
                                                   (GHC.Types.C#
                                                      (GHC.Prim.chr#
                                                         (GHC.Prim.+#
                                                            (GHC.Prim.+#
                                                               (GHC.Prim.uncheckedIShiftL#
                                                                  (GHC.Prim.-#
                                                                     (GHC.Prim.word2Int# r#)
                                                                     55296#)
                                                                  10#)
                                                               (GHC.Prim.-#
                                                                  (GHC.Prim.word2Int# r#1)
                                                                  56320#))
                                                            65536#)))
                                                   ($wunfold (GHC.Prim.+# ww 2#)) } } } }
                                    GHC.Types.True -> GHC.Types.[] @ GHC.Types.Char }
                              } in
                              $wunfold dt1
                          } in
                          (\ @ (f1 :: * -> *)
                             @ r
                             (_path :: Data.Aeson.Types.Internal.JSONPath)
                             (_kf :: Data.Aeson.Types.Internal.Failure f1 r)
                             (ks :: Data.Aeson.Types.Internal.Success [GHC.Types.Char] f1 r) ->
                           ks a2)
                            `cast`
                          (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                    <[GHC.Types.Char]>_R)) } }
                 } in
                 (\ @ (f1 :: * -> *)
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f1 r)
                    (ks :: Data.Aeson.Types.Internal.Success
                             (GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1) f1 r) ->
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0] <[GHC.Types.Char]>_R)
                    @ f1
                    @ r
                    path
                    kf
                    (\ (a2 :: [GHC.Types.Char]) ->
                     ks
                       a2
                         `cast`
                       (Sym (GHC.Generics.N:K1[0]
                                 <GHC.Generics.R>_P <[GHC.Types.Char]>_R <a1>_P))))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                           <GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1>_R))) -}
897e0af3bb022dcf35e89e8a9de3f5c6
  $w$dGFromJSON1 ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.K1 GHC.Generics.R CommonServer.Identity a1)
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ @ a1 (w :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser CommonServer.Identity
                   = CommonServer.$fFromJSONIdentity_$cparseJSON w
                 } in
                 (\ @ (f1 :: * -> *)
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f1 r)
                    (ks :: Data.Aeson.Types.Internal.Success
                             (GHC.Generics.K1 GHC.Generics.R CommonServer.Identity a1) f1 r) ->
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0] <CommonServer.Identity>_R)
                    @ f1
                    @ r
                    path
                    kf
                    (\ (a2 :: CommonServer.Identity) ->
                     ks
                       a2
                         `cast`
                       (Sym (GHC.Generics.N:K1[0]
                                 <GHC.Generics.R>_P <CommonServer.Identity>_R <a1>_P))))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                           <GHC.Generics.K1 GHC.Generics.R CommonServer.Identity a1>_R))) -}
3c2ba257a5ddb3e3149e96c606ab4f0d
  $w$dGFromJSON2 ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.K1 GHC.Generics.R DirectoryServer.FileLock a1)
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ @ a1 (w :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser
                          (GHC.Generics.M1
                             GHC.Generics.D
                             ('GHC.Generics.MetaData
                                "FileLock"
                                "DirectoryServer"
                                "Gluon-0.1.0.0-2zM8ehVFg6FFhvYw0f6srV"
                                'GHC.Types.False)
                             (GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "FileLocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1
                              GHC.Generics.:+: (GHC.Generics.C1
                                                  ('GHC.Generics.MetaCons
                                                     "FileUnlocked"
                                                     'GHC.Generics.PrefixI
                                                     'GHC.Types.False)
                                                  GHC.Generics.U1
                                                GHC.Generics.:+: GHC.Generics.C1
                                                                   ('GHC.Generics.MetaCons
                                                                      "FileReadOnly"
                                                                      'GHC.Generics.PrefixI
                                                                      'GHC.Types.False)
                                                                   GHC.Generics.U1))
                             GHC.Prim.Any)
                   = DirectoryServer.$fFromJSONFileLock1 w
                 } in
                 (\ @ (f1 :: * -> *)
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f1 r)
                    (ks :: Data.Aeson.Types.Internal.Success
                             (GHC.Generics.K1 GHC.Generics.R DirectoryServer.FileLock a1)
                             f1
                             r) ->
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0]
                       (Sub (Sym (DirectoryServer.Rep_FileLock[0])) <GHC.Prim.Any>_N))
                    @ f1
                    @ r
                    path
                    kf
                    (\ (a2 :: GHC.Generics.Rep
                                DirectoryServer.FileLock GHC.Prim.Any) ->
                     ks
                       (DirectoryServer.$fFromJSONFileLock_$cto @ GHC.Prim.Any a2)
                         `cast`
                       (Sym (GHC.Generics.N:K1[0]
                                 <GHC.Generics.R>_P <DirectoryServer.FileLock>_R <a1>_P))))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                           <GHC.Generics.K1
                              GHC.Generics.R DirectoryServer.FileLock a1>_R))) -}
736e52725d73f222b8be9ff9d98039f9
  $w$dGToBSON ::
    GHC.Prim.Int#
    -> (GHC.Generics.:+:)
         (GHC.Generics.M1
            GHC.Generics.C
            ('GHC.Generics.MetaCons
               "FileLocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
            GHC.Generics.U1)
         (GHC.Generics.C1
            ('GHC.Generics.MetaCons
               "FileUnlocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
            GHC.Generics.U1
          GHC.Generics.:+: GHC.Generics.C1
                             ('GHC.Generics.MetaCons
                                "FileReadOnly" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             GHC.Generics.U1)
         a1
    -> Data.Bson.Document
  {- Arity: 2, Strictness: <S,U><S,1*U>, Inline: [0],
     Unfolding: (\ @ a1
                   (ww :: GHC.Prim.Int#)
                   (w :: (GHC.Generics.:+:)
                           (GHC.Generics.M1
                              GHC.Generics.C
                              ('GHC.Generics.MetaCons
                                 "FileLocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                              GHC.Generics.U1)
                           (GHC.Generics.C1
                              ('GHC.Generics.MetaCons
                                 "FileUnlocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                              GHC.Generics.U1
                            GHC.Generics.:+: GHC.Generics.C1
                                               ('GHC.Generics.MetaCons
                                                  "FileReadOnly"
                                                  'GHC.Generics.PrefixI
                                                  'GHC.Types.False)
                                               GHC.Generics.U1)
                           a1) ->
                 case w of wild {
                   GHC.Generics.L1 x
                   -> Data.Bson.Generic.$w$cgenericToBSON1
                        @ GHC.Generics.U1
                        @ ('GHC.Generics.MetaCons
                             "FileLocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        Data.Bson.Generic.$fGToBSONU1_$cgenericToBSON
                          `cast`
                        (Sym (Data.Bson.Generic.N:GToBSON[0] <GHC.Generics.U1>_N))
                        DirectoryServer.$fFromBSONFileMapping_$s$fConstructorMetaMetaCons2
                        @ a1
                        ww
                        x
                   GHC.Generics.R1 x
                   -> case x of wild1 {
                        GHC.Generics.L1 x1
                        -> Data.Bson.Generic.$w$cgenericToBSON1
                             @ GHC.Generics.U1
                             @ ('GHC.Generics.MetaCons
                                  "FileUnlocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             Data.Bson.Generic.$fGToBSONU1_$cgenericToBSON
                               `cast`
                             (Sym (Data.Bson.Generic.N:GToBSON[0] <GHC.Generics.U1>_N))
                             DirectoryServer.$fFromBSONFileMapping_$s$fConstructorMetaMetaCons1
                             @ a1
                             ww
                             x1
                        GHC.Generics.R1 x1
                        -> Data.Bson.Generic.$w$cgenericToBSON1
                             @ GHC.Generics.U1
                             @ ('GHC.Generics.MetaCons
                                  "FileReadOnly" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             Data.Bson.Generic.$fGToBSONU1_$cgenericToBSON
                               `cast`
                             (Sym (Data.Bson.Generic.N:GToBSON[0] <GHC.Generics.U1>_N))
                             DirectoryServer.$fFromBSONFileMapping_$s$fConstructorMetaMetaCons
                             @ a1
                             ww
                             x1 } }) -}
3c2ba257a5ddb3e3149e96c606ab4f0d
  $w$dGToBSON1 ::
    GHC.Generics.M1
      GHC.Generics.S
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "fileName")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
      (GHC.Generics.Rec0 GHC.IO.FilePath)
      a1
    -> (GHC.Generics.:*:)
         (GHC.Generics.S1
            ('GHC.Generics.MetaSel
               ('GHC.Base.Just "identity")
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.Rec0 CommonServer.Identity))
         (GHC.Generics.S1
            ('GHC.Generics.MetaSel
               ('GHC.Base.Just "lock")
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.Rec0 DirectoryServer.FileLock))
         a1
    -> [Data.Bson.Field]
  {- Arity: 2, Strictness: <L,1*U><L,1*U(1*U(U,U,U),1*U)>,
     Inline: [0],
     Unfolding: (\ @ a1
                   (ww :: GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "fileName")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.Rec0 GHC.IO.FilePath)
                            a1)
                   (ww1 :: (GHC.Generics.:*:)
                             (GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "identity")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 CommonServer.Identity))
                             (GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "lock")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 DirectoryServer.FileLock))
                             a1) ->
                 GHC.Base.++
                   @ Data.Bson.Field
                   (GHC.Types.:
                      @ Data.Bson.Field
                      (case GHC.Magic.runRW#
                              @ 'GHC.Types.PtrRepLifted
                              @ Data.Text.Internal.Text
                              DirectoryServer.$fToBSONFileMapping9 of ds1 { (#,#) ipv ipv1 ->
                       case ipv1 of dt1 { Data.Text.Internal.Text ipv2 ipv3 ipv4 ->
                       Data.Bson.:=
                         dt1
                         (Data.Bson.String
                            (case GHC.Magic.runRW#
                                    @ 'GHC.Types.PtrRepLifted
                                    @ Data.Text.Internal.Text
                                    (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                     case GHC.Prim.newByteArray#
                                            @ GHC.Prim.RealWorld
                                            8#
                                            s1 of ds2 { (#,#) ipv7 ipv8 ->
                                     Data.Bson.$wouter
                                       (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv8)
                                       Data.Bson.$fValChar2
                                       ww
                                         `cast`
                                       (Trans
                                            (GHC.Generics.N:M1[0]
                                                 <GHC.Generics.S>_P
                                                 <'GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "fileName")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy>_P
                                                 <GHC.Generics.K1
                                                    GHC.Generics.R [GHC.Types.Char]>_R <a1>_N)
                                            (GHC.Generics.N:K1[0]
                                                 <GHC.Generics.R>_P <[GHC.Types.Char]>_R <a1>_P))
                                       0#
                                       ipv7 }) of ds2 { (#,#) ipv7 ipv8 ->
                             ipv8 })) } })
                      (GHC.Types.[] @ Data.Bson.Field))
                   (case ww1 of wild { GHC.Generics.:*: x y ->
                    GHC.Base.++
                      @ Data.Bson.Field
                      (GHC.Types.:
                         @ Data.Bson.Field
                         (case GHC.Magic.runRW#
                                 @ 'GHC.Types.PtrRepLifted
                                 @ Data.Text.Internal.Text
                                 DirectoryServer.$fToBSONFileMapping8 of ds1 { (#,#) ipv ipv1 ->
                          case ipv1 of dt1 { Data.Text.Internal.Text ipv2 ipv3 ipv4 ->
                          Data.Bson.:=
                            dt1
                            (Data.Bson.Doc
                               (Data.Bson.Generic.$w$cgenericToBSON1
                                  @ (GHC.Generics.S1
                                       ('GHC.Generics.MetaSel
                                          ('GHC.Base.Just "address")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy)
                                       (GHC.Generics.Rec0 GHC.Base.String)
                                     GHC.Generics.:*: (GHC.Generics.S1
                                                         ('GHC.Generics.MetaSel
                                                            ('GHC.Base.Just "port")
                                                            'GHC.Generics.NoSourceUnpackedness
                                                            'GHC.Generics.NoSourceStrictness
                                                            'GHC.Generics.DecidedLazy)
                                                         (GHC.Generics.Rec0 GHC.Base.String)
                                                       GHC.Generics.:*: GHC.Generics.S1
                                                                          ('GHC.Generics.MetaSel
                                                                             ('GHC.Base.Just
                                                                                "serverType")
                                                                             'GHC.Generics.NoSourceUnpackedness
                                                                             'GHC.Generics.NoSourceStrictness
                                                                             'GHC.Generics.DecidedLazy)
                                                                          (GHC.Generics.Rec0
                                                                             CommonServer.ServerType)))
                                  @ ('GHC.Generics.MetaCons
                                       "Identity" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                  CommonServer.$fFromBSONResponse20
                                    `cast`
                                  (Sym (Data.Bson.Generic.N:GToBSON[0]
                                            <GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "address")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.Rec0 GHC.Base.String)
                                             GHC.Generics.:*: (GHC.Generics.S1
                                                                 ('GHC.Generics.MetaSel
                                                                    ('GHC.Base.Just "port")
                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                    'GHC.Generics.NoSourceStrictness
                                                                    'GHC.Generics.DecidedLazy)
                                                                 (GHC.Generics.Rec0 GHC.Base.String)
                                                               GHC.Generics.:*: GHC.Generics.S1
                                                                                  ('GHC.Generics.MetaSel
                                                                                     ('GHC.Base.Just
                                                                                        "serverType")
                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                     'GHC.Generics.DecidedLazy)
                                                                                  (GHC.Generics.Rec0
                                                                                     CommonServer.ServerType))>_N))
                                  CommonServer.$fFromBSONResponse_$s$fConstructorMetaMetaCons
                                  @ GHC.Prim.Any
                                  1#
                                  (case x `cast`
                                        (Trans
                                             (GHC.Generics.N:M1[0]
                                                  <GHC.Generics.S>_P
                                                  <'GHC.Generics.MetaSel
                                                     ('GHC.Base.Just "identity")
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy>_P
                                                  <GHC.Generics.K1
                                                     GHC.Generics.R CommonServer.Identity>_R <a1>_N)
                                             (GHC.Generics.N:K1[0]
                                                  <GHC.Generics.R>_P
                                                  <CommonServer.Identity>_R
                                                  <a1>_P)) of wild1 { CommonServer.Identity g1 g2 g3 ->
                                   (GHC.Generics.:*:
                                      @ (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "address")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
                                      @ (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "port")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                         GHC.Generics.:*: GHC.Generics.M1
                                                            GHC.Generics.S
                                                            ('GHC.Generics.MetaSel
                                                               ('GHC.Base.Just "serverType")
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy)
                                                            (GHC.Generics.K1
                                                               GHC.Generics.R
                                                               CommonServer.ServerType))
                                      @ GHC.Prim.Any
                                      g1
                                        `cast`
                                      (Trans
                                           (Sym (GHC.Generics.N:K1[0]
                                                     <GHC.Generics.R>_P
                                                     <GHC.Base.String>_R
                                                     <GHC.Prim.Any>_P))
                                           (Sym (GHC.Generics.N:M1[0]
                                                     <GHC.Generics.S>_P
                                                     <'GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "address")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy>_P
                                                     <GHC.Generics.K1
                                                        GHC.Generics.R
                                                        GHC.Base.String>_R) <GHC.Prim.Any>_N))
                                      (GHC.Generics.:*:
                                         @ (GHC.Generics.M1
                                              GHC.Generics.S
                                              ('GHC.Generics.MetaSel
                                                 ('GHC.Base.Just "port")
                                                 'GHC.Generics.NoSourceUnpackedness
                                                 'GHC.Generics.NoSourceStrictness
                                                 'GHC.Generics.DecidedLazy)
                                              (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
                                         @ (GHC.Generics.M1
                                              GHC.Generics.S
                                              ('GHC.Generics.MetaSel
                                                 ('GHC.Base.Just "serverType")
                                                 'GHC.Generics.NoSourceUnpackedness
                                                 'GHC.Generics.NoSourceStrictness
                                                 'GHC.Generics.DecidedLazy)
                                              (GHC.Generics.K1
                                                 GHC.Generics.R CommonServer.ServerType))
                                         @ GHC.Prim.Any
                                         g2
                                           `cast`
                                         (Trans
                                              (Sym (GHC.Generics.N:K1[0]
                                                        <GHC.Generics.R>_P
                                                        <GHC.Base.String>_R
                                                        <GHC.Prim.Any>_P))
                                              (Sym (GHC.Generics.N:M1[0]
                                                        <GHC.Generics.S>_P
                                                        <'GHC.Generics.MetaSel
                                                           ('GHC.Base.Just "port")
                                                           'GHC.Generics.NoSourceUnpackedness
                                                           'GHC.Generics.NoSourceStrictness
                                                           'GHC.Generics.DecidedLazy>_P
                                                        <GHC.Generics.K1
                                                           GHC.Generics.R
                                                           GHC.Base.String>_R) <GHC.Prim.Any>_N))
                                         g3
                                           `cast`
                                         (Trans
                                              (Sym (GHC.Generics.N:K1[0]
                                                        <GHC.Generics.R>_P
                                                        <CommonServer.ServerType>_R
                                                        <GHC.Prim.Any>_P))
                                              (Sym (GHC.Generics.N:M1[0]
                                                        <GHC.Generics.S>_P
                                                        <'GHC.Generics.MetaSel
                                                           ('GHC.Base.Just "serverType")
                                                           'GHC.Generics.NoSourceUnpackedness
                                                           'GHC.Generics.NoSourceStrictness
                                                           'GHC.Generics.DecidedLazy>_P
                                                        <GHC.Generics.K1
                                                           GHC.Generics.R
                                                           CommonServer.ServerType>_R) <GHC.Prim.Any>_N))))
                                     `cast`
                                   (Sym (GHC.Generics.N:M1[0]
                                             <GHC.Generics.C>_P
                                             <'GHC.Generics.MetaCons
                                                "Identity" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                             <GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "address")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                              GHC.Generics.:*: (GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just "port")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R GHC.Base.String)
                                                                GHC.Generics.:*: GHC.Generics.M1
                                                                                   GHC.Generics.S
                                                                                   ('GHC.Generics.MetaSel
                                                                                      ('GHC.Base.Just
                                                                                         "serverType")
                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                      'GHC.Generics.DecidedLazy)
                                                                                   (GHC.Generics.K1
                                                                                      GHC.Generics.R
                                                                                      CommonServer.ServerType))>_R) <GHC.Prim.Any>_N) }))) } })
                         (GHC.Types.[] @ Data.Bson.Field))
                      (GHC.Types.:
                         @ Data.Bson.Field
                         (case GHC.Magic.runRW#
                                 @ 'GHC.Types.PtrRepLifted
                                 @ Data.Text.Internal.Text
                                 DirectoryServer.$fToBSONFileMapping7 of ds1 { (#,#) ipv ipv1 ->
                          case ipv1 of dt1 { Data.Text.Internal.Text ipv2 ipv3 ipv4 ->
                          Data.Bson.:=
                            dt1
                            (Data.Bson.Doc
                               (case y `cast`
                                     (Trans
                                          (GHC.Generics.N:M1[0]
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "lock")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R DirectoryServer.FileLock>_R <a1>_N)
                                          (GHC.Generics.N:K1[0]
                                               <GHC.Generics.R>_P
                                               <DirectoryServer.FileLock>_R
                                               <a1>_P)) of wild1 {
                                  DirectoryServer.FileLocked
                                  -> Data.Bson.Generic.$w$cgenericToBSON1
                                       @ GHC.Generics.U1
                                       @ ('GHC.Generics.MetaCons
                                            "FileLocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                       Data.Bson.Generic.$fGToBSONU1_$cgenericToBSON
                                         `cast`
                                       (Sym (Data.Bson.Generic.N:GToBSON[0] <GHC.Generics.U1>_N))
                                       DirectoryServer.$fFromBSONFileMapping_$s$fConstructorMetaMetaCons2
                                       @ GHC.Prim.Any
                                       3#
                                       (GHC.Generics.U1 @ GHC.Prim.Any)
                                         `cast`
                                       (Sym (GHC.Generics.N:M1[0]
                                                 <GHC.Generics.C>_P
                                                 <'GHC.Generics.MetaCons
                                                    "FileLocked"
                                                    'GHC.Generics.PrefixI
                                                    'GHC.Types.False>_P
                                                 <GHC.Generics.U1>_R) <GHC.Prim.Any>_N)
                                  DirectoryServer.FileUnlocked
                                  -> Data.Bson.Generic.$w$cgenericToBSON1
                                       @ GHC.Generics.U1
                                       @ ('GHC.Generics.MetaCons
                                            "FileUnlocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                       Data.Bson.Generic.$fGToBSONU1_$cgenericToBSON
                                         `cast`
                                       (Sym (Data.Bson.Generic.N:GToBSON[0] <GHC.Generics.U1>_N))
                                       DirectoryServer.$fFromBSONFileMapping_$s$fConstructorMetaMetaCons1
                                       @ GHC.Prim.Any
                                       3#
                                       (GHC.Generics.U1 @ GHC.Prim.Any)
                                         `cast`
                                       (Sym (GHC.Generics.N:M1[0]
                                                 <GHC.Generics.C>_P
                                                 <'GHC.Generics.MetaCons
                                                    "FileUnlocked"
                                                    'GHC.Generics.PrefixI
                                                    'GHC.Types.False>_P
                                                 <GHC.Generics.U1>_R) <GHC.Prim.Any>_N)
                                  DirectoryServer.FileReadOnly
                                  -> Data.Bson.Generic.$w$cgenericToBSON1
                                       @ GHC.Generics.U1
                                       @ ('GHC.Generics.MetaCons
                                            "FileReadOnly" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                       Data.Bson.Generic.$fGToBSONU1_$cgenericToBSON
                                         `cast`
                                       (Sym (Data.Bson.Generic.N:GToBSON[0] <GHC.Generics.U1>_N))
                                       DirectoryServer.$fFromBSONFileMapping_$s$fConstructorMetaMetaCons
                                       @ GHC.Prim.Any
                                       3#
                                       (GHC.Generics.U1 @ GHC.Prim.Any)
                                         `cast`
                                       (Sym (GHC.Generics.N:M1[0]
                                                 <GHC.Generics.C>_P
                                                 <'GHC.Generics.MetaCons
                                                    "FileReadOnly"
                                                    'GHC.Generics.PrefixI
                                                    'GHC.Types.False>_P
                                                 <GHC.Generics.U1>_R) <GHC.Prim.Any>_N) })) } })
                         (GHC.Types.[] @ Data.Bson.Field)) })) -}
c540f6346c74951a0fbe02e61cf081cb
  $w$dGToJSON ::
    GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1
    -> (# Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0],
     Unfolding: (\ @ a1
                   (w :: GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1) ->
                 case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.newByteArray#
                                @ GHC.Prim.RealWorld
                                8#
                                s1 of ds1 { (#,#) ipv ipv1 ->
                         DirectoryServer.$wouter
                           (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                           DirectoryServer.$fToJSONFileMapping5
                           w `cast`
                           (GHC.Generics.N:K1[0]
                                <GHC.Generics.R>_P <[GHC.Types.Char]>_R <a1>_P)
                           0#
                           ipv }) of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of dt { Data.Text.Internal.Text ipv2 ipv3 ipv4 ->
                 (# dt #) } }) -}
3c2ba257a5ddb3e3149e96c606ab4f0d
  $w$dRecordToPairs ::
    Data.Aeson.Types.Internal.Options
    -> GHC.Generics.M1
         GHC.Generics.S
         ('GHC.Generics.MetaSel
            ('GHC.Base.Just "fileName")
            'GHC.Generics.NoSourceUnpackedness
            'GHC.Generics.NoSourceStrictness
            'GHC.Generics.DecidedLazy)
         (GHC.Generics.Rec0 GHC.IO.FilePath)
         a1
    -> (GHC.Generics.:*:)
         (GHC.Generics.S1
            ('GHC.Generics.MetaSel
               ('GHC.Base.Just "identity")
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.Rec0 CommonServer.Identity))
         (GHC.Generics.S1
            ('GHC.Generics.MetaSel
               ('GHC.Base.Just "lock")
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.Rec0 DirectoryServer.FileLock))
         a1
    -> [(Data.Text.Internal.Text, Data.Aeson.Types.Internal.Value)]
    -> [(Data.Text.Internal.Text, Data.Aeson.Types.Internal.Value)]
  {- Arity: 4, Strictness: <L,U(U,U,U,U,U,U)><L,U><L,1*U(U,U)><L,U>,
     Inline: [0],
     Unfolding: (\ @ a1
                   (w :: Data.Aeson.Types.Internal.Options)
                   (ww :: GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "fileName")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.Rec0 GHC.IO.FilePath)
                            a1)
                   (ww1 :: (GHC.Generics.:*:)
                             (GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "identity")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 CommonServer.Identity))
                             (GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "lock")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 DirectoryServer.FileLock))
                             a1)
                   (w1 :: [(Data.Text.Internal.Text,
                            Data.Aeson.Types.Internal.Value)]) ->
                 Data.Aeson.Types.Generic.$fRecordToPairsM2
                   @ ('GHC.Generics.MetaSel
                        ('GHC.Base.Just "fileName")
                        'GHC.Generics.NoSourceUnpackedness
                        'GHC.Generics.NoSourceStrictness
                        'GHC.Generics.DecidedLazy)
                   @ (GHC.Generics.K1 GHC.Generics.R GHC.IO.FilePath)
                   CommonServer.$fFromJSONFile_$s$fSelectorMetaMetaSel
                   DirectoryServer.$fToJSONFileMapping4
                     `cast`
                   (Sym (Data.Aeson.Types.Class.N:GToJSON[0]
                             <GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char]>_N))
                   @ a1
                   w
                   ww
                   (case ww1 of wild { GHC.Generics.:*: a2 b1 ->
                    Data.Aeson.Types.Generic.$fRecordToPairsM2
                      @ ('GHC.Generics.MetaSel
                           ('GHC.Base.Just "identity")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy)
                      @ (GHC.Generics.K1 GHC.Generics.R CommonServer.Identity)
                      DirectoryServer.$fFromBSONFileMapping_$s$fSelectorMetaMetaSel1
                      DirectoryServer.$fToJSONFileMapping3
                        `cast`
                      (Trans
                           (forall (a4 :: <*>_N).
                            <Data.Aeson.Types.Internal.Options>_R
                            ->_R <GHC.Generics.K1 GHC.Generics.R CommonServer.Identity a4>_R
                            ->_R Data.Aeson.Types.Generic.N:Tagged[0]
                                     <Data.Aeson.Types.Generic.True>_P
                                     <Data.Aeson.Types.Internal.Value>_R)
                           (Sym (Data.Aeson.Types.Class.N:GToJSON[0]
                                     <GHC.Generics.K1 GHC.Generics.R CommonServer.Identity>_N)))
                      @ a1
                      w
                      a2
                      (Data.Aeson.Types.Generic.$fRecordToPairsM2
                         @ ('GHC.Generics.MetaSel
                              ('GHC.Base.Just "lock")
                              'GHC.Generics.NoSourceUnpackedness
                              'GHC.Generics.NoSourceStrictness
                              'GHC.Generics.DecidedLazy)
                         @ (GHC.Generics.K1 GHC.Generics.R DirectoryServer.FileLock)
                         DirectoryServer.$fFromBSONFileMapping_$s$fSelectorMetaMetaSel
                         DirectoryServer.$fToJSONFileMapping2
                           `cast`
                         (Trans
                              (forall (a4 :: <*>_N).
                               <Data.Aeson.Types.Internal.Options>_R
                               ->_R <GHC.Generics.K1 GHC.Generics.R DirectoryServer.FileLock a4>_R
                               ->_R Data.Aeson.Types.Generic.N:Tagged[0]
                                        <Data.Aeson.Types.Generic.True>_P
                                        <Data.Aeson.Types.Internal.Value>_R)
                              (Sym (Data.Aeson.Types.Class.N:GToJSON[0]
                                        <GHC.Generics.K1
                                           GHC.Generics.R DirectoryServer.FileLock>_N)))
                         @ a1
                         w
                         b1
                         w1) })) -}
61660c0a498ea4ad5e23b8ebee675195
  $w$dSumFromString ::
    (GHC.Base.String -> GHC.Base.String)
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Base.Maybe
         ((GHC.Generics.:+:)
            (GHC.Generics.M1
               GHC.Generics.C
               ('GHC.Generics.MetaCons
                  "FileLocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "FileUnlocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
             GHC.Generics.:+: GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "FileReadOnly" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1)
            a1)
  {- Arity: 4, Strictness: <C(S),C(U)><S,U><S,U><S,U>, Inline: [0],
     Unfolding: (\ @ a1
                   (ww :: GHC.Base.String -> GHC.Base.String)
                   (ww1 :: GHC.Prim.ByteArray#)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 case Data.Aeson.Types.Generic.$w$cparseSumFromString
                        @ ('GHC.Generics.MetaCons
                             "FileLocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        DirectoryServer.$fFromBSONFileMapping_$s$fConstructorMetaMetaCons2
                        @ a1
                        ww
                        ww1
                        ww2
                        ww3 of wild {
                   GHC.Base.Nothing
                   -> case Data.Aeson.Types.Generic.$w$cparseSumFromString
                             @ ('GHC.Generics.MetaCons
                                  "FileUnlocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             DirectoryServer.$fFromBSONFileMapping_$s$fConstructorMetaMetaCons1
                             @ a1
                             ww
                             ww1
                             ww2
                             ww3 of wild1 {
                        GHC.Base.Nothing
                        -> case Data.Aeson.Types.Generic.$w$cparseSumFromString
                                  @ ('GHC.Generics.MetaCons
                                       "FileReadOnly" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                  DirectoryServer.$fFromBSONFileMapping_$s$fConstructorMetaMetaCons
                                  @ a1
                                  ww
                                  ww1
                                  ww2
                                  ww3 of wild2 {
                             GHC.Base.Nothing
                             -> GHC.Base.Nothing
                                  @ ((GHC.Generics.:+:)
                                       (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "FileLocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1)
                                       (GHC.Generics.C1
                                          ('GHC.Generics.MetaCons
                                             "FileUnlocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: GHC.Generics.C1
                                                           ('GHC.Generics.MetaCons
                                                              "FileReadOnly"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           GHC.Generics.U1)
                                       a1)
                             GHC.Base.Just x
                             -> GHC.Base.Just
                                  @ ((GHC.Generics.:+:)
                                       (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "FileLocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1)
                                       (GHC.Generics.C1
                                          ('GHC.Generics.MetaCons
                                             "FileUnlocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: GHC.Generics.C1
                                                           ('GHC.Generics.MetaCons
                                                              "FileReadOnly"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           GHC.Generics.U1)
                                       a1)
                                  (GHC.Generics.R1
                                     @ (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "FileLocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1)
                                     @ (GHC.Generics.C1
                                          ('GHC.Generics.MetaCons
                                             "FileUnlocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: GHC.Generics.C1
                                                           ('GHC.Generics.MetaCons
                                                              "FileReadOnly"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           GHC.Generics.U1)
                                     @ a1
                                     (GHC.Generics.R1
                                        @ (GHC.Generics.M1
                                             GHC.Generics.C
                                             ('GHC.Generics.MetaCons
                                                "FileUnlocked"
                                                'GHC.Generics.PrefixI
                                                'GHC.Types.False)
                                             GHC.Generics.U1)
                                        @ (GHC.Generics.M1
                                             GHC.Generics.C
                                             ('GHC.Generics.MetaCons
                                                "FileReadOnly"
                                                'GHC.Generics.PrefixI
                                                'GHC.Types.False)
                                             GHC.Generics.U1)
                                        @ a1
                                        x)) }
                        GHC.Base.Just x
                        -> GHC.Base.Just
                             @ ((GHC.Generics.:+:)
                                  (GHC.Generics.M1
                                     GHC.Generics.C
                                     ('GHC.Generics.MetaCons
                                        "FileLocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     GHC.Generics.U1)
                                  (GHC.Generics.C1
                                     ('GHC.Generics.MetaCons
                                        "FileUnlocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     GHC.Generics.U1
                                   GHC.Generics.:+: GHC.Generics.C1
                                                      ('GHC.Generics.MetaCons
                                                         "FileReadOnly"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1)
                                  a1)
                             (GHC.Generics.R1
                                @ (GHC.Generics.M1
                                     GHC.Generics.C
                                     ('GHC.Generics.MetaCons
                                        "FileLocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     GHC.Generics.U1)
                                @ (GHC.Generics.C1
                                     ('GHC.Generics.MetaCons
                                        "FileUnlocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     GHC.Generics.U1
                                   GHC.Generics.:+: GHC.Generics.C1
                                                      ('GHC.Generics.MetaCons
                                                         "FileReadOnly"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1)
                                @ a1
                                (GHC.Generics.L1
                                   @ (GHC.Generics.M1
                                        GHC.Generics.C
                                        ('GHC.Generics.MetaCons
                                           "FileUnlocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                        GHC.Generics.U1)
                                   @ (GHC.Generics.M1
                                        GHC.Generics.C
                                        ('GHC.Generics.MetaCons
                                           "FileReadOnly" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                        GHC.Generics.U1)
                                   @ a1
                                   x)) }
                   GHC.Base.Just x
                   -> GHC.Base.Just
                        @ ((GHC.Generics.:+:)
                             (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "FileLocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1)
                             (GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "FileUnlocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1
                              GHC.Generics.:+: GHC.Generics.C1
                                                 ('GHC.Generics.MetaCons
                                                    "FileReadOnly"
                                                    'GHC.Generics.PrefixI
                                                    'GHC.Types.False)
                                                 GHC.Generics.U1)
                             a1)
                        (GHC.Generics.L1
                           @ (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "FileLocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1)
                           @ (GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "FileUnlocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1
                              GHC.Generics.:+: GHC.Generics.C1
                                                 ('GHC.Generics.MetaCons
                                                    "FileReadOnly"
                                                    'GHC.Generics.PrefixI
                                                    'GHC.Types.False)
                                                 GHC.Generics.U1)
                           @ a1
                           x) }) -}
b753359c0adacd3b698911aa206e3801
  $wdownloadFromFileServer ::
    GHC.Base.String
    -> CommonServer.Identity
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, CommonServer.File #)
  {- Arity: 3, Strictness: <L,U><L,U(1*U,1*U,A)><S,U>, Inline: [0],
     Unfolding: (\ (w :: GHC.Base.String)
                   (w1 :: CommonServer.Identity)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case CommonServer.logConnection1
                        DirectoryServer.closeFile10
                        DirectoryServer.closeFile17
                        DirectoryServer.downloadFromFileServer3
                        w2 of ds1 { (#,#) ipv ipv1 ->
                 case Network.HTTP.Client.Manager.$wnewManager
                        Network.HTTP.Client.Manager.defaultManagerSettings18
                        Network.HTTP.Client.Manager.defaultManagerSettings15
                          `cast`
                        (Sym (GHC.Types.N:IO[0]
                                  <GHC.Base.Maybe Network.Socket.Types.HostAddress
                                   -> GHC.Base.String
                                   -> GHC.Types.Int
                                   -> GHC.Types.IO Network.HTTP.Client.Types.Connection>_R))
                        Network.HTTP.Client.Manager.defaultManagerSettings14
                          `cast`
                        (Sym (GHC.Types.N:IO[0]
                                  <GHC.Base.Maybe Network.Socket.Types.HostAddress
                                   -> GHC.Base.String
                                   -> GHC.Types.Int
                                   -> GHC.Types.IO Network.HTTP.Client.Types.Connection>_R))
                        Network.HTTP.Client.Manager.defaultManagerSettings11
                          `cast`
                        (Sym (GHC.Types.N:IO[0]
                                  <Data.ByteString.Internal.ByteString
                                   -> (Network.HTTP.Client.Types.Connection -> GHC.Types.IO ())
                                   -> GHC.Base.String
                                   -> GHC.Base.Maybe Network.Socket.Types.HostAddress
                                   -> GHC.Base.String
                                   -> GHC.Types.Int
                                   -> GHC.Types.IO Network.HTTP.Client.Types.Connection>_R))
                        Network.HTTP.Client.Manager.defaultManagerSettings9
                        Network.HTTP.Client.Manager.defaultManagerSettings8
                        Network.HTTP.Client.Manager.defaultManagerSettings6
                          `cast`
                        (forall (a :: <*>_N).
                         <GHC.Types.IO a>_R ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                        Network.HTTP.Client.Manager.defaultManagerSettings5
                        (GHC.Base.returnIO1 @ Network.HTTP.Client.Types.Request)
                          `cast`
                        (<Network.HTTP.Client.Types.Request>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Network.HTTP.Client.Types.Request>_R))
                        Network.HTTP.Client.Manager.defaultManagerSettings1
                          `cast`
                        (Trans
                             (<GHC.Types.Bool>_R
                              ->_R Sym (GHC.Types.N:IO[0]
                                            <Network.HTTP.Client.Types.Request
                                             -> Network.HTTP.Client.Types.Request>_R))
                             (Sym (Network.HTTP.Client.Types.N:ProxyOverride[0])))
                        Network.HTTP.Client.Manager.defaultManagerSettings1
                          `cast`
                        (Trans
                             (<GHC.Types.Bool>_R
                              ->_R Sym (GHC.Types.N:IO[0]
                                            <Network.HTTP.Client.Types.Request
                                             -> Network.HTTP.Client.Types.Request>_R))
                             (Sym (Network.HTTP.Client.Types.N:ProxyOverride[0])))
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ((CommonServerApi.$wfileClientDownload w)
                         `cast`
                       (Trans
                            (Sub (Servant.Client.D:R:ClientTYPEVerb2[0]
                                      <Network.HTTP.Types.Method.StdMethod>_N
                                      <CommonServer.File>_N
                                      <'Network.HTTP.Types.Method.POST>_N
                                      <'[Servant.API.ContentTypes.JSON]>_N
                                      <200>_N))
                            (Trans
                                 (Servant.Common.Req.N:ClientM[0] <CommonServer.File>_N)
                                 (Control.Monad.Trans.Reader.N:ReaderT[0]
                                      <*>_N
                                      <Servant.Common.Req.ClientEnv>_R
                                      <Control.Monad.Trans.Except.ExceptT
                                         Servant.Common.Req.ServantError GHC.Types.IO>_R
                                      <CommonServer.File>_N)))
                         (Servant.Common.Req.ClientEnv
                            ipv3
                            (Servant.Common.BaseUrl.BaseUrl
                               Servant.Common.BaseUrl.Http
                               (CommonServer.address w1)
                               (case Text.Read.readEither6
                                       @ GHC.Types.Int
                                       (Text.ParserCombinators.ReadP.run
                                          @ GHC.Types.Int
                                          DirectoryServer.closeFile15
                                          (case w1 of wild { CommonServer.Identity ds3 ds4 ds5 ->
                                           ds4 })) of wild {
                                  [] -> DirectoryServer.closeFile14
                                  : x ds
                                  -> case ds of wild1 {
                                       [] -> x : ipv4 ipv5 -> DirectoryServer.closeFile13 } })
                               (GHC.Types.[] @ GHC.Types.Char))))
                        `cast`
                      (Trans
                           (Control.Monad.Trans.Except.N:ExceptT[0]
                                <Servant.Common.Req.ServantError>_N
                                <GHC.Types.IO>_R
                                <CommonServer.File>_N)
                           (GHC.Types.N:IO[0]
                                <Data.Either.Either
                                   Servant.Common.Req.ServantError CommonServer.File>_R))
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case ipv5 of wild {
                   Data.Either.Left err
                   -> (# ipv4, DirectoryServer.downloadFromFileServer2 #)
                   Data.Either.Right response' -> (# ipv4, response' #) } } } }) -}
69ada34c1c7b828de694d88229fdfc5b
  $wg ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "FileLocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.C1
         ('GHC.Generics.MetaCons
            "FileUnlocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: GHC.Generics.C1
                          ('GHC.Generics.MetaCons
                             "FileReadOnly" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          GHC.Generics.U1)
      GHC.Prim.Any
    -> (# Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0],
     Unfolding: (\ (w :: (GHC.Generics.:+:)
                           (GHC.Generics.M1
                              GHC.Generics.C
                              ('GHC.Generics.MetaCons
                                 "FileLocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                              GHC.Generics.U1)
                           (GHC.Generics.C1
                              ('GHC.Generics.MetaCons
                                 "FileUnlocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                              GHC.Generics.U1
                            GHC.Generics.:+: GHC.Generics.C1
                                               ('GHC.Generics.MetaCons
                                                  "FileReadOnly"
                                                  'GHC.Generics.PrefixI
                                                  'GHC.Types.False)
                                               GHC.Generics.U1)
                           GHC.Prim.Any) ->
                 case case w of wild {
                        GHC.Generics.L1 x -> DirectoryServer.$fFromBSONFileLock2
                        GHC.Generics.R1 x
                        -> case x of wild1 {
                             GHC.Generics.L1 x1 -> DirectoryServer.$fFromBSONFileLock5
                             GHC.Generics.R1 x1
                             -> DirectoryServer.$fFromBSONFileLock8 } } of dt { DEFAULT ->
                 case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.newByteArray#
                                @ GHC.Prim.RealWorld
                                8#
                                s1 of ds1 { (#,#) ipv ipv1 ->
                         Data.Aeson.Types.Generic.$wouter8
                           (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                           Data.Aeson.Types.Generic.$fFromPairM2
                           dt
                           0#
                           ipv }) of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of dt1 { Data.Text.Internal.Text ipv2 ipv3 ipv4 ->
                 (# dt1 #) } } }) -}
f9fddadaf5bc920f8fa87e7a46a36bb0
  $wgo ::
    [[Data.Bson.Field]]
    -> (# GHC.IO.FilePath, CommonServer.Identity,
          DirectoryServer.FileLock #)
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0] -}
ba9f29c5f99829774f0b53ca1d1d7dc4
  $wouter ::
    Data.Text.Array.MArray GHC.Prim.RealWorld
    -> GHC.Types.Int
    -> [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 5, Strictness: <L,U(U)><L,U(U)><S,1*U><S,U><S,U>,
     Inline: [0] -}
e590896dc3763d46d975e7dff4911a0c
  $wuploadToFileServer ::
    CommonServer.File
    -> CommonServer.Identity
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, CommonServer.Response #)
  {- Arity: 3, Strictness: <L,1*U(1*U,1*U)><L,U(U,U,U)><S,U>,
     Inline: [0],
     Unfolding: (\ (w :: CommonServer.File)
                   (w1 :: CommonServer.Identity)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case CommonServer.logConnection1
                        DirectoryServer.closeFile10
                        DirectoryServer.closeFile17
                        DirectoryServer.closeFile16
                        w2 of ds1 { (#,#) ipv ipv1 ->
                 case Network.HTTP.Client.Manager.$wnewManager
                        Network.HTTP.Client.Manager.defaultManagerSettings18
                        Network.HTTP.Client.Manager.defaultManagerSettings15
                          `cast`
                        (Sym (GHC.Types.N:IO[0]
                                  <GHC.Base.Maybe Network.Socket.Types.HostAddress
                                   -> GHC.Base.String
                                   -> GHC.Types.Int
                                   -> GHC.Types.IO Network.HTTP.Client.Types.Connection>_R))
                        Network.HTTP.Client.Manager.defaultManagerSettings14
                          `cast`
                        (Sym (GHC.Types.N:IO[0]
                                  <GHC.Base.Maybe Network.Socket.Types.HostAddress
                                   -> GHC.Base.String
                                   -> GHC.Types.Int
                                   -> GHC.Types.IO Network.HTTP.Client.Types.Connection>_R))
                        Network.HTTP.Client.Manager.defaultManagerSettings11
                          `cast`
                        (Sym (GHC.Types.N:IO[0]
                                  <Data.ByteString.Internal.ByteString
                                   -> (Network.HTTP.Client.Types.Connection -> GHC.Types.IO ())
                                   -> GHC.Base.String
                                   -> GHC.Base.Maybe Network.Socket.Types.HostAddress
                                   -> GHC.Base.String
                                   -> GHC.Types.Int
                                   -> GHC.Types.IO Network.HTTP.Client.Types.Connection>_R))
                        Network.HTTP.Client.Manager.defaultManagerSettings9
                        Network.HTTP.Client.Manager.defaultManagerSettings8
                        Network.HTTP.Client.Manager.defaultManagerSettings6
                          `cast`
                        (forall (a :: <*>_N).
                         <GHC.Types.IO a>_R ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                        Network.HTTP.Client.Manager.defaultManagerSettings5
                        (GHC.Base.returnIO1 @ Network.HTTP.Client.Types.Request)
                          `cast`
                        (<Network.HTTP.Client.Types.Request>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Network.HTTP.Client.Types.Request>_R))
                        Network.HTTP.Client.Manager.defaultManagerSettings1
                          `cast`
                        (Trans
                             (<GHC.Types.Bool>_R
                              ->_R Sym (GHC.Types.N:IO[0]
                                            <Network.HTTP.Client.Types.Request
                                             -> Network.HTTP.Client.Types.Request>_R))
                             (Sym (Network.HTTP.Client.Types.N:ProxyOverride[0])))
                        Network.HTTP.Client.Manager.defaultManagerSettings1
                          `cast`
                        (Trans
                             (<GHC.Types.Bool>_R
                              ->_R Sym (GHC.Types.N:IO[0]
                                            <Network.HTTP.Client.Types.Request
                                             -> Network.HTTP.Client.Types.Request>_R))
                             (Sym (Network.HTTP.Client.Types.N:ProxyOverride[0])))
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ((CommonServerApi.$wfileClientUpload w)
                         `cast`
                       (Trans
                            (Sub (Servant.Client.D:R:ClientTYPEVerb2[0]
                                      <Network.HTTP.Types.Method.StdMethod>_N
                                      <CommonServer.Response>_N
                                      <'Network.HTTP.Types.Method.POST>_N
                                      <'[Servant.API.ContentTypes.JSON]>_N
                                      <200>_N))
                            (Trans
                                 (Servant.Common.Req.N:ClientM[0] <CommonServer.Response>_N)
                                 (Control.Monad.Trans.Reader.N:ReaderT[0]
                                      <*>_N
                                      <Servant.Common.Req.ClientEnv>_R
                                      <Control.Monad.Trans.Except.ExceptT
                                         Servant.Common.Req.ServantError GHC.Types.IO>_R
                                      <CommonServer.Response>_N)))
                         (Servant.Common.Req.ClientEnv
                            ipv3
                            (Servant.Common.BaseUrl.BaseUrl
                               Servant.Common.BaseUrl.Http
                               (CommonServer.address w1)
                               (case Text.Read.readEither6
                                       @ GHC.Types.Int
                                       (Text.ParserCombinators.ReadP.run
                                          @ GHC.Types.Int
                                          DirectoryServer.closeFile15
                                          (case w1 of wild { CommonServer.Identity ds3 ds4 ds5 ->
                                           ds4 })) of wild {
                                  [] -> DirectoryServer.closeFile14
                                  : x ds
                                  -> case ds of wild1 {
                                       [] -> x : ipv4 ipv5 -> DirectoryServer.closeFile13 } })
                               (GHC.Types.[] @ GHC.Types.Char))))
                        `cast`
                      (Trans
                           (Control.Monad.Trans.Except.N:ExceptT[0]
                                <Servant.Common.Req.ServantError>_N
                                <GHC.Types.IO>_R
                                <CommonServer.Response>_N)
                           (GHC.Types.N:IO[0]
                                <Data.Either.Either
                                   Servant.Common.Req.ServantError CommonServer.Response>_R))
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case ipv5 of wild {
                   Data.Either.Left err
                   -> (# ipv4,
                         CommonServer.Response
                           CommonServer.FileUploadError
                           w1
                           (GHC.Types.[] @ GHC.Types.Char) #)
                   Data.Either.Right response' -> (# ipv4, response' #) } } } }) -}
3c2ba257a5ddb3e3149e96c606ab4f0d
  data FileLock = FileLocked | FileUnlocked | FileReadOnly
3c2ba257a5ddb3e3149e96c606ab4f0d
  data FileMapping
    = FileMapping {fileName :: GHC.IO.FilePath,
                   identity :: CommonServer.Identity,
                   lock :: DirectoryServer.FileLock}
3c2ba257a5ddb3e3149e96c606ab4f0d
  axiom Rep_FileLock::
      GHC.Generics.Rep DirectoryServer.FileLock
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "FileLock"
               "DirectoryServer"
               "Gluon-0.1.0.0-2zM8ehVFg6FFhvYw0f6srV"
               'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "FileLocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
             GHC.Generics.:+: (GHC.Generics.C1
                                 ('GHC.Generics.MetaCons
                                    "FileUnlocked" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                 GHC.Generics.U1
                               GHC.Generics.:+: GHC.Generics.C1
                                                  ('GHC.Generics.MetaCons
                                                     "FileReadOnly"
                                                     'GHC.Generics.PrefixI
                                                     'GHC.Types.False)
                                                  GHC.Generics.U1))
3c2ba257a5ddb3e3149e96c606ab4f0d
  axiom Rep_FileMapping::
      GHC.Generics.Rep DirectoryServer.FileMapping
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "FileMapping"
               "DirectoryServer"
               "Gluon-0.1.0.0-2zM8ehVFg6FFhvYw0f6srV"
               'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "FileMapping" 'GHC.Generics.PrefixI 'GHC.Types.True)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "fileName")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 GHC.IO.FilePath)
                GHC.Generics.:*: (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "identity")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 CommonServer.Identity)
                                  GHC.Generics.:*: GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "lock")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0 DirectoryServer.FileLock))))
e18e2cc84be23cd2270ba91d1c7eefb9
  closeFile ::
    CommonServer.Ticket
    -> CommonServer.File
    -> CommonServerApi.ApiHandler CommonServer.Response
  {- Arity: 3, Strictness: <L,1*U(A,1*U)><L,U(U,1*U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.closeFile1
                  `cast`
                (<CommonServer.Ticket>_R
                 ->_R <CommonServer.File>_R
                 ->_R Trans
                          (Sym (GHC.Types.N:IO[0]
                                    <Data.Either.Either
                                       Servant.Server.Internal.ServantErr.ServantErr
                                       CommonServer.Response>_R))
                          (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                    <Servant.Server.Internal.ServantErr.ServantErr>_N
                                    <GHC.Types.IO>_R
                                    <CommonServer.Response>_N))) -}
3fe56c7242b48089918251f07133e1c8
  closeFile1 ::
    CommonServer.Ticket
    -> CommonServer.File
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            Servant.Server.Internal.ServantErr.ServantErr
            CommonServer.Response #)
  {- Arity: 3, Strictness: <L,1*U(A,1*U)><L,U(U,1*U)><S,U>,
     Unfolding: (\ (t :: CommonServer.Ticket)
                   (f :: CommonServer.File)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Data.Time.Clock.POSIX.getCurrentTime2
                        s of ds { (#,#) ipv ipv1 ->
                 case t of wild { CommonServer.Ticket ds1 o ->
                 case Data.Time.Clock.POSIX.$wposixSecondsToUTCTime
                        ipv1 of ww { (#,#) ww1 ww2 ->
                 case CommonServer.decryptTime
                        CommonServer.sharedSecret
                        o of ww3 { Data.Time.Clock.UTC.UTCTime ww4 ww5 ->
                 let {
                   $j :: GHC.Prim.State# GHC.Prim.RealWorld
                         -> GHC.Types.Bool
                         -> (# GHC.Prim.State# GHC.Prim.RealWorld, CommonServer.Response #)
                     {- Arity: 2, Strictness: <S,U><S,1*U> -}
                   = \ (ipv2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot]
                       (ipv3 :: GHC.Types.Bool)[OneShot] ->
                     case ipv3 of wild1 {
                       GHC.Types.False
                       -> case CommonServer.logConnection1
                                 (GHC.Types.[] @ GHC.Types.Char)
                                 DirectoryServer.closeFile10
                                 DirectoryServer.closeFile19
                                 ipv2 of ds2 { (#,#) ipv4 ipv5 ->
                          let {
                            fn :: GHC.IO.FilePath
                            = case f of wild2 { CommonServer.File ds3 ds4 -> ds3 }
                          } in
                          case DirectoryServer.closeFile11
                                 fn
                                 ipv4 of ds3 { (#,#) ipv6 ipv7 ->
                          case ipv7 of wild2 { DirectoryServer.FileMapping ds4 ds5 ds6 ->
                          case ds6 of wild3 {
                            DirectoryServer.FileLocked
                            -> case GHC.IO.Handle.Text.hPutStr2
                                      GHC.IO.Handle.FD.stdout
                                      CommonServer.logHeading_t
                                      GHC.Types.True
                                      ipv6 of ds7 { (#,#) ipv8 ipv9 ->
                               (# ipv8, DirectoryServer.closeFile18 #) }
                            DirectoryServer.FileUnlocked
                            -> case DirectoryServer.$wuploadToFileServer
                                      f
                                      ds5
                                      ipv6 of ds7 { (#,#) ipv8 ipv9 ->
                               case DirectoryServer.closeFile4
                                      fn
                                      DirectoryServer.FileUnlocked
                                      ipv8 of ds8 { (#,#) ipv10 ipv11 ->
                               case GHC.IO.Handle.Text.hPutStr2
                                      GHC.IO.Handle.FD.stdout
                                      CommonServer.logHeading_t
                                      GHC.Types.True
                                      ipv10 of ds9 { (#,#) ipv12 ipv13 ->
                               (# ipv12, ipv9 #) } } }
                            DirectoryServer.FileReadOnly
                            -> case GHC.IO.Handle.Text.hPutStr2
                                      GHC.IO.Handle.FD.stdout
                                      CommonServer.logHeading_t
                                      GHC.Types.True
                                      ipv6 of ds7 { (#,#) ipv8 ipv9 ->
                               (# ipv8, DirectoryServer.closeFile18 #) } } } } }
                       GHC.Types.True
                       -> case CommonServer.logError1
                                 DirectoryServer.closeFile10
                                 DirectoryServer.closeFile3
                                 ipv2 of ds2 { (#,#) ipv4 ipv5 ->
                          (# ipv4, DirectoryServer.closeFile2 #) } }
                 } in
                 case GHC.Integer.Type.compareInteger
                        ww1 `cast` (Data.Time.Calendar.Days.N:Day[0])
                        ww4 `cast` (Data.Time.Calendar.Days.N:Day[0]) of wild1 {
                   GHC.Types.LT
                   -> case $j ipv GHC.Types.False of ds2 { (#,#) ipv2 ipv3 ->
                      (# ipv2,
                         Data.Either.Right
                           @ Servant.Server.Internal.ServantErr.ServantErr
                           @ CommonServer.Response
                           ipv3 #) }
                   GHC.Types.EQ
                   -> case GHC.Integer.Type.compareInteger
                             ww2
                               `cast`
                             (Trans
                                  (Data.Time.Clock.Scale.N:DiffTime[0])
                                  (Data.Fixed.N:Fixed[0] <Data.Fixed.E12>_P))
                             ww5
                               `cast`
                             (Trans
                                  (Data.Time.Clock.Scale.N:DiffTime[0])
                                  (Data.Fixed.N:Fixed[0] <Data.Fixed.E12>_P)) of wild2 {
                        DEFAULT
                        -> case $j ipv GHC.Types.False of ds2 { (#,#) ipv2 ipv3 ->
                           (# ipv2,
                              Data.Either.Right
                                @ Servant.Server.Internal.ServantErr.ServantErr
                                @ CommonServer.Response
                                ipv3 #) }
                        GHC.Types.GT
                        -> case $j ipv GHC.Types.True of ds2 { (#,#) ipv2 ipv3 ->
                           (# ipv2,
                              Data.Either.Right
                                @ Servant.Server.Internal.ServantErr.ServantErr
                                @ CommonServer.Response
                                ipv3 #) } }
                   GHC.Types.GT
                   -> case $j ipv GHC.Types.True of ds2 { (#,#) ipv2 ipv3 ->
                      (# ipv2,
                         Data.Either.Right
                           @ Servant.Server.Internal.ServantErr.ServantErr
                           @ CommonServer.Response
                           ipv3 #) } } } } } }) -}
058031ed82e538c5455553eb12435c87
  closeFile10 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "DirectoryServer"#) -}
3b749d4f57be4ab3df02578cf774055f
  closeFile11 ::
    GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          DirectoryServer.FileMapping #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (key :: GHC.Base.String)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case CommonServer.logDatabase1
                        DirectoryServer.closeFile10
                        DirectoryServer.closeFile9
                        DirectoryServer.closeFile12
                        key
                        s of ds1 { (#,#) ipv ipv1 ->
                 case Database.MongoDB.Connection.globalConnectTimeout
                        `cast`
                      (GHC.IORef.N:IORef[0] <Database.MongoDB.Connection.Secs>_N) of wild { GHC.STRef.STRef var# ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ Database.MongoDB.Connection.Secs
                        var#
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv3 of ww { GHC.Types.D# ww1 ->
                 case Database.MongoDB.Connection.$wconnect'
                        ww1
                        MongoDbConnector.connectToDatabase3
                        Database.MongoDB.Connection.defaultPort
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 let {
                   r1 :: Database.MongoDB.Query.MongoContext {- Strictness: m -}
                   = Database.MongoDB.Query.MongoContext
                       ipv5
                       Database.MongoDB.Query.master
                       MongoDbConnector.connectToDatabase2
                 } in
                 case (Database.MongoDB.Query.$wfind
                         @ GHC.Types.IO
                         Control.Monad.IO.Class.$fMonadIOIO
                         Control.Monad.Trans.Control.$fMonadBaseControlIOIO
                         (GHC.Types.[] @ Database.MongoDB.Internal.Protocol.QueryOption)
                         (Database.MongoDB.Query.Select
                            (GHC.Types.:
                               @ Data.Bson.Field
                               (case DirectoryServer.closeFile5 of dt { Data.Text.Internal.Text ipv6 ipv7 ipv8 ->
                                Data.Bson.:= dt (Data.Bson.$fValChar_$cvalList key) })
                               (GHC.Types.[] @ Data.Bson.Field))
                            DirectoryServer.closeFile6)
                         (GHC.Types.[] @ Data.Bson.Field)
                         Database.MongoDB.Query.$fSelectQuery1
                         Database.MongoDB.Query.$fSelectQuery1
                         (GHC.Types.[] @ Data.Bson.Field)
                         GHC.Types.False
                         Database.MongoDB.Query.$fSelectQuery1
                         (GHC.Types.[] @ Data.Bson.Field)
                         r1)
                        `cast`
                      (GHC.Types.N:IO[0] <Database.MongoDB.Query.Cursor>_R)
                        ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                 case ((MongoDbConnector.drainCursor_drainCursor'
                          ipv7
                          (GHC.Types.[] @ Data.Bson.Document))
                         `cast`
                       (Control.Monad.Trans.Reader.N:ReaderT[0]
                            <*>_N
                            <Database.MongoDB.Query.MongoContext>_R
                            <GHC.Types.IO>_R
                            <[Data.Bson.Document]>_N)
                         r1)
                        `cast`
                      (GHC.Types.N:IO[0] <[Data.Bson.Document]>_R)
                        ipv6 of ds5 { (#,#) ipv8 ipv9 ->
                 (# ipv8,
                    case DirectoryServer.$wgo ipv9 of ww2 { (#,,#) ww3 ww4 ww5 ->
                    DirectoryServer.FileMapping ww3 ww4 ww5 } #) } } } } } } }) -}
67250faf63dc0a0d8c9af2e8a7ac9099
  closeFile12 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Find"#) -}
7e359d5eabd666b83cd78c1a38a3fc6b
  closeFile13 :: GHC.Types.Int
  {- Strictness: x -}
bb10635f7a7f7c6dbeb42d8fde751903
  closeFile14 :: GHC.Types.Int
  {- Strictness: x -}
e1bc8b10947e41e9ed5b1c04dff01c51
  closeFile15 :: Text.ParserCombinators.ReadP.P GHC.Types.Int
  {- Unfolding: ((GHC.Read.$fReadInt3
                    GHC.Read.$fReadInt_$sconvertInt
                    Text.ParserCombinators.ReadPrec.minPrec)
                   `cast`
                 (Text.ParserCombinators.ReadP.N:ReadP[0] <GHC.Types.Int>_R)
                   @ GHC.Types.Int
                   (Text.Read.readEither5 @ GHC.Types.Int)) -}
68b0c60e6a6d2078fb2ae5f2bae6e1da
  closeFile16 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "POST upload"#) -}
1eaf29b2031e4f81a79f430e615810e8
  closeFile17 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "FileServer"#) -}
ef14a90aeb9aaab8528724ecfbe97364
  closeFile18 :: CommonServer.Response
  {- Strictness: m,
     Unfolding: (CommonServer.Response
                   CommonServer.FileLockedOrReadOnly
                   CommonServer.directoryServerIdentity
                   (GHC.Types.[] @ GHC.Types.Char)) -}
48557968a94272eeea4771bd550e70cd
  closeFile19 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "POST close"#) -}
01ce299d2f71c6627c168f6cc84e86a2
  closeFile2 :: CommonServer.Response
  {- Strictness: m,
     Unfolding: (CommonServer.Response
                   CommonServer.DirectoryError
                   CommonServer.directoryServerIdentity
                   (GHC.Types.[] @ GHC.Types.Char)) -}
ea9cb67ed0c8fdd99ae0f37c927a22bc
  closeFile3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Session Timed out"#) -}
fc0545868de2f0cd40c7a8164acc6451
  closeFile4 ::
    GHC.Base.String
    -> DirectoryServer.FileLock
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,U><L,U><S,U>,
     Unfolding: (\ (s :: GHC.Base.String)
                   (fl :: DirectoryServer.FileLock)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case DirectoryServer.closeFile11 s s1 of ds1 { (#,#) ipv ipv1 ->
                 case CommonServer.logDatabase1
                        DirectoryServer.closeFile10
                        DirectoryServer.closeFile9
                        DirectoryServer.closeFile8
                        (GHC.Base.++
                           @ GHC.Types.Char
                           s
                           (case fl of wild {
                              DirectoryServer.FileLocked -> DirectoryServer.$fFromBSONFileLock2
                              DirectoryServer.FileUnlocked -> DirectoryServer.$fFromBSONFileLock5
                              DirectoryServer.FileReadOnly
                              -> DirectoryServer.$fFromBSONFileLock8 }))
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case Database.MongoDB.Connection.globalConnectTimeout
                        `cast`
                      (GHC.IORef.N:IORef[0] <Database.MongoDB.Connection.Secs>_N) of wild { GHC.STRef.STRef var# ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ Database.MongoDB.Connection.Secs
                        var#
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case ipv5 of ww { GHC.Types.D# ww1 ->
                 case Database.MongoDB.Connection.$wconnect'
                        ww1
                        MongoDbConnector.connectToDatabase3
                        Database.MongoDB.Connection.defaultPort
                        ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                 case ((DirectoryServer.closeFile7
                          DirectoryServer.closeFile6
                          (GHC.Types.:
                             @ (Database.MongoDB.Query.Selector, Data.Bson.Document,
                                [Database.MongoDB.Internal.Protocol.UpdateOption])
                             (GHC.Types.:
                                @ Data.Bson.Field
                                (case DirectoryServer.closeFile5 of dt { Data.Text.Internal.Text ipv8 ipv9 ipv10 ->
                                 Data.Bson.:= dt (Data.Bson.$fValChar_$cvalList s) })
                                (GHC.Types.[] @ Data.Bson.Field),
                              Data.Bson.Generic.$w$cgenericToBSON1
                                @ (GHC.Generics.S1
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "fileName")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.Rec0 GHC.IO.FilePath)
                                   GHC.Generics.:*: (GHC.Generics.S1
                                                       ('GHC.Generics.MetaSel
                                                          ('GHC.Base.Just "identity")
                                                          'GHC.Generics.NoSourceUnpackedness
                                                          'GHC.Generics.NoSourceStrictness
                                                          'GHC.Generics.DecidedLazy)
                                                       (GHC.Generics.Rec0 CommonServer.Identity)
                                                     GHC.Generics.:*: GHC.Generics.S1
                                                                        ('GHC.Generics.MetaSel
                                                                           ('GHC.Base.Just "lock")
                                                                           'GHC.Generics.NoSourceUnpackedness
                                                                           'GHC.Generics.NoSourceStrictness
                                                                           'GHC.Generics.DecidedLazy)
                                                                        (GHC.Generics.Rec0
                                                                           DirectoryServer.FileLock)))
                                @ ('GHC.Generics.MetaCons
                                     "FileMapping" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                DirectoryServer.$fToBSONFileMapping6
                                  `cast`
                                (Sym (Data.Bson.Generic.N:GToBSON[0]
                                          <GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "fileName")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.Rec0 GHC.IO.FilePath)
                                           GHC.Generics.:*: (GHC.Generics.S1
                                                               ('GHC.Generics.MetaSel
                                                                  ('GHC.Base.Just "identity")
                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                  'GHC.Generics.NoSourceStrictness
                                                                  'GHC.Generics.DecidedLazy)
                                                               (GHC.Generics.Rec0
                                                                  CommonServer.Identity)
                                                             GHC.Generics.:*: GHC.Generics.S1
                                                                                ('GHC.Generics.MetaSel
                                                                                   ('GHC.Base.Just
                                                                                      "lock")
                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                   'GHC.Generics.DecidedLazy)
                                                                                (GHC.Generics.Rec0
                                                                                   DirectoryServer.FileLock))>_N))
                                DirectoryServer.$fToBSONFileMapping_$s$fConstructorMetaMetaCons
                                @ GHC.Prim.Any
                                1#
                                (GHC.Generics.:*:
                                   @ (GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Base.Just "fileName")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.K1 GHC.Generics.R GHC.IO.FilePath))
                                   @ (GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Base.Just "identity")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.K1 GHC.Generics.R CommonServer.Identity)
                                      GHC.Generics.:*: GHC.Generics.M1
                                                         GHC.Generics.S
                                                         ('GHC.Generics.MetaSel
                                                            ('GHC.Base.Just "lock")
                                                            'GHC.Generics.NoSourceUnpackedness
                                                            'GHC.Generics.NoSourceStrictness
                                                            'GHC.Generics.DecidedLazy)
                                                         (GHC.Generics.K1
                                                            GHC.Generics.R
                                                            DirectoryServer.FileLock))
                                   @ GHC.Prim.Any
                                   s `cast`
                                   (Trans
                                        (Sym (GHC.Generics.N:K1[0]
                                                  <GHC.Generics.R>_P
                                                  <GHC.IO.FilePath>_R
                                                  <GHC.Prim.Any>_P))
                                        (Sym (GHC.Generics.N:M1[0]
                                                  <GHC.Generics.S>_P
                                                  <'GHC.Generics.MetaSel
                                                     ('GHC.Base.Just "fileName")
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy>_P
                                                  <GHC.Generics.K1
                                                     GHC.Generics.R
                                                     GHC.IO.FilePath>_R) <GHC.Prim.Any>_N))
                                   (GHC.Generics.:*:
                                      @ (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "identity")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1 GHC.Generics.R CommonServer.Identity))
                                      @ (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "lock")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1
                                              GHC.Generics.R DirectoryServer.FileLock))
                                      @ GHC.Prim.Any
                                      (case ipv1 of wild1 { DirectoryServer.FileMapping ds ds5 ds6 ->
                                       ds5
                                         `cast`
                                       (Trans
                                            (Sym (GHC.Generics.N:K1[0]
                                                      <GHC.Generics.R>_P
                                                      <CommonServer.Identity>_R
                                                      <GHC.Prim.Any>_P))
                                            (Sym (GHC.Generics.N:M1[0]
                                                      <GHC.Generics.S>_P
                                                      <'GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "identity")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy>_P
                                                      <GHC.Generics.K1
                                                         GHC.Generics.R
                                                         CommonServer.Identity>_R) <GHC.Prim.Any>_N)) })
                                      fl
                                        `cast`
                                      (Trans
                                           (Sym (GHC.Generics.N:K1[0]
                                                     <GHC.Generics.R>_P
                                                     <DirectoryServer.FileLock>_R
                                                     <GHC.Prim.Any>_P))
                                           (Sym (GHC.Generics.N:M1[0]
                                                     <GHC.Generics.S>_P
                                                     <'GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "lock")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy>_P
                                                     <GHC.Generics.K1
                                                        GHC.Generics.R
                                                        DirectoryServer.FileLock>_R) <GHC.Prim.Any>_N))))
                                  `cast`
                                (Sym (GHC.Generics.N:M1[0]
                                          <GHC.Generics.C>_P
                                          <'GHC.Generics.MetaCons
                                             "FileMapping" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                          <GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "fileName")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1 GHC.Generics.R GHC.IO.FilePath)
                                           GHC.Generics.:*: (GHC.Generics.M1
                                                               GHC.Generics.S
                                                               ('GHC.Generics.MetaSel
                                                                  ('GHC.Base.Just "identity")
                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                  'GHC.Generics.NoSourceStrictness
                                                                  'GHC.Generics.DecidedLazy)
                                                               (GHC.Generics.K1
                                                                  GHC.Generics.R
                                                                  CommonServer.Identity)
                                                             GHC.Generics.:*: GHC.Generics.M1
                                                                                GHC.Generics.S
                                                                                ('GHC.Generics.MetaSel
                                                                                   ('GHC.Base.Just
                                                                                      "lock")
                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                   'GHC.Generics.DecidedLazy)
                                                                                (GHC.Generics.K1
                                                                                   GHC.Generics.R
                                                                                   DirectoryServer.FileLock))>_R) <GHC.Prim.Any>_N),
                              Database.MongoDB.Query.repsert1)
                             (GHC.Types.[]
                                @ (Database.MongoDB.Query.Selector, Data.Bson.Document,
                                   [Database.MongoDB.Internal.Protocol.UpdateOption]))))
                         `cast`
                       (Control.Monad.Trans.Reader.N:ReaderT[0]
                            <*>_N
                            <Database.MongoDB.Query.MongoContext>_R
                            <GHC.Types.IO>_R
                            <Database.MongoDB.Query.UpdateResult>_N)
                         (Database.MongoDB.Query.MongoContext
                            ipv7
                            Database.MongoDB.Query.master
                            MongoDbConnector.connectToDatabase2))
                        `cast`
                      (GHC.Types.N:IO[0] <Database.MongoDB.Query.UpdateResult>_R)
                        ipv6 of ds5 { (#,#) ipv8 ipv9 ->
                 (# ipv8, GHC.Tuple.() #) } } } } } } }) -}
dc1e49db261eb90229005b0321705a28
  closeFile5 :: Data.Bson.Label
  {- Unfolding: (Data.Text.Show.unpackCString# "_id"#) -}
c64cbe3d1915c7584a0eeb5aa48f85bd
  closeFile6 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "FileMappingDb"#) -}
3434681e7f886286ec5c85a85ca2f340
  closeFile7 ::
    Database.MongoDB.Query.Collection
    -> [(Database.MongoDB.Query.Selector, Data.Bson.Document,
         [Database.MongoDB.Internal.Protocol.UpdateOption])]
    -> Database.MongoDB.Query.Action
         GHC.Types.IO Database.MongoDB.Query.UpdateResult
  {- Unfolding: (Database.MongoDB.Query.update'
                   @ GHC.Types.IO
                   Control.Monad.IO.Class.$fMonadIOIO
                   GHC.Types.True) -}
1f7f9cddb8f102fb56a5ce75d385040c
  closeFile8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Upsert"#) -}
7c8b1049cf1067b7c5db6847fd93ce87
  closeFile9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "FileMappingDb"#) -}
a766dbf14ad32bf511799935c62d477d
  deleteDatabases :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.deleteDatabases1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <()>_R)) -}
cf62df0e9c5a4e2d33fc7d98f299705a
  deleteDatabases1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case CommonServer.logAction1
                        DirectoryServer.closeFile10
                        DirectoryServer.deleteDatabases7
                        DirectoryServer.deleteDatabases6
                        s of ds1 { (#,#) ipv ipv1 ->
                 case Database.MongoDB.Connection.globalConnectTimeout
                        `cast`
                      (GHC.IORef.N:IORef[0] <Database.MongoDB.Connection.Secs>_N) of wild { GHC.STRef.STRef var# ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ Database.MongoDB.Connection.Secs
                        var#
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv3 of ww { GHC.Types.D# ww1 ->
                 case Database.MongoDB.Connection.$wconnect'
                        ww1
                        MongoDbConnector.connectToDatabase3
                        Database.MongoDB.Connection.defaultPort
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 let {
                   r1 :: Database.MongoDB.Query.MongoContext {- Strictness: m -}
                   = Database.MongoDB.Query.MongoContext
                       ipv5
                       Database.MongoDB.Query.master
                       MongoDbConnector.connectToDatabase2
                 } in
                 case ((DirectoryServer.deleteDatabases5
                          DirectoryServer.closeFile6
                          DirectoryServer.deleteDatabases3)
                         `cast`
                       (Control.Monad.Trans.Reader.N:ReaderT[0]
                            <*>_N
                            <Database.MongoDB.Query.MongoContext>_R
                            <GHC.Types.IO>_R
                            <Database.MongoDB.Query.DeleteResult>_N)
                         r1)
                        `cast`
                      (GHC.Types.N:IO[0] <Database.MongoDB.Query.DeleteResult>_R)
                        ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                 case ((DirectoryServer.deleteDatabases5
                          DirectoryServer.deleteDatabases2
                          DirectoryServer.deleteDatabases3)
                         `cast`
                       (Control.Monad.Trans.Reader.N:ReaderT[0]
                            <*>_N
                            <Database.MongoDB.Query.MongoContext>_R
                            <GHC.Types.IO>_R
                            <Database.MongoDB.Query.DeleteResult>_N)
                         r1)
                        `cast`
                      (GHC.Types.N:IO[0] <Database.MongoDB.Query.DeleteResult>_R)
                        ipv6 of ds5 { (#,#) ipv8 ipv9 ->
                 (# ipv8, GHC.Tuple.() #) } } } } } } }) -}
f9098a23f93300f9d036a7df03519cf7
  deleteDatabases2 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "FileServerDb"#) -}
88b1ced9f6ded8540c38c06b40897401
  deleteDatabases3 ::
    [(Database.MongoDB.Query.Selector,
      [Database.MongoDB.Internal.Protocol.DeleteOption])]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (Database.MongoDB.Query.Selector,
                      [Database.MongoDB.Internal.Protocol.DeleteOption])
                   DirectoryServer.deleteDatabases4
                   (GHC.Types.[]
                      @ (Database.MongoDB.Query.Selector,
                         [Database.MongoDB.Internal.Protocol.DeleteOption]))) -}
3f6441a7773b418ccf942b123e1ab474
  deleteDatabases4 ::
    (Database.MongoDB.Query.Selector,
     [Database.MongoDB.Internal.Protocol.DeleteOption])
  {- HasNoCafRefs,
     Unfolding: ((GHC.Types.[] @ Data.Bson.Field,
                  GHC.Types.[] @ Database.MongoDB.Internal.Protocol.DeleteOption)) -}
892083ffc69c24894574ef4b96f1a72d
  deleteDatabases5 ::
    Database.MongoDB.Query.Collection
    -> [(Database.MongoDB.Query.Selector,
         [Database.MongoDB.Internal.Protocol.DeleteOption])]
    -> Database.MongoDB.Query.Action
         GHC.Types.IO Database.MongoDB.Query.DeleteResult
  {- Unfolding: (Database.MongoDB.Query.delete'
                   @ GHC.Types.IO
                   Control.Monad.IO.Class.$fMonadIOIO
                   GHC.Types.True) -}
797681753393a603de6627aafb64e31a
  deleteDatabases6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "FileMappingDb, FileServerDb"#) -}
4e5d269696469821518ee89343cd2b3d
  deleteDatabases7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Delete"#) -}
965e2d9b7d86069cbcc63234aa36b8a3
  directoryApp :: Network.Wai.Application
  {- Arity: 2,
     Unfolding: (Servant.Server.Internal.RoutingApplication.toApplication
                   DirectoryServer.directoryApp1) -}
156471480ad3b95349739990e5a75078
  directoryApp1 ::
    Network.Wai.Internal.Request
    -> (Servant.Server.Internal.RoutingApplication.RouteResult
          Network.Wai.Internal.Response
        -> GHC.Types.IO Network.Wai.Internal.ResponseReceived)
    -> GHC.Types.IO Network.Wai.Internal.ResponseReceived
  {- Arity: 2,
     Strictness: <L,U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (eta :: Network.Wai.Internal.Request)
                   (eta1 :: Servant.Server.Internal.RoutingApplication.RouteResult
                              Network.Wai.Internal.Response
                            -> GHC.Types.IO Network.Wai.Internal.ResponseReceived)[OneShot] ->
                 Servant.Server.Internal.Router.runRouterEnv
                   @ ()
                   DirectoryServer.directoryApp_r
                   GHC.Tuple.()
                   eta
                   eta1) -}
990fc5b700e5d003fd573e948fc1f801
  directoryApp10 ::
    CommonServer.Identity
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            Servant.Server.Internal.ServantErr.ServantErr
            CommonServer.Response #)
  {- Arity: 2, Strictness: <L,U(U,U,U)><S,U>,
     Unfolding: (\ (i :: CommonServer.Identity)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case CommonServer.logConnection1
                        (GHC.Types.[] @ GHC.Types.Char)
                        DirectoryServer.closeFile10
                        DirectoryServer.directoryApp15
                        s of ds1 { (#,#) ipv ipv1 ->
                 case DirectoryServer.directoryApp13
                        i
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        CommonServer.logHeading_t
                        GHC.Types.True
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 (# ipv4, DirectoryServer.directoryApp11 #) } } }) -}
8567bfc42a8d30a86df55d088e0d70b8
  directoryApp11 ::
    Data.Either.Either
      Servant.Server.Internal.ServantErr.ServantErr CommonServer.Response
  {- Unfolding: (Data.Either.Right
                   @ Servant.Server.Internal.ServantErr.ServantErr
                   @ CommonServer.Response
                   DirectoryServer.directoryApp12) -}
22b00e2a0c3cfb39c16abcfd1794604f
  directoryApp12 :: CommonServer.Response
  {- Strictness: m,
     Unfolding: (CommonServer.Response
                   CommonServer.DirectoryJoinSuccess
                   CommonServer.directoryServerIdentity
                   (GHC.Types.[] @ GHC.Types.Char)) -}
5a0182b1fd6af0a45c78aedc07708528
  directoryApp13 ::
    CommonServer.Identity
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,U(U,U,U)><S,U>,
     Unfolding: (\ (i :: CommonServer.Identity)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 let {
                   key :: GHC.Base.String
                   = case i of ww { CommonServer.Identity ww1 ww2 ww3 ->
                     GHC.Base.++
                       @ GHC.Types.Char
                       ww1
                       (GHC.CString.unpackAppendCString# "_"# ww2) }
                 } in
                 case CommonServer.logDatabase1
                        DirectoryServer.closeFile10
                        DirectoryServer.directoryApp14
                        DirectoryServer.closeFile8
                        key
                        eta of ds1 { (#,#) ipv ipv1 ->
                 case Database.MongoDB.Connection.globalConnectTimeout
                        `cast`
                      (GHC.IORef.N:IORef[0] <Database.MongoDB.Connection.Secs>_N) of wild { GHC.STRef.STRef var# ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ Database.MongoDB.Connection.Secs
                        var#
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv3 of ww { GHC.Types.D# ww1 ->
                 case Database.MongoDB.Connection.$wconnect'
                        ww1
                        MongoDbConnector.connectToDatabase3
                        Database.MongoDB.Connection.defaultPort
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case ((DirectoryServer.closeFile7
                          DirectoryServer.deleteDatabases2
                          (GHC.Types.:
                             @ (Database.MongoDB.Query.Selector, Data.Bson.Document,
                                [Database.MongoDB.Internal.Protocol.UpdateOption])
                             (GHC.Types.:
                                @ Data.Bson.Field
                                (case DirectoryServer.closeFile5 of dt { Data.Text.Internal.Text ipv6 ipv7 ipv8 ->
                                 Data.Bson.:= dt (Data.Bson.$fValChar_$cvalList key) })
                                (GHC.Types.[] @ Data.Bson.Field),
                              Data.Bson.Generic.$w$cgenericToBSON1
                                @ (GHC.Generics.S1
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "address")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.Rec0 GHC.Base.String)
                                   GHC.Generics.:*: (GHC.Generics.S1
                                                       ('GHC.Generics.MetaSel
                                                          ('GHC.Base.Just "port")
                                                          'GHC.Generics.NoSourceUnpackedness
                                                          'GHC.Generics.NoSourceStrictness
                                                          'GHC.Generics.DecidedLazy)
                                                       (GHC.Generics.Rec0 GHC.Base.String)
                                                     GHC.Generics.:*: GHC.Generics.S1
                                                                        ('GHC.Generics.MetaSel
                                                                           ('GHC.Base.Just
                                                                              "serverType")
                                                                           'GHC.Generics.NoSourceUnpackedness
                                                                           'GHC.Generics.NoSourceStrictness
                                                                           'GHC.Generics.DecidedLazy)
                                                                        (GHC.Generics.Rec0
                                                                           CommonServer.ServerType)))
                                @ ('GHC.Generics.MetaCons
                                     "Identity" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                CommonServer.$fFromBSONResponse20
                                  `cast`
                                (Sym (Data.Bson.Generic.N:GToBSON[0]
                                          <GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "address")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.Rec0 GHC.Base.String)
                                           GHC.Generics.:*: (GHC.Generics.S1
                                                               ('GHC.Generics.MetaSel
                                                                  ('GHC.Base.Just "port")
                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                  'GHC.Generics.NoSourceStrictness
                                                                  'GHC.Generics.DecidedLazy)
                                                               (GHC.Generics.Rec0 GHC.Base.String)
                                                             GHC.Generics.:*: GHC.Generics.S1
                                                                                ('GHC.Generics.MetaSel
                                                                                   ('GHC.Base.Just
                                                                                      "serverType")
                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                   'GHC.Generics.DecidedLazy)
                                                                                (GHC.Generics.Rec0
                                                                                   CommonServer.ServerType))>_N))
                                CommonServer.$fFromBSONResponse_$s$fConstructorMetaMetaCons
                                @ GHC.Prim.Any
                                1#
                                (case i of wild1 { CommonServer.Identity g1 g2 g3 ->
                                 (GHC.Generics.:*:
                                    @ (GHC.Generics.M1
                                         GHC.Generics.S
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "address")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
                                    @ (GHC.Generics.M1
                                         GHC.Generics.S
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "port")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                       GHC.Generics.:*: GHC.Generics.M1
                                                          GHC.Generics.S
                                                          ('GHC.Generics.MetaSel
                                                             ('GHC.Base.Just "serverType")
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.K1
                                                             GHC.Generics.R
                                                             CommonServer.ServerType))
                                    @ GHC.Prim.Any
                                    g1
                                      `cast`
                                    (Trans
                                         (Sym (GHC.Generics.N:K1[0]
                                                   <GHC.Generics.R>_P
                                                   <GHC.Base.String>_R
                                                   <GHC.Prim.Any>_P))
                                         (Sym (GHC.Generics.N:M1[0]
                                                   <GHC.Generics.S>_P
                                                   <'GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "address")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy>_P
                                                   <GHC.Generics.K1
                                                      GHC.Generics.R
                                                      GHC.Base.String>_R) <GHC.Prim.Any>_N))
                                    (GHC.Generics.:*:
                                       @ (GHC.Generics.M1
                                            GHC.Generics.S
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "port")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
                                       @ (GHC.Generics.M1
                                            GHC.Generics.S
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "serverType")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.K1
                                               GHC.Generics.R CommonServer.ServerType))
                                       @ GHC.Prim.Any
                                       g2
                                         `cast`
                                       (Trans
                                            (Sym (GHC.Generics.N:K1[0]
                                                      <GHC.Generics.R>_P
                                                      <GHC.Base.String>_R
                                                      <GHC.Prim.Any>_P))
                                            (Sym (GHC.Generics.N:M1[0]
                                                      <GHC.Generics.S>_P
                                                      <'GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "port")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy>_P
                                                      <GHC.Generics.K1
                                                         GHC.Generics.R
                                                         GHC.Base.String>_R) <GHC.Prim.Any>_N))
                                       g3
                                         `cast`
                                       (Trans
                                            (Sym (GHC.Generics.N:K1[0]
                                                      <GHC.Generics.R>_P
                                                      <CommonServer.ServerType>_R
                                                      <GHC.Prim.Any>_P))
                                            (Sym (GHC.Generics.N:M1[0]
                                                      <GHC.Generics.S>_P
                                                      <'GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "serverType")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy>_P
                                                      <GHC.Generics.K1
                                                         GHC.Generics.R
                                                         CommonServer.ServerType>_R) <GHC.Prim.Any>_N))))
                                   `cast`
                                 (Sym (GHC.Generics.N:M1[0]
                                           <GHC.Generics.C>_P
                                           <'GHC.Generics.MetaCons
                                              "Identity" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                           <GHC.Generics.M1
                                              GHC.Generics.S
                                              ('GHC.Generics.MetaSel
                                                 ('GHC.Base.Just "address")
                                                 'GHC.Generics.NoSourceUnpackedness
                                                 'GHC.Generics.NoSourceStrictness
                                                 'GHC.Generics.DecidedLazy)
                                              (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                            GHC.Generics.:*: (GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "port")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R GHC.Base.String)
                                                              GHC.Generics.:*: GHC.Generics.M1
                                                                                 GHC.Generics.S
                                                                                 ('GHC.Generics.MetaSel
                                                                                    ('GHC.Base.Just
                                                                                       "serverType")
                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                    'GHC.Generics.DecidedLazy)
                                                                                 (GHC.Generics.K1
                                                                                    GHC.Generics.R
                                                                                    CommonServer.ServerType))>_R) <GHC.Prim.Any>_N) }),
                              Database.MongoDB.Query.repsert1)
                             (GHC.Types.[]
                                @ (Database.MongoDB.Query.Selector, Data.Bson.Document,
                                   [Database.MongoDB.Internal.Protocol.UpdateOption]))))
                         `cast`
                       (Control.Monad.Trans.Reader.N:ReaderT[0]
                            <*>_N
                            <Database.MongoDB.Query.MongoContext>_R
                            <GHC.Types.IO>_R
                            <Database.MongoDB.Query.UpdateResult>_N)
                         (Database.MongoDB.Query.MongoContext
                            ipv5
                            Database.MongoDB.Query.master
                            MongoDbConnector.connectToDatabase2))
                        `cast`
                      (GHC.Types.N:IO[0] <Database.MongoDB.Query.UpdateResult>_R)
                        ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                 (# ipv6, GHC.Tuple.() #) } } } } } }) -}
6f84592e777e3bd95c76b0c90448863f
  directoryApp14 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "FileServerDb"#) -}
39a7d54d7ab8ef173c182fd5e96d0c88
  directoryApp15 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "POST join"#) -}
d8d4662521f87f60063abbedf69469c3
  directoryApp16 ::
    Data.Proxy.Proxy
      (Servant.API.Verbs.Verb
         'Network.HTTP.Types.Method.POST
         200
         '[Servant.API.ContentTypes.JSON]
         CommonServer.Response)
    -> Servant.Server.Internal.Context.Context '[]
    -> Servant.Server.Internal.RoutingApplication.Delayed
         env
         (Servant.Server.Internal.Server
            (Servant.API.Verbs.Verb
               'Network.HTTP.Types.Method.POST
               200
               '[Servant.API.ContentTypes.JSON]
               CommonServer.Response))
    -> Servant.Server.Internal.Router.Router env
  {- Arity: 2, Strictness: <S,1*H><L,A>,
     Unfolding: InlineRule (2, True, False)
                (\ @ env
                   (w3 :: Data.Proxy.Proxy
                            (Servant.API.Verbs.Verb
                               'Network.HTTP.Types.Method.POST
                               200
                               '[Servant.API.ContentTypes.JSON]
                               CommonServer.Response))
                   (w4 :: Servant.Server.Internal.Context.Context '[]) ->
                 case w3 of w5 { Data.Proxy.Proxy ->
                 Servant.Server.Internal.$w$croute8
                   @ Network.HTTP.Types.Method.StdMethod
                   @ '[Servant.API.ContentTypes.JSON]
                   @ CommonServer.Response
                   @ 'Network.HTTP.Types.Method.POST
                   @ 200
                   @ '[]
                   DirectoryServer.$s$fAllCTRender:a
                   Servant.API.Verbs.$fReflectMethodStdMethodPOST_$creflectMethod
                     `cast`
                   (Sym (Servant.API.Verbs.N:ReflectMethod[0]
                             <Network.HTTP.Types.Method.StdMethod>_N
                             <'Network.HTTP.Types.Method.POST>_N))
                   DirectoryServer.directoryApp17
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SNat[0] <200>_P))
                        (Sym (GHC.TypeLits.N:KnownNat[0]) <200>_N))
                   @ env
                   (Data.Proxy.Proxy
                      @ *
                      @ (Servant.API.Verbs.Verb
                           'Network.HTTP.Types.Method.POST
                           200
                           '[Servant.API.ContentTypes.JSON]
                           CommonServer.Response)) }) -}
d772ef0f7c34a104ae44cd53234a3003
  directoryApp17 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (200) -}
2df1c241bae8d681ebb230d85b35442d
  directoryApp18 ::
    Data.Proxy.Proxy '[Servant.API.ContentTypes.JSON]
    -> Data.ByteString.Lazy.Internal.ByteString
    -> Data.ByteString.Lazy.Internal.ByteString
    -> GHC.Base.Maybe
         (Data.Either.Either GHC.Base.String CommonServer.Identity)
  {- Arity: 3, Strictness: <L,A><L,1*U><L,U>,
     Unfolding: InlineRule (3, True, True)
                (\ (w1 :: Data.Proxy.Proxy '[Servant.API.ContentTypes.JSON])
                   (w2 :: Data.ByteString.Lazy.Internal.ByteString)
                   (w3 :: Data.ByteString.Lazy.Internal.ByteString) ->
                 Servant.API.ContentTypes.$w$chandleCTypeH
                   @ '[Servant.API.ContentTypes.JSON]
                   @ CommonServer.Identity
                   DirectoryServer.$s$fAllMimeUnrender:a3
                   w2
                   w3) -}
91175cfcf8e70e20c1a7176d90b717cf
  directoryApp19 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        8#
                        s1 of ds1 { (#,#) ipv ipv1 ->
                 Servant.Server.Internal.$wouter
                   (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                   Servant.Server.Internal.$fHasServerTYPE:>context20
                   DirectoryServer.directoryApp20
                   0#
                   ipv }) -}
99403482b5a4e2c45194013bcaeda62c
  directoryApp2 ::
    Servant.Server.Internal.Router.Router'
      () Servant.Server.Internal.RoutingApplication.RoutingApplication
  {- Unfolding: (Servant.Server.Internal.Router.choice
                   @ ()
                   @ Servant.Server.Internal.RoutingApplication.RoutingApplication
                   DirectoryServer.directoryApp32
                   DirectoryServer.directoryApp3) -}
ed0aaad1d807fa36641b02abea96ade7
  directoryApp20 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "join"#) -}
c435e0c26d26ce75a809a9ce709c104f
  directoryApp21 ::
    Servant.Server.Internal.Router.Router'
      () Servant.Server.Internal.RoutingApplication.RoutingApplication
  {- Unfolding: (Servant.Server.Internal.Router.StaticRouter
                   @ ()
                   @ Servant.Server.Internal.RoutingApplication.RoutingApplication
                   DirectoryServer.directoryApp22
                   (GHC.Types.[]
                      @ (()
                         -> Servant.Server.Internal.RoutingApplication.RoutingApplication))) -}
86d5d63cc9ceeaeae1022096ab43482d
  directoryApp22 ::
    Data.Map.Base.Map
      Data.Text.Internal.Text
      (Servant.Server.Internal.Router.Router'
         () Servant.Server.Internal.RoutingApplication.RoutingApplication)
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        DirectoryServer.directoryApp30 of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of dt { Data.Text.Internal.Text ipv2 ipv3 ipv4 ->
                 Data.Map.Base.Bin
                   @ Data.Text.Internal.Text
                   @ (Servant.Server.Internal.Router.Router'
                        () Servant.Server.Internal.RoutingApplication.RoutingApplication)
                   1#
                   dt
                   DirectoryServer.directoryApp23
                   (Data.Map.Base.Tip
                      @ Data.Text.Internal.Text
                      @ (Servant.Server.Internal.Router.Router'
                           () Servant.Server.Internal.RoutingApplication.RoutingApplication))
                   (Data.Map.Base.Tip
                      @ Data.Text.Internal.Text
                      @ (Servant.Server.Internal.Router.Router'
                           ()
                           Servant.Server.Internal.RoutingApplication.RoutingApplication)) } }) -}
8d0e2bc5ddef16590c1a065d071bc094
  directoryApp23 :: Servant.Server.Internal.Router.Router ()
  {- Unfolding: (Servant.Server.Internal.$w$croute2
                   @ *
                   @ '[Servant.API.ContentTypes.JSON]
                   @ CommonServer.Ticket
                   @ (Servant.API.ReqBody.ReqBody
                        '[Servant.API.ContentTypes.JSON] CommonServer.File
                      Servant.API.Sub.:> Servant.API.Verbs.Post
                                           '[Servant.API.ContentTypes.JSON] CommonServer.Response)
                   @ '[]
                   DirectoryServer.directoryApp29
                     `cast`
                   (Sym (Servant.API.ContentTypes.N:AllCTUnrender[0]
                             <'[Servant.API.ContentTypes.JSON]>_N <CommonServer.Ticket>_N))
                   DirectoryServer.directoryApp27
                     `cast`
                   (Sym (Servant.Server.Internal.N:HasServer[0]
                             <*>_N
                             <Servant.API.ReqBody.ReqBody
                                '[Servant.API.ContentTypes.JSON] CommonServer.File
                              Servant.API.Sub.:> Servant.API.Verbs.Verb
                                                   'Network.HTTP.Types.Method.POST
                                                   200
                                                   '[Servant.API.ContentTypes.JSON]
                                                   CommonServer.Response>_N
                             <'[]>_N))
                   @ ()
                   (Data.Proxy.Proxy
                      @ *
                      @ (Servant.API.ReqBody.ReqBody
                           '[Servant.API.ContentTypes.JSON] CommonServer.Ticket
                         Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                               '[Servant.API.ContentTypes.JSON] CommonServer.File
                                             Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                  '[Servant.API.ContentTypes.JSON]
                                                                  CommonServer.Response)))
                   Servant.Server.Internal.Context.$WEmptyContext
                   DirectoryServer.directoryApp24
                     `cast`
                   (Servant.Server.Internal.RoutingApplication.Delayed
                      <()>_R
                      (Sub (Servant.Server.Internal.D:R:ServerTTYPE:>m4[0]
                                <*>_N
                                <"close">_N
                                <Servant.API.ReqBody.ReqBody
                                   '[Servant.API.ContentTypes.JSON] CommonServer.Ticket
                                 Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                                       '[Servant.API.ContentTypes.JSON]
                                                       CommonServer.File
                                                     Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                          '[Servant.API.ContentTypes.JSON]
                                                                          CommonServer.Response)>_N
                                <Control.Monad.Trans.Except.ExceptT
                                   Servant.Server.Internal.ServantErr.ServantErr
                                   GHC.Types.IO>_N)))_R) -}
4e6e77b2550c0a99d7838f90fa39ecf4
  directoryApp24 ::
    Servant.Server.Internal.RoutingApplication.Delayed
      ()
      (Servant.Server.Internal.Server
         ("close"
          Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                '[Servant.API.ContentTypes.JSON] CommonServer.Ticket
                              Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                                    '[Servant.API.ContentTypes.JSON]
                                                    CommonServer.File
                                                  Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                       '[Servant.API.ContentTypes.JSON]
                                                                       CommonServer.Response))))
  {- Unfolding: (Servant.Server.Internal.RoutingApplication.Delayed
                   @ ()
                   @ (Servant.Server.Internal.Server
                        ("close"
                         Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                               '[Servant.API.ContentTypes.JSON] CommonServer.Ticket
                                             Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                                                   '[Servant.API.ContentTypes.JSON]
                                                                   CommonServer.File
                                                                 Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                                      '[Servant.API.ContentTypes.JSON]
                                                                                      CommonServer.Response))))
                   @ ()
                   @ ()
                   @ ()
                   (Servant.Server.Internal.RoutingApplication.emptyDelayed2 @ ())
                     `cast`
                   (<()>_R
                    ->_R Trans
                             (<Network.Wai.Internal.Request>_R
                              ->_R Sym (GHC.Types.N:IO[0]
                                            <Servant.Server.Internal.RoutingApplication.RouteResult
                                               ()>_R))
                             (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                       <()>_R)))
                   Servant.Server.Internal.RoutingApplication.emptyDelayed1
                     `cast`
                   (Trans
                        (<Network.Wai.Internal.Request>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Servant.Server.Internal.RoutingApplication.RouteResult
                                          ()>_R))
                        (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                  <()>_R)))
                   Servant.Server.Internal.RoutingApplication.emptyDelayed1
                     `cast`
                   (Trans
                        (<Network.Wai.Internal.Request>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Servant.Server.Internal.RoutingApplication.RouteResult
                                          ()>_R))
                        (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                  <()>_R)))
                   Servant.Server.Internal.RoutingApplication.emptyDelayed1
                     `cast`
                   (Trans
                        (<Network.Wai.Internal.Request>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Servant.Server.Internal.RoutingApplication.RouteResult
                                          ()>_R))
                        (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                  <()>_R)))
                   DirectoryServer.directoryApp25) -}
072eadb07fd5511aeee0fb76708e0e5b
  directoryApp25 ::
    ()
    -> ()
    -> ()
    -> Network.Wai.Internal.Request
    -> Servant.Server.Internal.RoutingApplication.RouteResult
         (Servant.Server.Internal.Server
            ("close"
             Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                   '[Servant.API.ContentTypes.JSON] CommonServer.Ticket
                                 Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                                       '[Servant.API.ContentTypes.JSON]
                                                       CommonServer.File
                                                     Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                          '[Servant.API.ContentTypes.JSON]
                                                                          CommonServer.Response))))
  {- Arity: 4,
     Unfolding: (\ (c :: ())
                   (a1 :: ())
                   (b1 :: ())
                   (req :: Network.Wai.Internal.Request) ->
                 DirectoryServer.directoryApp26) -}
0bc7f07b95d019985e9cb5df10db083c
  directoryApp26 ::
    Servant.Server.Internal.RoutingApplication.RouteResult
      (Servant.Server.Internal.Server
         ("close"
          Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                '[Servant.API.ContentTypes.JSON] CommonServer.Ticket
                              Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                                    '[Servant.API.ContentTypes.JSON]
                                                    CommonServer.File
                                                  Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                       '[Servant.API.ContentTypes.JSON]
                                                                       CommonServer.Response))))
  {- Unfolding: (Servant.Server.Internal.RoutingApplication.Route
                   @ (Servant.Server.Internal.Server
                        ("close"
                         Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                               '[Servant.API.ContentTypes.JSON] CommonServer.Ticket
                                             Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                                                   '[Servant.API.ContentTypes.JSON]
                                                                   CommonServer.File
                                                                 Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                                      '[Servant.API.ContentTypes.JSON]
                                                                                      CommonServer.Response))))
                   DirectoryServer.closeFile1
                     `cast`
                   (Trans
                        (<CommonServer.Ticket>_R
                         ->_R Trans
                                  (<CommonServer.File>_R
                                   ->_R Trans
                                            (Sym (GHC.Types.N:IO[0]
                                                      <Data.Either.Either
                                                         Servant.Server.Internal.ServantErr.ServantErr
                                                         CommonServer.Response>_R))
                                            (Trans
                                                 (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                           <Servant.Server.Internal.ServantErr.ServantErr>_N
                                                           <GHC.Types.IO>_R
                                                           <CommonServer.Response>_N))
                                                 (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPEVerbm0[0]
                                                                <Network.HTTP.Types.Method.StdMethod>_N
                                                                <'[Servant.API.ContentTypes.JSON]>_N
                                                                <CommonServer.Response>_N
                                                                <'Network.HTTP.Types.Method.POST>_N
                                                                <200>_N
                                                                <Control.Monad.Trans.Except.ExceptT
                                                                   Servant.Server.Internal.ServantErr.ServantErr
                                                                   GHC.Types.IO>_N)))))
                                  (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPE:>m5[0]
                                                 <*>_N
                                                 <'[Servant.API.ContentTypes.JSON]>_N
                                                 <CommonServer.File>_N
                                                 <Servant.API.Verbs.Verb
                                                    'Network.HTTP.Types.Method.POST
                                                    200
                                                    '[Servant.API.ContentTypes.JSON]
                                                    CommonServer.Response>_N
                                                 <Control.Monad.Trans.Except.ExceptT
                                                    Servant.Server.Internal.ServantErr.ServantErr
                                                    GHC.Types.IO>_N))))
                        (Trans
                             (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPE:>m5[0]
                                            <*>_N
                                            <'[Servant.API.ContentTypes.JSON]>_N
                                            <CommonServer.Ticket>_N
                                            <Servant.API.ReqBody.ReqBody
                                               '[Servant.API.ContentTypes.JSON] CommonServer.File
                                             Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                  '[Servant.API.ContentTypes.JSON]
                                                                  CommonServer.Response>_N
                                            <Control.Monad.Trans.Except.ExceptT
                                               Servant.Server.Internal.ServantErr.ServantErr
                                               GHC.Types.IO>_N)))
                             (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPE:>m4[0]
                                            <*>_N
                                            <"close">_N
                                            <Servant.API.ReqBody.ReqBody
                                               '[Servant.API.ContentTypes.JSON] CommonServer.Ticket
                                             Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                                                   '[Servant.API.ContentTypes.JSON]
                                                                   CommonServer.File
                                                                 Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                                      '[Servant.API.ContentTypes.JSON]
                                                                                      CommonServer.Response)>_N
                                            <Control.Monad.Trans.Except.ExceptT
                                               Servant.Server.Internal.ServantErr.ServantErr
                                               GHC.Types.IO>_N)))))) -}
128363d345184b8c19467fe2355f7c4c
  directoryApp27 ::
    Data.Proxy.Proxy
      (Servant.API.ReqBody.ReqBody
         '[Servant.API.ContentTypes.JSON] CommonServer.File
       Servant.API.Sub.:> Servant.API.Verbs.Verb
                            'Network.HTTP.Types.Method.POST
                            200
                            '[Servant.API.ContentTypes.JSON]
                            CommonServer.Response)
    -> Servant.Server.Internal.Context.Context '[]
    -> Servant.Server.Internal.RoutingApplication.Delayed
         env
         (Servant.Server.Internal.Server
            (Servant.API.ReqBody.ReqBody
               '[Servant.API.ContentTypes.JSON] CommonServer.File
             Servant.API.Sub.:> Servant.API.Verbs.Verb
                                  'Network.HTTP.Types.Method.POST
                                  200
                                  '[Servant.API.ContentTypes.JSON]
                                  CommonServer.Response))
    -> Servant.Server.Internal.Router.Router env
  {- Arity: 3, Strictness: <S,1*H><L,U><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ env
                   (w2 :: Data.Proxy.Proxy
                            (Servant.API.ReqBody.ReqBody
                               '[Servant.API.ContentTypes.JSON] CommonServer.File
                             Servant.API.Sub.:> Servant.API.Verbs.Verb
                                                  'Network.HTTP.Types.Method.POST
                                                  200
                                                  '[Servant.API.ContentTypes.JSON]
                                                  CommonServer.Response))
                   (w3 :: Servant.Server.Internal.Context.Context '[])
                   (w4 :: Servant.Server.Internal.RoutingApplication.Delayed
                            env
                            (Servant.Server.Internal.Server
                               (Servant.API.ReqBody.ReqBody
                                  '[Servant.API.ContentTypes.JSON] CommonServer.File
                                Servant.API.Sub.:> Servant.API.Verbs.Verb
                                                     'Network.HTTP.Types.Method.POST
                                                     200
                                                     '[Servant.API.ContentTypes.JSON]
                                                     CommonServer.Response))) ->
                 case w2 of w5 { Data.Proxy.Proxy ->
                 Servant.Server.Internal.$w$croute2
                   @ *
                   @ '[Servant.API.ContentTypes.JSON]
                   @ CommonServer.File
                   @ (Servant.API.Verbs.Verb
                        'Network.HTTP.Types.Method.POST
                        200
                        '[Servant.API.ContentTypes.JSON]
                        CommonServer.Response)
                   @ '[]
                   DirectoryServer.directoryApp28
                     `cast`
                   (Sym (Servant.API.ContentTypes.N:AllCTUnrender[0]
                             <'[Servant.API.ContentTypes.JSON]>_N <CommonServer.File>_N))
                   DirectoryServer.directoryApp16
                     `cast`
                   (Sym (Servant.Server.Internal.N:HasServer[0]
                             <*>_N
                             <Servant.API.Verbs.Verb
                                'Network.HTTP.Types.Method.POST
                                200
                                '[Servant.API.ContentTypes.JSON]
                                CommonServer.Response>_N
                             <'[]>_N))
                   @ env
                   (Data.Proxy.Proxy
                      @ *
                      @ (Servant.API.ReqBody.ReqBody
                           '[Servant.API.ContentTypes.JSON] CommonServer.File
                         Servant.API.Sub.:> Servant.API.Verbs.Verb
                                              'Network.HTTP.Types.Method.POST
                                              200
                                              '[Servant.API.ContentTypes.JSON]
                                              CommonServer.Response))
                   w3
                   w4 }) -}
10cc7d287a45471d10a43b7a63a5357b
  directoryApp28 ::
    Data.Proxy.Proxy '[Servant.API.ContentTypes.JSON]
    -> Data.ByteString.Lazy.Internal.ByteString
    -> Data.ByteString.Lazy.Internal.ByteString
    -> GHC.Base.Maybe
         (Data.Either.Either GHC.Base.String CommonServer.File)
  {- Arity: 3, Strictness: <L,A><L,1*U><L,U>,
     Unfolding: InlineRule (3, True, True)
                (\ (w1 :: Data.Proxy.Proxy '[Servant.API.ContentTypes.JSON])
                   (w2 :: Data.ByteString.Lazy.Internal.ByteString)
                   (w3 :: Data.ByteString.Lazy.Internal.ByteString) ->
                 Servant.API.ContentTypes.$w$chandleCTypeH
                   @ '[Servant.API.ContentTypes.JSON]
                   @ CommonServer.File
                   DirectoryServer.$s$fAllMimeUnrender:a4
                   w2
                   w3) -}
8d6887dfdde00bb0856b0a401e6e3225
  directoryApp29 ::
    Data.Proxy.Proxy '[Servant.API.ContentTypes.JSON]
    -> Data.ByteString.Lazy.Internal.ByteString
    -> Data.ByteString.Lazy.Internal.ByteString
    -> GHC.Base.Maybe
         (Data.Either.Either GHC.Base.String CommonServer.Ticket)
  {- Arity: 3, Strictness: <L,A><L,1*U><L,U>,
     Unfolding: InlineRule (3, True, True)
                (\ (w1 :: Data.Proxy.Proxy '[Servant.API.ContentTypes.JSON])
                   (w2 :: Data.ByteString.Lazy.Internal.ByteString)
                   (w3 :: Data.ByteString.Lazy.Internal.ByteString) ->
                 Servant.API.ContentTypes.$w$chandleCTypeH
                   @ '[Servant.API.ContentTypes.JSON]
                   @ CommonServer.Ticket
                   DirectoryServer.$s$fAllMimeUnrender:a
                   w2
                   w3) -}
af58e73a9b8a2d62772279cc75db45af
  directoryApp3 ::
    Servant.Server.Internal.Router.Router'
      () Servant.Server.Internal.RoutingApplication.RoutingApplication
  {- Unfolding: (Servant.Server.Internal.Router.choice
                   @ ()
                   @ Servant.Server.Internal.RoutingApplication.RoutingApplication
                   DirectoryServer.directoryApp21
                   DirectoryServer.directoryApp4) -}
dae5b97b7b15ef2fb43c9e1fdbe23ac3
  directoryApp30 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        8#
                        s1 of ds1 { (#,#) ipv ipv1 ->
                 Servant.Server.Internal.$wouter
                   (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                   Servant.Server.Internal.$fHasServerTYPE:>context20
                   DirectoryServer.directoryApp31
                   0#
                   ipv }) -}
72b65b7db6115e9a44e9959cbebde7f6
  directoryApp31 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "close"#) -}
bfbaadc6d0326cce560a8e4739c6fb6d
  directoryApp32 ::
    Servant.Server.Internal.Router.Router'
      () Servant.Server.Internal.RoutingApplication.RoutingApplication
  {- Unfolding: (Servant.Server.Internal.Router.StaticRouter
                   @ ()
                   @ Servant.Server.Internal.RoutingApplication.RoutingApplication
                   DirectoryServer.directoryApp33
                   (GHC.Types.[]
                      @ (()
                         -> Servant.Server.Internal.RoutingApplication.RoutingApplication))) -}
4a7bc2c643490ecd91a1cd760359e479
  directoryApp33 ::
    Data.Map.Base.Map
      Data.Text.Internal.Text
      (Servant.Server.Internal.Router.Router'
         () Servant.Server.Internal.RoutingApplication.RoutingApplication)
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        DirectoryServer.directoryApp42 of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of dt { Data.Text.Internal.Text ipv2 ipv3 ipv4 ->
                 Data.Map.Base.Bin
                   @ Data.Text.Internal.Text
                   @ (Servant.Server.Internal.Router.Router'
                        () Servant.Server.Internal.RoutingApplication.RoutingApplication)
                   1#
                   dt
                   DirectoryServer.directoryApp34
                   (Data.Map.Base.Tip
                      @ Data.Text.Internal.Text
                      @ (Servant.Server.Internal.Router.Router'
                           () Servant.Server.Internal.RoutingApplication.RoutingApplication))
                   (Data.Map.Base.Tip
                      @ Data.Text.Internal.Text
                      @ (Servant.Server.Internal.Router.Router'
                           ()
                           Servant.Server.Internal.RoutingApplication.RoutingApplication)) } }) -}
cf00465c1e371b723e9dfdac9d03bbc8
  directoryApp34 :: Servant.Server.Internal.Router.Router ()
  {- Unfolding: (Servant.Server.Internal.$w$croute2
                   @ *
                   @ '[Servant.API.ContentTypes.JSON]
                   @ CommonServer.Ticket
                   @ (Servant.API.ReqBody.ReqBody
                        '[Servant.API.ContentTypes.JSON] GHC.Base.String
                      Servant.API.Sub.:> Servant.API.Verbs.Post
                                           '[Servant.API.ContentTypes.JSON] CommonServer.File)
                   @ '[]
                   DirectoryServer.directoryApp29
                     `cast`
                   (Sym (Servant.API.ContentTypes.N:AllCTUnrender[0]
                             <'[Servant.API.ContentTypes.JSON]>_N <CommonServer.Ticket>_N))
                   DirectoryServer.directoryApp39
                     `cast`
                   (Sym (Servant.Server.Internal.N:HasServer[0]
                             <*>_N
                             <Servant.API.ReqBody.ReqBody
                                '[Servant.API.ContentTypes.JSON] [GHC.Types.Char]
                              Servant.API.Sub.:> Servant.API.Verbs.Verb
                                                   'Network.HTTP.Types.Method.POST
                                                   200
                                                   '[Servant.API.ContentTypes.JSON]
                                                   CommonServer.File>_N
                             <'[]>_N))
                   @ ()
                   (Data.Proxy.Proxy
                      @ *
                      @ (Servant.API.ReqBody.ReqBody
                           '[Servant.API.ContentTypes.JSON] CommonServer.Ticket
                         Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                               '[Servant.API.ContentTypes.JSON] GHC.Base.String
                                             Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                  '[Servant.API.ContentTypes.JSON]
                                                                  CommonServer.File)))
                   Servant.Server.Internal.Context.$WEmptyContext
                   DirectoryServer.directoryApp35
                     `cast`
                   (Servant.Server.Internal.RoutingApplication.Delayed
                      <()>_R
                      (Sub (Servant.Server.Internal.D:R:ServerTTYPE:>m4[0]
                                <*>_N
                                <"open">_N
                                <Servant.API.ReqBody.ReqBody
                                   '[Servant.API.ContentTypes.JSON] CommonServer.Ticket
                                 Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                                       '[Servant.API.ContentTypes.JSON]
                                                       GHC.Base.String
                                                     Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                          '[Servant.API.ContentTypes.JSON]
                                                                          CommonServer.File)>_N
                                <Control.Monad.Trans.Except.ExceptT
                                   Servant.Server.Internal.ServantErr.ServantErr
                                   GHC.Types.IO>_N)))_R) -}
c392d65f877ab485e62dcbfdc7a8022e
  directoryApp35 ::
    Servant.Server.Internal.RoutingApplication.Delayed
      ()
      (Servant.Server.Internal.Server
         ("open"
          Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                '[Servant.API.ContentTypes.JSON] CommonServer.Ticket
                              Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                                    '[Servant.API.ContentTypes.JSON] GHC.Base.String
                                                  Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                       '[Servant.API.ContentTypes.JSON]
                                                                       CommonServer.File))))
  {- Unfolding: (Servant.Server.Internal.RoutingApplication.Delayed
                   @ ()
                   @ (Servant.Server.Internal.Server
                        ("open"
                         Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                               '[Servant.API.ContentTypes.JSON] CommonServer.Ticket
                                             Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                                                   '[Servant.API.ContentTypes.JSON]
                                                                   GHC.Base.String
                                                                 Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                                      '[Servant.API.ContentTypes.JSON]
                                                                                      CommonServer.File))))
                   @ ()
                   @ ()
                   @ ()
                   (Servant.Server.Internal.RoutingApplication.emptyDelayed2 @ ())
                     `cast`
                   (<()>_R
                    ->_R Trans
                             (<Network.Wai.Internal.Request>_R
                              ->_R Sym (GHC.Types.N:IO[0]
                                            <Servant.Server.Internal.RoutingApplication.RouteResult
                                               ()>_R))
                             (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                       <()>_R)))
                   Servant.Server.Internal.RoutingApplication.emptyDelayed1
                     `cast`
                   (Trans
                        (<Network.Wai.Internal.Request>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Servant.Server.Internal.RoutingApplication.RouteResult
                                          ()>_R))
                        (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                  <()>_R)))
                   Servant.Server.Internal.RoutingApplication.emptyDelayed1
                     `cast`
                   (Trans
                        (<Network.Wai.Internal.Request>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Servant.Server.Internal.RoutingApplication.RouteResult
                                          ()>_R))
                        (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                  <()>_R)))
                   Servant.Server.Internal.RoutingApplication.emptyDelayed1
                     `cast`
                   (Trans
                        (<Network.Wai.Internal.Request>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Servant.Server.Internal.RoutingApplication.RouteResult
                                          ()>_R))
                        (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                  <()>_R)))
                   DirectoryServer.directoryApp36) -}
c6413bd6154eaa17bd97b42b55cbd543
  directoryApp36 ::
    ()
    -> ()
    -> ()
    -> Network.Wai.Internal.Request
    -> Servant.Server.Internal.RoutingApplication.RouteResult
         (Servant.Server.Internal.Server
            ("open"
             Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                   '[Servant.API.ContentTypes.JSON] CommonServer.Ticket
                                 Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                                       '[Servant.API.ContentTypes.JSON]
                                                       GHC.Base.String
                                                     Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                          '[Servant.API.ContentTypes.JSON]
                                                                          CommonServer.File))))
  {- Arity: 4,
     Unfolding: (\ (c :: ())
                   (a1 :: ())
                   (b1 :: ())
                   (req :: Network.Wai.Internal.Request) ->
                 DirectoryServer.directoryApp37) -}
89f813c64261105ce97a1c4646fed5ad
  directoryApp37 ::
    Servant.Server.Internal.RoutingApplication.RouteResult
      (Servant.Server.Internal.Server
         ("open"
          Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                '[Servant.API.ContentTypes.JSON] CommonServer.Ticket
                              Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                                    '[Servant.API.ContentTypes.JSON] GHC.Base.String
                                                  Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                       '[Servant.API.ContentTypes.JSON]
                                                                       CommonServer.File))))
  {- Unfolding: (Servant.Server.Internal.RoutingApplication.Route
                   @ (Servant.Server.Internal.Server
                        ("open"
                         Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                               '[Servant.API.ContentTypes.JSON] CommonServer.Ticket
                                             Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                                                   '[Servant.API.ContentTypes.JSON]
                                                                   GHC.Base.String
                                                                 Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                                      '[Servant.API.ContentTypes.JSON]
                                                                                      CommonServer.File))))
                   DirectoryServer.directoryApp38
                     `cast`
                   (Trans
                        (<CommonServer.Ticket>_R
                         ->_R Trans
                                  (<[GHC.Types.Char]>_R
                                   ->_R Trans
                                            (Sym (GHC.Types.N:IO[0]
                                                      <Data.Either.Either
                                                         Servant.Server.Internal.ServantErr.ServantErr
                                                         CommonServer.File>_R))
                                            (Trans
                                                 (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                           <Servant.Server.Internal.ServantErr.ServantErr>_N
                                                           <GHC.Types.IO>_R
                                                           <CommonServer.File>_N))
                                                 (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPEVerbm0[0]
                                                                <Network.HTTP.Types.Method.StdMethod>_N
                                                                <'[Servant.API.ContentTypes.JSON]>_N
                                                                <CommonServer.File>_N
                                                                <'Network.HTTP.Types.Method.POST>_N
                                                                <200>_N
                                                                <Control.Monad.Trans.Except.ExceptT
                                                                   Servant.Server.Internal.ServantErr.ServantErr
                                                                   GHC.Types.IO>_N)))))
                                  (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPE:>m5[0]
                                                 <*>_N
                                                 <'[Servant.API.ContentTypes.JSON]>_N
                                                 <[GHC.Types.Char]>_N
                                                 <Servant.API.Verbs.Verb
                                                    'Network.HTTP.Types.Method.POST
                                                    200
                                                    '[Servant.API.ContentTypes.JSON]
                                                    CommonServer.File>_N
                                                 <Control.Monad.Trans.Except.ExceptT
                                                    Servant.Server.Internal.ServantErr.ServantErr
                                                    GHC.Types.IO>_N))))
                        (Trans
                             (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPE:>m5[0]
                                            <*>_N
                                            <'[Servant.API.ContentTypes.JSON]>_N
                                            <CommonServer.Ticket>_N
                                            <Servant.API.ReqBody.ReqBody
                                               '[Servant.API.ContentTypes.JSON] GHC.Base.String
                                             Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                  '[Servant.API.ContentTypes.JSON]
                                                                  CommonServer.File>_N
                                            <Control.Monad.Trans.Except.ExceptT
                                               Servant.Server.Internal.ServantErr.ServantErr
                                               GHC.Types.IO>_N)))
                             (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPE:>m4[0]
                                            <*>_N
                                            <"open">_N
                                            <Servant.API.ReqBody.ReqBody
                                               '[Servant.API.ContentTypes.JSON] CommonServer.Ticket
                                             Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                                                   '[Servant.API.ContentTypes.JSON]
                                                                   GHC.Base.String
                                                                 Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                                      '[Servant.API.ContentTypes.JSON]
                                                                                      CommonServer.File)>_N
                                            <Control.Monad.Trans.Except.ExceptT
                                               Servant.Server.Internal.ServantErr.ServantErr
                                               GHC.Types.IO>_N)))))) -}
c58eaa42d4f4821927491928b1619375
  directoryApp38 ::
    CommonServer.Ticket
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            Servant.Server.Internal.ServantErr.ServantErr CommonServer.File #)
  {- Arity: 3, Strictness: <L,1*U(1*U,1*U)><L,U><S,U> -}
b7c6d11176fc14d2a2d0b7789b532a84
  directoryApp39 ::
    Data.Proxy.Proxy
      (Servant.API.ReqBody.ReqBody
         '[Servant.API.ContentTypes.JSON] [GHC.Types.Char]
       Servant.API.Sub.:> Servant.API.Verbs.Verb
                            'Network.HTTP.Types.Method.POST
                            200
                            '[Servant.API.ContentTypes.JSON]
                            CommonServer.File)
    -> Servant.Server.Internal.Context.Context '[]
    -> Servant.Server.Internal.RoutingApplication.Delayed
         env
         (Servant.Server.Internal.Server
            (Servant.API.ReqBody.ReqBody
               '[Servant.API.ContentTypes.JSON] [GHC.Types.Char]
             Servant.API.Sub.:> Servant.API.Verbs.Verb
                                  'Network.HTTP.Types.Method.POST
                                  200
                                  '[Servant.API.ContentTypes.JSON]
                                  CommonServer.File))
    -> Servant.Server.Internal.Router.Router env
  {- Arity: 3,
     Unfolding: (\ @ env
                   (w2 :: Data.Proxy.Proxy
                            (Servant.API.ReqBody.ReqBody
                               '[Servant.API.ContentTypes.JSON] [GHC.Types.Char]
                             Servant.API.Sub.:> Servant.API.Verbs.Verb
                                                  'Network.HTTP.Types.Method.POST
                                                  200
                                                  '[Servant.API.ContentTypes.JSON]
                                                  CommonServer.File))[OneShot]
                   (w3 :: Servant.Server.Internal.Context.Context '[])[OneShot]
                   (w4 :: Servant.Server.Internal.RoutingApplication.Delayed
                            env
                            (Servant.Server.Internal.Server
                               (Servant.API.ReqBody.ReqBody
                                  '[Servant.API.ContentTypes.JSON] [GHC.Types.Char]
                                Servant.API.Sub.:> Servant.API.Verbs.Verb
                                                     'Network.HTTP.Types.Method.POST
                                                     200
                                                     '[Servant.API.ContentTypes.JSON]
                                                     CommonServer.File)))[OneShot] ->
                 case w2 of w5 { Data.Proxy.Proxy ->
                 Servant.Server.Internal.$w$croute2
                   @ *
                   @ '[Servant.API.ContentTypes.JSON]
                   @ [GHC.Types.Char]
                   @ (Servant.API.Verbs.Verb
                        'Network.HTTP.Types.Method.POST
                        200
                        '[Servant.API.ContentTypes.JSON]
                        CommonServer.File)
                   @ '[]
                   DirectoryServer.directoryApp41
                     `cast`
                   (Sym (Servant.API.ContentTypes.N:AllCTUnrender[0]
                             <'[Servant.API.ContentTypes.JSON]>_N <[GHC.Types.Char]>_N))
                   DirectoryServer.directoryApp40
                     `cast`
                   (Sym (Servant.Server.Internal.N:HasServer[0]
                             <*>_N
                             <Servant.API.Verbs.Verb
                                'Network.HTTP.Types.Method.POST
                                200
                                '[Servant.API.ContentTypes.JSON]
                                CommonServer.File>_N
                             <'[]>_N))
                   @ env
                   (Data.Proxy.Proxy
                      @ *
                      @ (Servant.API.ReqBody.ReqBody
                           '[Servant.API.ContentTypes.JSON] [GHC.Types.Char]
                         Servant.API.Sub.:> Servant.API.Verbs.Verb
                                              'Network.HTTP.Types.Method.POST
                                              200
                                              '[Servant.API.ContentTypes.JSON]
                                              CommonServer.File))
                   w3
                   w4 }) -}
001a5587990542bfd6db1de99f57e437
  directoryApp4 ::
    Servant.Server.Internal.Router.Router'
      () Servant.Server.Internal.RoutingApplication.RoutingApplication
  {- Unfolding: (Servant.Server.Internal.Router.StaticRouter
                   @ ()
                   @ Servant.Server.Internal.RoutingApplication.RoutingApplication
                   DirectoryServer.directoryApp5
                   (GHC.Types.[]
                      @ (()
                         -> Servant.Server.Internal.RoutingApplication.RoutingApplication))) -}
52c27222f476275b791a9bc4c329eadf
  directoryApp40 ::
    Data.Proxy.Proxy
      (Servant.API.Verbs.Verb
         'Network.HTTP.Types.Method.POST
         200
         '[Servant.API.ContentTypes.JSON]
         CommonServer.File)
    -> Servant.Server.Internal.Context.Context '[]
    -> Servant.Server.Internal.RoutingApplication.Delayed
         env
         (Servant.Server.Internal.Server
            (Servant.API.Verbs.Verb
               'Network.HTTP.Types.Method.POST
               200
               '[Servant.API.ContentTypes.JSON]
               CommonServer.File))
    -> Servant.Server.Internal.Router.Router env
  {- Arity: 2,
     Unfolding: (\ @ env
                   (w3 :: Data.Proxy.Proxy
                            (Servant.API.Verbs.Verb
                               'Network.HTTP.Types.Method.POST
                               200
                               '[Servant.API.ContentTypes.JSON]
                               CommonServer.File))[OneShot]
                   (w4 :: Servant.Server.Internal.Context.Context '[])[OneShot] ->
                 case w3 of w5 { Data.Proxy.Proxy ->
                 Servant.Server.Internal.$w$croute8
                   @ Network.HTTP.Types.Method.StdMethod
                   @ '[Servant.API.ContentTypes.JSON]
                   @ CommonServer.File
                   @ 'Network.HTTP.Types.Method.POST
                   @ 200
                   @ '[]
                   DirectoryServer.$s$fAllCTRender:a4
                   Servant.API.Verbs.$fReflectMethodStdMethodPOST_$creflectMethod
                     `cast`
                   (Sym (Servant.API.Verbs.N:ReflectMethod[0]
                             <Network.HTTP.Types.Method.StdMethod>_N
                             <'Network.HTTP.Types.Method.POST>_N))
                   DirectoryServer.directoryApp17
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SNat[0] <200>_P))
                        (Sym (GHC.TypeLits.N:KnownNat[0]) <200>_N))
                   @ env
                   (Data.Proxy.Proxy
                      @ *
                      @ (Servant.API.Verbs.Verb
                           'Network.HTTP.Types.Method.POST
                           200
                           '[Servant.API.ContentTypes.JSON]
                           CommonServer.File)) }) -}
d7ef7ed3c2b5c0ef71b12ac5c4b17ef7
  directoryApp41 ::
    Data.Proxy.Proxy '[Servant.API.ContentTypes.JSON]
    -> Data.ByteString.Lazy.Internal.ByteString
    -> Data.ByteString.Lazy.Internal.ByteString
    -> GHC.Base.Maybe
         (Data.Either.Either GHC.Base.String [GHC.Types.Char])
  {- Arity: 3, Strictness: <L,A><L,1*U><L,U>,
     Unfolding: InlineRule (3, True, True)
                (\ (w1 :: Data.Proxy.Proxy '[Servant.API.ContentTypes.JSON])
                   (w2 :: Data.ByteString.Lazy.Internal.ByteString)
                   (w3 :: Data.ByteString.Lazy.Internal.ByteString) ->
                 Servant.API.ContentTypes.$w$chandleCTypeH
                   @ '[Servant.API.ContentTypes.JSON]
                   @ [GHC.Types.Char]
                   DirectoryServer.$s$fAllMimeUnrender:a2
                   w2
                   w3) -}
d8a33ad717b4420fbf23d0d021ff581f
  directoryApp42 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        8#
                        s1 of ds1 { (#,#) ipv ipv1 ->
                 Servant.Server.Internal.$wouter
                   (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                   Servant.Server.Internal.$fHasServerTYPE:>context20
                   DirectoryServer.directoryApp43
                   0#
                   ipv }) -}
bf89aa698fd2d079c476db850a2297b2
  directoryApp43 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "open"#) -}
fe0988dd974317c255b8a0c8677a5f80
  directoryApp44 ::
    Servant.Server.Internal.Router.Router'
      () Servant.Server.Internal.RoutingApplication.RoutingApplication
  {- Unfolding: (Servant.Server.Internal.Router.StaticRouter
                   @ ()
                   @ Servant.Server.Internal.RoutingApplication.RoutingApplication
                   DirectoryServer.directoryApp45
                   (GHC.Types.[]
                      @ (()
                         -> Servant.Server.Internal.RoutingApplication.RoutingApplication))) -}
f4a9ba77a9d43f7c9196e6b9bc679717
  directoryApp45 ::
    Data.Map.Base.Map
      Data.Text.Internal.Text
      (Servant.Server.Internal.Router.Router'
         () Servant.Server.Internal.RoutingApplication.RoutingApplication)
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        DirectoryServer.directoryApp52 of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of dt { Data.Text.Internal.Text ipv2 ipv3 ipv4 ->
                 Data.Map.Base.Bin
                   @ Data.Text.Internal.Text
                   @ (Servant.Server.Internal.Router.Router'
                        () Servant.Server.Internal.RoutingApplication.RoutingApplication)
                   1#
                   dt
                   DirectoryServer.directoryApp46
                   (Data.Map.Base.Tip
                      @ Data.Text.Internal.Text
                      @ (Servant.Server.Internal.Router.Router'
                           () Servant.Server.Internal.RoutingApplication.RoutingApplication))
                   (Data.Map.Base.Tip
                      @ Data.Text.Internal.Text
                      @ (Servant.Server.Internal.Router.Router'
                           ()
                           Servant.Server.Internal.RoutingApplication.RoutingApplication)) } }) -}
f2243e2ee82d08235c55801693e1967b
  directoryApp46 :: Servant.Server.Internal.Router.Router ()
  {- Unfolding: (Servant.Server.Internal.$w$croute2
                   @ *
                   @ '[Servant.API.ContentTypes.JSON]
                   @ CommonServer.Ticket
                   @ (Servant.API.Verbs.Verb
                        'Network.HTTP.Types.Method.POST
                        200
                        '[Servant.API.ContentTypes.JSON]
                        [GHC.IO.FilePath])
                   @ '[]
                   DirectoryServer.directoryApp29
                     `cast`
                   (Sym (Servant.API.ContentTypes.N:AllCTUnrender[0]
                             <'[Servant.API.ContentTypes.JSON]>_N <CommonServer.Ticket>_N))
                   DirectoryServer.directoryApp51
                     `cast`
                   (Sym (Servant.Server.Internal.N:HasServer[0]
                             <*>_N
                             <Servant.API.Verbs.Verb
                                'Network.HTTP.Types.Method.POST
                                200
                                '[Servant.API.ContentTypes.JSON]
                                [GHC.IO.FilePath]>_N
                             <'[]>_N))
                   @ ()
                   (Data.Proxy.Proxy
                      @ *
                      @ (Servant.API.ReqBody.ReqBody
                           '[Servant.API.ContentTypes.JSON] CommonServer.Ticket
                         Servant.API.Sub.:> Servant.API.Verbs.Verb
                                              'Network.HTTP.Types.Method.POST
                                              200
                                              '[Servant.API.ContentTypes.JSON]
                                              [GHC.IO.FilePath]))
                   Servant.Server.Internal.Context.$WEmptyContext
                   DirectoryServer.directoryApp47
                     `cast`
                   (Servant.Server.Internal.RoutingApplication.Delayed
                      <()>_R
                      (Sub (Servant.Server.Internal.D:R:ServerTTYPE:>m4[0]
                                <*>_N
                                <"files">_N
                                <Servant.API.ReqBody.ReqBody
                                   '[Servant.API.ContentTypes.JSON] CommonServer.Ticket
                                 Servant.API.Sub.:> Servant.API.Verbs.Post
                                                      '[Servant.API.ContentTypes.JSON]
                                                      [GHC.IO.FilePath]>_N
                                <Control.Monad.Trans.Except.ExceptT
                                   Servant.Server.Internal.ServantErr.ServantErr
                                   GHC.Types.IO>_N)))_R) -}
2edf45dd4b522a1500bad82af7dd3727
  directoryApp47 ::
    Servant.Server.Internal.RoutingApplication.Delayed
      ()
      (Servant.Server.Internal.Server
         ("files"
          Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                '[Servant.API.ContentTypes.JSON] CommonServer.Ticket
                              Servant.API.Sub.:> Servant.API.Verbs.Post
                                                   '[Servant.API.ContentTypes.JSON]
                                                   [GHC.IO.FilePath])))
  {- Unfolding: (Servant.Server.Internal.RoutingApplication.Delayed
                   @ ()
                   @ (Servant.Server.Internal.Server
                        ("files"
                         Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                               '[Servant.API.ContentTypes.JSON] CommonServer.Ticket
                                             Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                  '[Servant.API.ContentTypes.JSON]
                                                                  [GHC.IO.FilePath])))
                   @ ()
                   @ ()
                   @ ()
                   (Servant.Server.Internal.RoutingApplication.emptyDelayed2 @ ())
                     `cast`
                   (<()>_R
                    ->_R Trans
                             (<Network.Wai.Internal.Request>_R
                              ->_R Sym (GHC.Types.N:IO[0]
                                            <Servant.Server.Internal.RoutingApplication.RouteResult
                                               ()>_R))
                             (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                       <()>_R)))
                   Servant.Server.Internal.RoutingApplication.emptyDelayed1
                     `cast`
                   (Trans
                        (<Network.Wai.Internal.Request>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Servant.Server.Internal.RoutingApplication.RouteResult
                                          ()>_R))
                        (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                  <()>_R)))
                   Servant.Server.Internal.RoutingApplication.emptyDelayed1
                     `cast`
                   (Trans
                        (<Network.Wai.Internal.Request>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Servant.Server.Internal.RoutingApplication.RouteResult
                                          ()>_R))
                        (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                  <()>_R)))
                   Servant.Server.Internal.RoutingApplication.emptyDelayed1
                     `cast`
                   (Trans
                        (<Network.Wai.Internal.Request>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Servant.Server.Internal.RoutingApplication.RouteResult
                                          ()>_R))
                        (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                  <()>_R)))
                   DirectoryServer.directoryApp48) -}
ae7de77b01eb64cdcd69162e488d32f8
  directoryApp48 ::
    ()
    -> ()
    -> ()
    -> Network.Wai.Internal.Request
    -> Servant.Server.Internal.RoutingApplication.RouteResult
         (Servant.Server.Internal.Server
            ("files"
             Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                   '[Servant.API.ContentTypes.JSON] CommonServer.Ticket
                                 Servant.API.Sub.:> Servant.API.Verbs.Post
                                                      '[Servant.API.ContentTypes.JSON]
                                                      [GHC.IO.FilePath])))
  {- Arity: 4,
     Unfolding: (\ (c :: ())
                   (a1 :: ())
                   (b1 :: ())
                   (req :: Network.Wai.Internal.Request) ->
                 DirectoryServer.directoryApp49) -}
5ffeefc7996ca500f859083eb8404aeb
  directoryApp49 ::
    Servant.Server.Internal.RoutingApplication.RouteResult
      (Servant.Server.Internal.Server
         ("files"
          Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                '[Servant.API.ContentTypes.JSON] CommonServer.Ticket
                              Servant.API.Sub.:> Servant.API.Verbs.Post
                                                   '[Servant.API.ContentTypes.JSON]
                                                   [GHC.IO.FilePath])))
  {- Unfolding: (Servant.Server.Internal.RoutingApplication.Route
                   @ (Servant.Server.Internal.Server
                        ("files"
                         Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                               '[Servant.API.ContentTypes.JSON] CommonServer.Ticket
                                             Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                  '[Servant.API.ContentTypes.JSON]
                                                                  [GHC.IO.FilePath])))
                   DirectoryServer.directoryApp50
                     `cast`
                   (Trans
                        (<CommonServer.Ticket>_R
                         ->_R Trans
                                  (Sym (GHC.Types.N:IO[0]
                                            <Data.Either.Either
                                               Servant.Server.Internal.ServantErr.ServantErr
                                               [GHC.Base.String]>_R))
                                  (Trans
                                       (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                 <Servant.Server.Internal.ServantErr.ServantErr>_N
                                                 <GHC.Types.IO>_R
                                                 <[GHC.Base.String]>_N))
                                       (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPEVerbm0[0]
                                                      <Network.HTTP.Types.Method.StdMethod>_N
                                                      <'[Servant.API.ContentTypes.JSON]>_N
                                                      <[GHC.IO.FilePath]>_N
                                                      <'Network.HTTP.Types.Method.POST>_N
                                                      <200>_N
                                                      <Control.Monad.Trans.Except.ExceptT
                                                         Servant.Server.Internal.ServantErr.ServantErr
                                                         GHC.Types.IO>_N)))))
                        (Trans
                             (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPE:>m5[0]
                                            <*>_N
                                            <'[Servant.API.ContentTypes.JSON]>_N
                                            <CommonServer.Ticket>_N
                                            <Servant.API.Verbs.Verb
                                               'Network.HTTP.Types.Method.POST
                                               200
                                               '[Servant.API.ContentTypes.JSON]
                                               [GHC.IO.FilePath]>_N
                                            <Control.Monad.Trans.Except.ExceptT
                                               Servant.Server.Internal.ServantErr.ServantErr
                                               GHC.Types.IO>_N)))
                             (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPE:>m4[0]
                                            <*>_N
                                            <"files">_N
                                            <Servant.API.ReqBody.ReqBody
                                               '[Servant.API.ContentTypes.JSON] CommonServer.Ticket
                                             Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                  '[Servant.API.ContentTypes.JSON]
                                                                  [GHC.IO.FilePath]>_N
                                            <Control.Monad.Trans.Except.ExceptT
                                               Servant.Server.Internal.ServantErr.ServantErr
                                               GHC.Types.IO>_N)))))) -}
398d5675d96d8f2456a901d897c4ceed
  directoryApp5 ::
    Data.Map.Base.Map
      Data.Text.Internal.Text
      (Servant.Server.Internal.Router.Router'
         () Servant.Server.Internal.RoutingApplication.RoutingApplication)
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        DirectoryServer.directoryApp19 of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of dt { Data.Text.Internal.Text ipv2 ipv3 ipv4 ->
                 Data.Map.Base.Bin
                   @ Data.Text.Internal.Text
                   @ (Servant.Server.Internal.Router.Router'
                        () Servant.Server.Internal.RoutingApplication.RoutingApplication)
                   1#
                   dt
                   DirectoryServer.directoryApp6
                   (Data.Map.Base.Tip
                      @ Data.Text.Internal.Text
                      @ (Servant.Server.Internal.Router.Router'
                           () Servant.Server.Internal.RoutingApplication.RoutingApplication))
                   (Data.Map.Base.Tip
                      @ Data.Text.Internal.Text
                      @ (Servant.Server.Internal.Router.Router'
                           ()
                           Servant.Server.Internal.RoutingApplication.RoutingApplication)) } }) -}
ccbbc0454ee45c075d30356513c184ba
  directoryApp50 ::
    CommonServer.Ticket
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            Servant.Server.Internal.ServantErr.ServantErr [GHC.Base.String] #)
  {- Arity: 2, Strictness: <L,1*U(U,U)><S,U> -}
c9768b431920dbc2a6c22b77f6140ca7
  directoryApp51 ::
    Data.Proxy.Proxy
      (Servant.API.Verbs.Verb
         'Network.HTTP.Types.Method.POST
         200
         '[Servant.API.ContentTypes.JSON]
         [GHC.IO.FilePath])
    -> Servant.Server.Internal.Context.Context '[]
    -> Servant.Server.Internal.RoutingApplication.Delayed
         env
         (Servant.Server.Internal.Server
            (Servant.API.Verbs.Verb
               'Network.HTTP.Types.Method.POST
               200
               '[Servant.API.ContentTypes.JSON]
               [GHC.IO.FilePath]))
    -> Servant.Server.Internal.Router.Router env
  {- Arity: 2,
     Unfolding: (\ @ env
                   (w3 :: Data.Proxy.Proxy
                            (Servant.API.Verbs.Verb
                               'Network.HTTP.Types.Method.POST
                               200
                               '[Servant.API.ContentTypes.JSON]
                               [GHC.IO.FilePath]))[OneShot]
                   (w4 :: Servant.Server.Internal.Context.Context '[])[OneShot] ->
                 case w3 of w5 { Data.Proxy.Proxy ->
                 Servant.Server.Internal.$w$croute8
                   @ Network.HTTP.Types.Method.StdMethod
                   @ '[Servant.API.ContentTypes.JSON]
                   @ [GHC.IO.FilePath]
                   @ 'Network.HTTP.Types.Method.POST
                   @ 200
                   @ '[]
                   DirectoryServer.$s$fAllCTRender:a6
                   Servant.API.Verbs.$fReflectMethodStdMethodPOST_$creflectMethod
                     `cast`
                   (Sym (Servant.API.Verbs.N:ReflectMethod[0]
                             <Network.HTTP.Types.Method.StdMethod>_N
                             <'Network.HTTP.Types.Method.POST>_N))
                   DirectoryServer.directoryApp17
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SNat[0] <200>_P))
                        (Sym (GHC.TypeLits.N:KnownNat[0]) <200>_N))
                   @ env
                   (Data.Proxy.Proxy
                      @ *
                      @ (Servant.API.Verbs.Verb
                           'Network.HTTP.Types.Method.POST
                           200
                           '[Servant.API.ContentTypes.JSON]
                           [GHC.IO.FilePath])) }) -}
bfc1d70c248823487ba438f87241ecc7
  directoryApp52 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        8#
                        s1 of ds1 { (#,#) ipv ipv1 ->
                 Servant.Server.Internal.$wouter
                   (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                   Servant.Server.Internal.$fHasServerTYPE:>context20
                   DirectoryServer.directoryApp53
                   0#
                   ipv }) -}
313e9087485ecb2ca0ae046b747aae80
  directoryApp53 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "files"#) -}
72022ec9af6e1782d983521964cb8199
  directoryApp6 :: Servant.Server.Internal.Router.Router ()
  {- Unfolding: (Servant.Server.Internal.$w$croute2
                   @ *
                   @ '[Servant.API.ContentTypes.JSON]
                   @ CommonServer.Identity
                   @ (Servant.API.Verbs.Verb
                        'Network.HTTP.Types.Method.POST
                        200
                        '[Servant.API.ContentTypes.JSON]
                        CommonServer.Response)
                   @ '[]
                   DirectoryServer.directoryApp18
                     `cast`
                   (Sym (Servant.API.ContentTypes.N:AllCTUnrender[0]
                             <'[Servant.API.ContentTypes.JSON]>_N <CommonServer.Identity>_N))
                   DirectoryServer.directoryApp16
                     `cast`
                   (Sym (Servant.Server.Internal.N:HasServer[0]
                             <*>_N
                             <Servant.API.Verbs.Verb
                                'Network.HTTP.Types.Method.POST
                                200
                                '[Servant.API.ContentTypes.JSON]
                                CommonServer.Response>_N
                             <'[]>_N))
                   @ ()
                   (Data.Proxy.Proxy
                      @ *
                      @ (Servant.API.ReqBody.ReqBody
                           '[Servant.API.ContentTypes.JSON] CommonServer.Identity
                         Servant.API.Sub.:> Servant.API.Verbs.Verb
                                              'Network.HTTP.Types.Method.POST
                                              200
                                              '[Servant.API.ContentTypes.JSON]
                                              CommonServer.Response))
                   Servant.Server.Internal.Context.$WEmptyContext
                   DirectoryServer.directoryApp7
                     `cast`
                   (Servant.Server.Internal.RoutingApplication.Delayed
                      <()>_R
                      (Sub (Servant.Server.Internal.D:R:ServerTTYPE:>m4[0]
                                <*>_N
                                <"join">_N
                                <Servant.API.ReqBody.ReqBody
                                   '[Servant.API.ContentTypes.JSON] CommonServer.Identity
                                 Servant.API.Sub.:> Servant.API.Verbs.Post
                                                      '[Servant.API.ContentTypes.JSON]
                                                      CommonServer.Response>_N
                                <Control.Monad.Trans.Except.ExceptT
                                   Servant.Server.Internal.ServantErr.ServantErr
                                   GHC.Types.IO>_N)))_R) -}
88d168ebe65ec946f2fb2894a7f54ea7
  directoryApp7 ::
    Servant.Server.Internal.RoutingApplication.Delayed
      ()
      (Servant.Server.Internal.Server
         ("join"
          Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                '[Servant.API.ContentTypes.JSON] CommonServer.Identity
                              Servant.API.Sub.:> Servant.API.Verbs.Post
                                                   '[Servant.API.ContentTypes.JSON]
                                                   CommonServer.Response)))
  {- Unfolding: (Servant.Server.Internal.RoutingApplication.Delayed
                   @ ()
                   @ (Servant.Server.Internal.Server
                        ("join"
                         Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                               '[Servant.API.ContentTypes.JSON]
                                               CommonServer.Identity
                                             Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                  '[Servant.API.ContentTypes.JSON]
                                                                  CommonServer.Response)))
                   @ ()
                   @ ()
                   @ ()
                   (Servant.Server.Internal.RoutingApplication.emptyDelayed2 @ ())
                     `cast`
                   (<()>_R
                    ->_R Trans
                             (<Network.Wai.Internal.Request>_R
                              ->_R Sym (GHC.Types.N:IO[0]
                                            <Servant.Server.Internal.RoutingApplication.RouteResult
                                               ()>_R))
                             (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                       <()>_R)))
                   Servant.Server.Internal.RoutingApplication.emptyDelayed1
                     `cast`
                   (Trans
                        (<Network.Wai.Internal.Request>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Servant.Server.Internal.RoutingApplication.RouteResult
                                          ()>_R))
                        (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                  <()>_R)))
                   Servant.Server.Internal.RoutingApplication.emptyDelayed1
                     `cast`
                   (Trans
                        (<Network.Wai.Internal.Request>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Servant.Server.Internal.RoutingApplication.RouteResult
                                          ()>_R))
                        (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                  <()>_R)))
                   Servant.Server.Internal.RoutingApplication.emptyDelayed1
                     `cast`
                   (Trans
                        (<Network.Wai.Internal.Request>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Servant.Server.Internal.RoutingApplication.RouteResult
                                          ()>_R))
                        (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                  <()>_R)))
                   DirectoryServer.directoryApp8) -}
6258d07ddf64d73f7d750589512977ae
  directoryApp8 ::
    ()
    -> ()
    -> ()
    -> Network.Wai.Internal.Request
    -> Servant.Server.Internal.RoutingApplication.RouteResult
         (Servant.Server.Internal.Server
            ("join"
             Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                   '[Servant.API.ContentTypes.JSON] CommonServer.Identity
                                 Servant.API.Sub.:> Servant.API.Verbs.Post
                                                      '[Servant.API.ContentTypes.JSON]
                                                      CommonServer.Response)))
  {- Arity: 4,
     Unfolding: (\ (c :: ())
                   (a1 :: ())
                   (b1 :: ())
                   (req :: Network.Wai.Internal.Request) ->
                 DirectoryServer.directoryApp9) -}
438fd5a8d0414e946931d3c8e5a379f0
  directoryApp9 ::
    Servant.Server.Internal.RoutingApplication.RouteResult
      (Servant.Server.Internal.Server
         ("join"
          Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                '[Servant.API.ContentTypes.JSON] CommonServer.Identity
                              Servant.API.Sub.:> Servant.API.Verbs.Post
                                                   '[Servant.API.ContentTypes.JSON]
                                                   CommonServer.Response)))
  {- Unfolding: (Servant.Server.Internal.RoutingApplication.Route
                   @ (Servant.Server.Internal.Server
                        ("join"
                         Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                               '[Servant.API.ContentTypes.JSON]
                                               CommonServer.Identity
                                             Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                  '[Servant.API.ContentTypes.JSON]
                                                                  CommonServer.Response)))
                   DirectoryServer.directoryApp10
                     `cast`
                   (Trans
                        (<CommonServer.Identity>_R
                         ->_R Trans
                                  (Sym (GHC.Types.N:IO[0]
                                            <Data.Either.Either
                                               Servant.Server.Internal.ServantErr.ServantErr
                                               CommonServer.Response>_R))
                                  (Trans
                                       (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                 <Servant.Server.Internal.ServantErr.ServantErr>_N
                                                 <GHC.Types.IO>_R
                                                 <CommonServer.Response>_N))
                                       (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPEVerbm0[0]
                                                      <Network.HTTP.Types.Method.StdMethod>_N
                                                      <'[Servant.API.ContentTypes.JSON]>_N
                                                      <CommonServer.Response>_N
                                                      <'Network.HTTP.Types.Method.POST>_N
                                                      <200>_N
                                                      <Control.Monad.Trans.Except.ExceptT
                                                         Servant.Server.Internal.ServantErr.ServantErr
                                                         GHC.Types.IO>_N)))))
                        (Trans
                             (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPE:>m5[0]
                                            <*>_N
                                            <'[Servant.API.ContentTypes.JSON]>_N
                                            <CommonServer.Identity>_N
                                            <Servant.API.Verbs.Verb
                                               'Network.HTTP.Types.Method.POST
                                               200
                                               '[Servant.API.ContentTypes.JSON]
                                               CommonServer.Response>_N
                                            <Control.Monad.Trans.Except.ExceptT
                                               Servant.Server.Internal.ServantErr.ServantErr
                                               GHC.Types.IO>_N)))
                             (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPE:>m4[0]
                                            <*>_N
                                            <"join">_N
                                            <Servant.API.ReqBody.ReqBody
                                               '[Servant.API.ContentTypes.JSON]
                                               CommonServer.Identity
                                             Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                  '[Servant.API.ContentTypes.JSON]
                                                                  CommonServer.Response>_N
                                            <Control.Monad.Trans.Except.ExceptT
                                               Servant.Server.Internal.ServantErr.ServantErr
                                               GHC.Types.IO>_N)))))) -}
4f73576ccfeb9c527b5d80ac7d71fcb2
  directoryApp_r :: Servant.Server.Internal.Router.Router ()
  {- Unfolding: (Servant.Server.Internal.Router.choice
                   @ ()
                   @ Servant.Server.Internal.RoutingApplication.RoutingApplication
                   DirectoryServer.directoryApp44
                   DirectoryServer.directoryApp2) -}
1117410c7bd2d2e0839aaf65accb1a78
  directoryServer ::
    Servant.Server.Internal.Server CommonServerApi.DirectoryApi
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.directoryServer1
                  `cast`
                (Trans
                     (Trans
                          (<CommonServer.Ticket>_R
                           ->_R Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPEVerbm0[0]
                                              <Network.HTTP.Types.Method.StdMethod>_N
                                              <'[Servant.API.ContentTypes.JSON]>_N
                                              <[GHC.IO.FilePath]>_N
                                              <'Network.HTTP.Types.Method.POST>_N
                                              <200>_N
                                              <Control.Monad.Trans.Except.ExceptT
                                                 Servant.Server.Internal.ServantErr.ServantErr
                                                 GHC.Types.IO>_N)))
                          (Trans
                               (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPE:>m5[0]
                                              <*>_N
                                              <'[Servant.API.ContentTypes.JSON]>_N
                                              <CommonServer.Ticket>_N
                                              <Servant.API.Verbs.Verb
                                                 'Network.HTTP.Types.Method.POST
                                                 200
                                                 '[Servant.API.ContentTypes.JSON]
                                                 [GHC.IO.FilePath]>_N
                                              <Control.Monad.Trans.Except.ExceptT
                                                 Servant.Server.Internal.ServantErr.ServantErr
                                                 GHC.Types.IO>_N)))
                               (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPE:>m4[0]
                                              <*>_N
                                              <"files">_N
                                              <Servant.API.ReqBody.ReqBody
                                                 '[Servant.API.ContentTypes.JSON]
                                                 CommonServer.Ticket
                                               Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                    '[Servant.API.ContentTypes.JSON]
                                                                    [GHC.IO.FilePath]>_N
                                              <Control.Monad.Trans.Except.ExceptT
                                                 Servant.Server.Internal.ServantErr.ServantErr
                                                 GHC.Types.IO>_N))))
                      Servant.API.Alternative.:<|> Trans
                                                       (Trans
                                                            (<CommonServer.Ticket>_R
                                                             ->_R Trans
                                                                      (<[GHC.Types.Char]>_R
                                                                       ->_R Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPEVerbm0[0]
                                                                                          <Network.HTTP.Types.Method.StdMethod>_N
                                                                                          <'[Servant.API.ContentTypes.JSON]>_N
                                                                                          <CommonServer.File>_N
                                                                                          <'Network.HTTP.Types.Method.POST>_N
                                                                                          <200>_N
                                                                                          <Control.Monad.Trans.Except.ExceptT
                                                                                             Servant.Server.Internal.ServantErr.ServantErr
                                                                                             GHC.Types.IO>_N)))
                                                                      (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPE:>m5[0]
                                                                                     <*>_N
                                                                                     <'[Servant.API.ContentTypes.JSON]>_N
                                                                                     <[GHC.Types.Char]>_N
                                                                                     <Servant.API.Verbs.Verb
                                                                                        'Network.HTTP.Types.Method.POST
                                                                                        200
                                                                                        '[Servant.API.ContentTypes.JSON]
                                                                                        CommonServer.File>_N
                                                                                     <Control.Monad.Trans.Except.ExceptT
                                                                                        Servant.Server.Internal.ServantErr.ServantErr
                                                                                        GHC.Types.IO>_N))))
                                                            (Trans
                                                                 (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPE:>m5[0]
                                                                                <*>_N
                                                                                <'[Servant.API.ContentTypes.JSON]>_N
                                                                                <CommonServer.Ticket>_N
                                                                                <Servant.API.ReqBody.ReqBody
                                                                                   '[Servant.API.ContentTypes.JSON]
                                                                                   GHC.Base.String
                                                                                 Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                                                      '[Servant.API.ContentTypes.JSON]
                                                                                                      CommonServer.File>_N
                                                                                <Control.Monad.Trans.Except.ExceptT
                                                                                   Servant.Server.Internal.ServantErr.ServantErr
                                                                                   GHC.Types.IO>_N)))
                                                                 (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPE:>m4[0]
                                                                                <*>_N
                                                                                <"open">_N
                                                                                <Servant.API.ReqBody.ReqBody
                                                                                   '[Servant.API.ContentTypes.JSON]
                                                                                   CommonServer.Ticket
                                                                                 Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                                                                                       '[Servant.API.ContentTypes.JSON]
                                                                                                       GHC.Base.String
                                                                                                     Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                                                                          '[Servant.API.ContentTypes.JSON]
                                                                                                                          CommonServer.File)>_N
                                                                                <Control.Monad.Trans.Except.ExceptT
                                                                                   Servant.Server.Internal.ServantErr.ServantErr
                                                                                   GHC.Types.IO>_N))))
                                                        Servant.API.Alternative.:<|> Trans
                                                                                         (Trans
                                                                                              (<CommonServer.Ticket>_R
                                                                                               ->_R Trans
                                                                                                        (<CommonServer.File>_R
                                                                                                         ->_R Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPEVerbm0[0]
                                                                                                                            <Network.HTTP.Types.Method.StdMethod>_N
                                                                                                                            <'[Servant.API.ContentTypes.JSON]>_N
                                                                                                                            <CommonServer.Response>_N
                                                                                                                            <'Network.HTTP.Types.Method.POST>_N
                                                                                                                            <200>_N
                                                                                                                            <Control.Monad.Trans.Except.ExceptT
                                                                                                                               Servant.Server.Internal.ServantErr.ServantErr
                                                                                                                               GHC.Types.IO>_N)))
                                                                                                        (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPE:>m5[0]
                                                                                                                       <*>_N
                                                                                                                       <'[Servant.API.ContentTypes.JSON]>_N
                                                                                                                       <CommonServer.File>_N
                                                                                                                       <Servant.API.Verbs.Verb
                                                                                                                          'Network.HTTP.Types.Method.POST
                                                                                                                          200
                                                                                                                          '[Servant.API.ContentTypes.JSON]
                                                                                                                          CommonServer.Response>_N
                                                                                                                       <Control.Monad.Trans.Except.ExceptT
                                                                                                                          Servant.Server.Internal.ServantErr.ServantErr
                                                                                                                          GHC.Types.IO>_N))))
                                                                                              (Trans
                                                                                                   (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPE:>m5[0]
                                                                                                                  <*>_N
                                                                                                                  <'[Servant.API.ContentTypes.JSON]>_N
                                                                                                                  <CommonServer.Ticket>_N
                                                                                                                  <Servant.API.ReqBody.ReqBody
                                                                                                                     '[Servant.API.ContentTypes.JSON]
                                                                                                                     CommonServer.File
                                                                                                                   Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                                                                                        '[Servant.API.ContentTypes.JSON]
                                                                                                                                        CommonServer.Response>_N
                                                                                                                  <Control.Monad.Trans.Except.ExceptT
                                                                                                                     Servant.Server.Internal.ServantErr.ServantErr
                                                                                                                     GHC.Types.IO>_N)))
                                                                                                   (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPE:>m4[0]
                                                                                                                  <*>_N
                                                                                                                  <"close">_N
                                                                                                                  <Servant.API.ReqBody.ReqBody
                                                                                                                     '[Servant.API.ContentTypes.JSON]
                                                                                                                     CommonServer.Ticket
                                                                                                                   Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                                                                                                                         '[Servant.API.ContentTypes.JSON]
                                                                                                                                         CommonServer.File
                                                                                                                                       Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                                                                                                            '[Servant.API.ContentTypes.JSON]
                                                                                                                                                            CommonServer.Response)>_N
                                                                                                                  <Control.Monad.Trans.Except.ExceptT
                                                                                                                     Servant.Server.Internal.ServantErr.ServantErr
                                                                                                                     GHC.Types.IO>_N))))
                                                                                          Servant.API.Alternative.:<|> Trans
                                                                                                                           (<CommonServer.Identity>_R
                                                                                                                            ->_R Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPEVerbm0[0]
                                                                                                                                               <Network.HTTP.Types.Method.StdMethod>_N
                                                                                                                                               <'[Servant.API.ContentTypes.JSON]>_N
                                                                                                                                               <CommonServer.Response>_N
                                                                                                                                               <'Network.HTTP.Types.Method.POST>_N
                                                                                                                                               <200>_N
                                                                                                                                               <Control.Monad.Trans.Except.ExceptT
                                                                                                                                                  Servant.Server.Internal.ServantErr.ServantErr
                                                                                                                                                  GHC.Types.IO>_N)))
                                                                                                                           (Trans
                                                                                                                                (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPE:>m5[0]
                                                                                                                                               <*>_N
                                                                                                                                               <'[Servant.API.ContentTypes.JSON]>_N
                                                                                                                                               <CommonServer.Identity>_N
                                                                                                                                               <Servant.API.Verbs.Verb
                                                                                                                                                  'Network.HTTP.Types.Method.POST
                                                                                                                                                  200
                                                                                                                                                  '[Servant.API.ContentTypes.JSON]
                                                                                                                                                  CommonServer.Response>_N
                                                                                                                                               <Control.Monad.Trans.Except.ExceptT
                                                                                                                                                  Servant.Server.Internal.ServantErr.ServantErr
                                                                                                                                                  GHC.Types.IO>_N)))
                                                                                                                                (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPE:>m4[0]
                                                                                                                                               <*>_N
                                                                                                                                               <"join">_N
                                                                                                                                               <Servant.API.ReqBody.ReqBody
                                                                                                                                                  '[Servant.API.ContentTypes.JSON]
                                                                                                                                                  CommonServer.Identity
                                                                                                                                                Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                                                                                                                     '[Servant.API.ContentTypes.JSON]
                                                                                                                                                                     CommonServer.Response>_N
                                                                                                                                               <Control.Monad.Trans.Except.ExceptT
                                                                                                                                                  Servant.Server.Internal.ServantErr.ServantErr
                                                                                                                                                  GHC.Types.IO>_N)))))_R
                                                                                         (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPE:<|>m[0]
                                                                                                        <"close"
                                                                                                         Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                                                                                                               '[Servant.API.ContentTypes.JSON]
                                                                                                                               CommonServer.Ticket
                                                                                                                             Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                                                                                                                                   '[Servant.API.ContentTypes.JSON]
                                                                                                                                                   CommonServer.File
                                                                                                                                                 Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                                                                                                                      '[Servant.API.ContentTypes.JSON]
                                                                                                                                                                      CommonServer.Response))>_N
                                                                                                        <"join"
                                                                                                         Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                                                                                                               '[Servant.API.ContentTypes.JSON]
                                                                                                                               CommonServer.Identity
                                                                                                                             Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                                                                                                  '[Servant.API.ContentTypes.JSON]
                                                                                                                                                  CommonServer.Response)>_N
                                                                                                        <Control.Monad.Trans.Except.ExceptT
                                                                                                           Servant.Server.Internal.ServantErr.ServantErr
                                                                                                           GHC.Types.IO>_N))))_R
                                                       (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPE:<|>m[0]
                                                                      <"open"
                                                                       Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                                                                             '[Servant.API.ContentTypes.JSON]
                                                                                             CommonServer.Ticket
                                                                                           Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                                                                                                 '[Servant.API.ContentTypes.JSON]
                                                                                                                 GHC.Base.String
                                                                                                               Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                                                                                    '[Servant.API.ContentTypes.JSON]
                                                                                                                                    CommonServer.File))>_N
                                                                      <("close"
                                                                        Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                                                                              '[Servant.API.ContentTypes.JSON]
                                                                                              CommonServer.Ticket
                                                                                            Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                                                                                                  '[Servant.API.ContentTypes.JSON]
                                                                                                                  CommonServer.File
                                                                                                                Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                                                                                     '[Servant.API.ContentTypes.JSON]
                                                                                                                                     CommonServer.Response)))
                                                                       Servant.API.Alternative.:<|> ("join"
                                                                                                     Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                                                                                                           '[Servant.API.ContentTypes.JSON]
                                                                                                                           CommonServer.Identity
                                                                                                                         Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                                                                                              '[Servant.API.ContentTypes.JSON]
                                                                                                                                              CommonServer.Response))>_N
                                                                      <Control.Monad.Trans.Except.ExceptT
                                                                         Servant.Server.Internal.ServantErr.ServantErr
                                                                         GHC.Types.IO>_N))))_R
                     (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPE:<|>m[0]
                                    <"files"
                                     Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                                           '[Servant.API.ContentTypes.JSON]
                                                           CommonServer.Ticket
                                                         Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                              '[Servant.API.ContentTypes.JSON]
                                                                              [GHC.IO.FilePath])>_N
                                    <("open"
                                      Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                                            '[Servant.API.ContentTypes.JSON]
                                                            CommonServer.Ticket
                                                          Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                                                                '[Servant.API.ContentTypes.JSON]
                                                                                GHC.Base.String
                                                                              Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                                                   '[Servant.API.ContentTypes.JSON]
                                                                                                   CommonServer.File)))
                                     Servant.API.Alternative.:<|> (("close"
                                                                    Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                                                                          '[Servant.API.ContentTypes.JSON]
                                                                                          CommonServer.Ticket
                                                                                        Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                                                                                              '[Servant.API.ContentTypes.JSON]
                                                                                                              CommonServer.File
                                                                                                            Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                                                                                 '[Servant.API.ContentTypes.JSON]
                                                                                                                                 CommonServer.Response)))
                                                                   Servant.API.Alternative.:<|> ("join"
                                                                                                 Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                                                                                                       '[Servant.API.ContentTypes.JSON]
                                                                                                                       CommonServer.Identity
                                                                                                                     Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                                                                                          '[Servant.API.ContentTypes.JSON]
                                                                                                                                          CommonServer.Response)))>_N
                                    <Control.Monad.Trans.Except.ExceptT
                                       Servant.Server.Internal.ServantErr.ServantErr
                                       GHC.Types.IO>_N)))) -}
9dcea6aeacbbdc7311e9ddef4b91d210
  directoryServer1 ::
    (CommonServer.Ticket
     -> CommonServerApi.ApiHandler [GHC.IO.FilePath])
    Servant.API.Alternative.:<|> ((CommonServer.Ticket
                                   -> GHC.Base.String
                                   -> CommonServerApi.ApiHandler CommonServer.File)
                                  Servant.API.Alternative.:<|> ((CommonServer.Ticket
                                                                 -> CommonServer.File
                                                                 -> CommonServerApi.ApiHandler
                                                                      CommonServer.Response)
                                                                Servant.API.Alternative.:<|> (CommonServer.Identity
                                                                                              -> CommonServerApi.ApiHandler
                                                                                                   CommonServer.Response)))
  {- Strictness: m,
     Unfolding: (Servant.API.Alternative.:<|>
                   @ (CommonServer.Ticket
                      -> CommonServerApi.ApiHandler [GHC.IO.FilePath])
                   @ ((CommonServer.Ticket
                       -> GHC.Base.String -> CommonServerApi.ApiHandler CommonServer.File)
                      Servant.API.Alternative.:<|> ((CommonServer.Ticket
                                                     -> CommonServer.File
                                                     -> CommonServerApi.ApiHandler
                                                          CommonServer.Response)
                                                    Servant.API.Alternative.:<|> (CommonServer.Identity
                                                                                  -> CommonServerApi.ApiHandler
                                                                                       CommonServer.Response)))
                   DirectoryServer.directoryApp50
                     `cast`
                   (<CommonServer.Ticket>_R
                    ->_R Trans
                             (Sym (GHC.Types.N:IO[0]
                                       <Data.Either.Either
                                          Servant.Server.Internal.ServantErr.ServantErr
                                          [GHC.Base.String]>_R))
                             (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                       <Servant.Server.Internal.ServantErr.ServantErr>_N
                                       <GHC.Types.IO>_R
                                       <[GHC.Base.String]>_N)))
                   DirectoryServer.directoryServer2) -}
50003807f78dda9f84c354dd3088ef0c
  directoryServer2 ::
    (CommonServer.Ticket
     -> GHC.Base.String -> CommonServerApi.ApiHandler CommonServer.File)
    Servant.API.Alternative.:<|> ((CommonServer.Ticket
                                   -> CommonServer.File
                                   -> CommonServerApi.ApiHandler CommonServer.Response)
                                  Servant.API.Alternative.:<|> (CommonServer.Identity
                                                                -> CommonServerApi.ApiHandler
                                                                     CommonServer.Response))
  {- Strictness: m,
     Unfolding: (Servant.API.Alternative.:<|>
                   @ (CommonServer.Ticket
                      -> GHC.Base.String -> CommonServerApi.ApiHandler CommonServer.File)
                   @ ((CommonServer.Ticket
                       -> CommonServer.File
                       -> CommonServerApi.ApiHandler CommonServer.Response)
                      Servant.API.Alternative.:<|> (CommonServer.Identity
                                                    -> CommonServerApi.ApiHandler
                                                         CommonServer.Response))
                   DirectoryServer.directoryApp38
                     `cast`
                   (<CommonServer.Ticket>_R
                    ->_R <GHC.Base.String>_R
                    ->_R Trans
                             (Sym (GHC.Types.N:IO[0]
                                       <Data.Either.Either
                                          Servant.Server.Internal.ServantErr.ServantErr
                                          CommonServer.File>_R))
                             (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                       <Servant.Server.Internal.ServantErr.ServantErr>_N
                                       <GHC.Types.IO>_R
                                       <CommonServer.File>_N)))
                   DirectoryServer.directoryServer3) -}
f46a0f2d889317705be2b7cb23f943f2
  directoryServer3 ::
    (CommonServer.Ticket
     -> CommonServer.File
     -> CommonServerApi.ApiHandler CommonServer.Response)
    Servant.API.Alternative.:<|> (CommonServer.Identity
                                  -> CommonServerApi.ApiHandler CommonServer.Response)
  {- Strictness: m,
     Unfolding: (Servant.API.Alternative.:<|>
                   @ (CommonServer.Ticket
                      -> CommonServer.File
                      -> CommonServerApi.ApiHandler CommonServer.Response)
                   @ (CommonServer.Identity
                      -> CommonServerApi.ApiHandler CommonServer.Response)
                   DirectoryServer.closeFile1
                     `cast`
                   (<CommonServer.Ticket>_R
                    ->_R <CommonServer.File>_R
                    ->_R Trans
                             (Sym (GHC.Types.N:IO[0]
                                       <Data.Either.Either
                                          Servant.Server.Internal.ServantErr.ServantErr
                                          CommonServer.Response>_R))
                             (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                       <Servant.Server.Internal.ServantErr.ServantErr>_N
                                       <GHC.Types.IO>_R
                                       <CommonServer.Response>_N)))
                   DirectoryServer.directoryApp10
                     `cast`
                   (<CommonServer.Identity>_R
                    ->_R Trans
                             (Sym (GHC.Types.N:IO[0]
                                       <Data.Either.Either
                                          Servant.Server.Internal.ServantErr.ServantErr
                                          CommonServer.Response>_R))
                             (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                       <Servant.Server.Internal.ServantErr.ServantErr>_N
                                       <GHC.Types.IO>_R
                                       <CommonServer.Response>_N)))) -}
43645ad7b9db6b7ff7f639c4ff6513d3
  downloadFromFileServer ::
    CommonServer.Ticket
    -> GHC.Base.String
    -> CommonServer.Identity
    -> GHC.Types.IO CommonServer.File
  {- Arity: 4, Strictness: <L,A><L,U><L,U(1*U,1*U,A)><S,U>,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.downloadFromFileServer1
                  `cast`
                (<CommonServer.Ticket>_R
                 ->_R <GHC.Base.String>_R
                 ->_R <CommonServer.Identity>_R
                 ->_R Sym (GHC.Types.N:IO[0] <CommonServer.File>_R)) -}
93e2eff63e260bf438b6c0273686da1d
  downloadFromFileServer1 ::
    CommonServer.Ticket
    -> GHC.Base.String
    -> CommonServer.Identity
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, CommonServer.File #)
  {- Arity: 4, Strictness: <L,A><L,U><L,U(1*U,1*U,A)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, True)
                (\ (w :: CommonServer.Ticket)
                   (w1 :: GHC.Base.String)
                   (w2 :: CommonServer.Identity)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 DirectoryServer.$wdownloadFromFileServer w1 w2 w3) -}
1bce99a572c8e49a7c50acad67554187
  downloadFromFileServer2 :: CommonServer.File
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (CommonServer.File
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Types.[] @ GHC.Types.Char)) -}
0c9602e7502b6ac4f7027e0f98decd29
  downloadFromFileServer3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "GET download"#) -}
f2164c1e17bfd102c6c85ff50620a6b7
  fileName :: DirectoryServer.FileMapping -> GHC.IO.FilePath
  RecSel Left DirectoryServer.FileMapping
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLL),1*U(1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: DirectoryServer.FileMapping) ->
                 case ds of wild { DirectoryServer.FileMapping ds1 ds2 ds3 ->
                 ds1 }) -}
a0d7ea66eed75e2da5223dec319ae3e9
  findFileMapping ::
    GHC.Base.String -> GHC.Types.IO DirectoryServer.FileMapping
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.closeFile11
                  `cast`
                (<GHC.Base.String>_R
                 ->_R Sym (GHC.Types.N:IO[0] <DirectoryServer.FileMapping>_R)) -}
b91faa222a05bf8916957b4f2d5ad449
  getAllFileMappings :: GHC.Types.IO [DirectoryServer.FileMapping]
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.getAllFileMappings1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <[DirectoryServer.FileMapping]>_R)) -}
d243ec1f329c809cd50d5dbaf7c3ed6e
  getAllFileMappings1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          [DirectoryServer.FileMapping] #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case CommonServer.logDatabase1
                        DirectoryServer.closeFile10
                        DirectoryServer.closeFile9
                        DirectoryServer.closeFile12
                        DirectoryServer.getAllFileMappings3
                        s of ds1 { (#,#) ipv ipv1 ->
                 case Database.MongoDB.Connection.globalConnectTimeout
                        `cast`
                      (GHC.IORef.N:IORef[0] <Database.MongoDB.Connection.Secs>_N) of wild { GHC.STRef.STRef var# ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ Database.MongoDB.Connection.Secs
                        var#
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv3 of ww { GHC.Types.D# ww1 ->
                 case Database.MongoDB.Connection.$wconnect'
                        ww1
                        MongoDbConnector.connectToDatabase3
                        Database.MongoDB.Connection.defaultPort
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 let {
                   r1 :: Database.MongoDB.Query.MongoContext {- Strictness: m -}
                   = Database.MongoDB.Query.MongoContext
                       ipv5
                       Database.MongoDB.Query.master
                       MongoDbConnector.connectToDatabase2
                 } in
                 case (Database.MongoDB.Query.$wfind
                         @ GHC.Types.IO
                         Control.Monad.IO.Class.$fMonadIOIO
                         Control.Monad.Trans.Control.$fMonadBaseControlIOIO
                         (GHC.Types.[] @ Database.MongoDB.Internal.Protocol.QueryOption)
                         DirectoryServer.getAllFileMappings2
                         (GHC.Types.[] @ Data.Bson.Field)
                         Database.MongoDB.Query.$fSelectQuery1
                         Database.MongoDB.Query.$fSelectQuery1
                         (GHC.Types.[] @ Data.Bson.Field)
                         GHC.Types.False
                         Database.MongoDB.Query.$fSelectQuery1
                         (GHC.Types.[] @ Data.Bson.Field)
                         r1)
                        `cast`
                      (GHC.Types.N:IO[0] <Database.MongoDB.Query.Cursor>_R)
                        ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                 case ((MongoDbConnector.drainCursor_drainCursor'
                          ipv7
                          (GHC.Types.[] @ Data.Bson.Document))
                         `cast`
                       (Control.Monad.Trans.Reader.N:ReaderT[0]
                            <*>_N
                            <Database.MongoDB.Query.MongoContext>_R
                            <GHC.Types.IO>_R
                            <[Data.Bson.Document]>_N)
                         r1)
                        `cast`
                      (GHC.Types.N:IO[0] <[Data.Bson.Document]>_R)
                        ipv6 of ds5 { (#,#) ipv8 ipv9 ->
                 (# ipv8,
                    Data.Maybe.mapMaybe
                      @ [Data.Bson.Field]
                      @ DirectoryServer.FileMapping
                      DirectoryServer.$fFromBSONFileMapping_$cfromBSON
                      ipv9 #) } } } } } } }) -}
be878031315f7c752dddcf21ed9b8168
  getAllFileMappings2 :: Database.MongoDB.Query.Selection
  {- Unfolding: (Database.MongoDB.Query.Select
                   (GHC.Types.[] @ Data.Bson.Field)
                   DirectoryServer.closeFile6) -}
5c94bbbb2d73965661078b5add7e448c
  getAllFileMappings3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ALL"#) -}
c07946fc7a8d03a6991638eeabd44da1
  getAllFileServers :: GHC.Types.IO [CommonServer.Identity]
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.getAllFileServers1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <[CommonServer.Identity]>_R)) -}
03fa2864ed69517defdb6eee384c08a9
  getAllFileServers1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          [CommonServer.Identity] #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case CommonServer.logDatabase1
                        DirectoryServer.closeFile10
                        DirectoryServer.directoryApp14
                        DirectoryServer.closeFile12
                        DirectoryServer.getAllFileMappings3
                        s of ds1 { (#,#) ipv ipv1 ->
                 case Database.MongoDB.Connection.globalConnectTimeout
                        `cast`
                      (GHC.IORef.N:IORef[0] <Database.MongoDB.Connection.Secs>_N) of wild { GHC.STRef.STRef var# ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ Database.MongoDB.Connection.Secs
                        var#
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv3 of ww { GHC.Types.D# ww1 ->
                 case Database.MongoDB.Connection.$wconnect'
                        ww1
                        MongoDbConnector.connectToDatabase3
                        Database.MongoDB.Connection.defaultPort
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 let {
                   r1 :: Database.MongoDB.Query.MongoContext {- Strictness: m -}
                   = Database.MongoDB.Query.MongoContext
                       ipv5
                       Database.MongoDB.Query.master
                       MongoDbConnector.connectToDatabase2
                 } in
                 case (Database.MongoDB.Query.$wfind
                         @ GHC.Types.IO
                         Control.Monad.IO.Class.$fMonadIOIO
                         Control.Monad.Trans.Control.$fMonadBaseControlIOIO
                         (GHC.Types.[] @ Database.MongoDB.Internal.Protocol.QueryOption)
                         DirectoryServer.getAllFileServers2
                         (GHC.Types.[] @ Data.Bson.Field)
                         Database.MongoDB.Query.$fSelectQuery1
                         Database.MongoDB.Query.$fSelectQuery1
                         (GHC.Types.[] @ Data.Bson.Field)
                         GHC.Types.False
                         Database.MongoDB.Query.$fSelectQuery1
                         (GHC.Types.[] @ Data.Bson.Field)
                         r1)
                        `cast`
                      (GHC.Types.N:IO[0] <Database.MongoDB.Query.Cursor>_R)
                        ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                 case ((MongoDbConnector.drainCursor_drainCursor'
                          ipv7
                          (GHC.Types.[] @ Data.Bson.Document))
                         `cast`
                       (Control.Monad.Trans.Reader.N:ReaderT[0]
                            <*>_N
                            <Database.MongoDB.Query.MongoContext>_R
                            <GHC.Types.IO>_R
                            <[Data.Bson.Document]>_N)
                         r1)
                        `cast`
                      (GHC.Types.N:IO[0] <[Data.Bson.Document]>_R)
                        ipv6 of ds5 { (#,#) ipv8 ipv9 ->
                 (# ipv8,
                    Data.Maybe.mapMaybe
                      @ [Data.Bson.Field]
                      @ CommonServer.Identity
                      CommonServer.$fFromBSONIdentity_$cfromBSON
                      ipv9 #) } } } } } } }) -}
fa62f146f5f25d357d69e9c36b918b07
  getAllFileServers2 :: Database.MongoDB.Query.Selection
  {- Unfolding: (Database.MongoDB.Query.Select
                   (GHC.Types.[] @ Data.Bson.Field)
                   DirectoryServer.deleteDatabases2) -}
ab26d308bb93db61ac814fe6fe49c2e4
  getFiles ::
    CommonServer.Ticket -> CommonServerApi.ApiHandler [GHC.IO.FilePath]
  {- Arity: 2, Strictness: <L,1*U(U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.directoryApp50
                  `cast`
                (<CommonServer.Ticket>_R
                 ->_R Trans
                          (Sym (GHC.Types.N:IO[0]
                                    <Data.Either.Either
                                       Servant.Server.Internal.ServantErr.ServantErr
                                       [GHC.Base.String]>_R))
                          (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                    <Servant.Server.Internal.ServantErr.ServantErr>_N
                                    <GHC.Types.IO>_R
                                    <[GHC.Base.String]>_N))) -}
9c33ad0f8646951e24fa4a118305416d
  getFilesFromFileServer ::
    CommonServer.Ticket -> CommonServer.Identity -> GHC.Types.IO ()
  {- Arity: 3, Strictness: <L,1*U(1*U,1*U)><L,U(U,U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.getFilesFromFileServer1
                  `cast`
                (<CommonServer.Ticket>_R
                 ->_R <CommonServer.Identity>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
8a3361ce0d8131d156cfe79ac4882c6b
  getFilesFromFileServer1 ::
    CommonServer.Ticket
    -> CommonServer.Identity
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,1*U(1*U,1*U)><L,U(U,U,U)><S,U>,
     Unfolding: (\ (t :: CommonServer.Ticket)
                   (i :: CommonServer.Identity)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case CommonServer.logConnection1
                        DirectoryServer.closeFile10
                        DirectoryServer.closeFile17
                        DirectoryServer.getFilesFromFileServer4
                        s of ds1 { (#,#) ipv ipv1 ->
                 case Network.HTTP.Client.Manager.$wnewManager
                        Network.HTTP.Client.Manager.defaultManagerSettings18
                        Network.HTTP.Client.Manager.defaultManagerSettings15
                          `cast`
                        (Sym (GHC.Types.N:IO[0]
                                  <GHC.Base.Maybe Network.Socket.Types.HostAddress
                                   -> GHC.Base.String
                                   -> GHC.Types.Int
                                   -> GHC.Types.IO Network.HTTP.Client.Types.Connection>_R))
                        Network.HTTP.Client.Manager.defaultManagerSettings14
                          `cast`
                        (Sym (GHC.Types.N:IO[0]
                                  <GHC.Base.Maybe Network.Socket.Types.HostAddress
                                   -> GHC.Base.String
                                   -> GHC.Types.Int
                                   -> GHC.Types.IO Network.HTTP.Client.Types.Connection>_R))
                        Network.HTTP.Client.Manager.defaultManagerSettings11
                          `cast`
                        (Sym (GHC.Types.N:IO[0]
                                  <Data.ByteString.Internal.ByteString
                                   -> (Network.HTTP.Client.Types.Connection -> GHC.Types.IO ())
                                   -> GHC.Base.String
                                   -> GHC.Base.Maybe Network.Socket.Types.HostAddress
                                   -> GHC.Base.String
                                   -> GHC.Types.Int
                                   -> GHC.Types.IO Network.HTTP.Client.Types.Connection>_R))
                        Network.HTTP.Client.Manager.defaultManagerSettings9
                        Network.HTTP.Client.Manager.defaultManagerSettings8
                        Network.HTTP.Client.Manager.defaultManagerSettings6
                          `cast`
                        (forall (a :: <*>_N).
                         <GHC.Types.IO a>_R ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                        Network.HTTP.Client.Manager.defaultManagerSettings5
                        (GHC.Base.returnIO1 @ Network.HTTP.Client.Types.Request)
                          `cast`
                        (<Network.HTTP.Client.Types.Request>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Network.HTTP.Client.Types.Request>_R))
                        Network.HTTP.Client.Manager.defaultManagerSettings1
                          `cast`
                        (Trans
                             (<GHC.Types.Bool>_R
                              ->_R Sym (GHC.Types.N:IO[0]
                                            <Network.HTTP.Client.Types.Request
                                             -> Network.HTTP.Client.Types.Request>_R))
                             (Sym (Network.HTTP.Client.Types.N:ProxyOverride[0])))
                        Network.HTTP.Client.Manager.defaultManagerSettings1
                          `cast`
                        (Trans
                             (<GHC.Types.Bool>_R
                              ->_R Sym (GHC.Types.N:IO[0]
                                            <Network.HTTP.Client.Types.Request
                                             -> Network.HTTP.Client.Types.Request>_R))
                             (Sym (Network.HTTP.Client.Types.N:ProxyOverride[0])))
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ((CommonServerApi.directoryClientFiles1 t)
                         `cast`
                       (Trans
                            (Sub (Servant.Client.D:R:ClientTYPEVerb2[0]
                                      <Network.HTTP.Types.Method.StdMethod>_N
                                      <[GHC.IO.FilePath]>_N
                                      <'Network.HTTP.Types.Method.POST>_N
                                      <'[Servant.API.ContentTypes.JSON]>_N
                                      <200>_N))
                            (Trans
                                 (Servant.Common.Req.N:ClientM[0] <[GHC.IO.FilePath]>_N)
                                 (Control.Monad.Trans.Reader.N:ReaderT[0]
                                      <*>_N
                                      <Servant.Common.Req.ClientEnv>_R
                                      <Control.Monad.Trans.Except.ExceptT
                                         Servant.Common.Req.ServantError GHC.Types.IO>_R
                                      <[GHC.IO.FilePath]>_N)))
                         (Servant.Common.Req.ClientEnv
                            ipv3
                            (Servant.Common.BaseUrl.BaseUrl
                               Servant.Common.BaseUrl.Http
                               (CommonServer.address i)
                               (case Text.Read.readEither6
                                       @ GHC.Types.Int
                                       (Text.ParserCombinators.ReadP.run
                                          @ GHC.Types.Int
                                          DirectoryServer.closeFile15
                                          (case i of wild { CommonServer.Identity ds3 ds4 ds5 ->
                                           ds4 })) of wild {
                                  [] -> DirectoryServer.closeFile14
                                  : x ds
                                  -> case ds of wild1 {
                                       [] -> x : ipv4 ipv5 -> DirectoryServer.closeFile13 } })
                               (GHC.Types.[] @ GHC.Types.Char))))
                        `cast`
                      (Trans
                           (Control.Monad.Trans.Except.N:ExceptT[0]
                                <Servant.Common.Req.ServantError>_N
                                <GHC.Types.IO>_R
                                <[GHC.IO.FilePath]>_N)
                           (GHC.Types.N:IO[0]
                                <Data.Either.Either
                                   Servant.Common.Req.ServantError [GHC.IO.FilePath]>_R))
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case ipv5 of wild {
                   Data.Either.Left err
                   -> CommonServer.logError1
                        DirectoryServer.closeFile10
                        (Servant.Common.Req.$fExceptionServantError_$cshow err)
                        ipv4
                   Data.Either.Right response'
                   -> letrec {
                        go4 :: [GHC.Base.String]
                               -> GHC.Prim.State# GHC.Prim.RealWorld
                               -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                          {- Arity: 2, Strictness: <S,1*U><S,U> -}
                        = \ (ds :: [GHC.Base.String])
                            (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                          case ds of wild1 {
                            [] -> (# eta, GHC.Tuple.() #)
                            : y ys
                            -> case DirectoryServer.getFilesFromFileServer3
                                      i
                                      (GHC.Types.[] @ DirectoryServer.FileMapping)
                                      y
                                      eta of ds4 { (#,#) ipv6 ipv7 ->
                               go4 ys ipv6 } }
                      } in
                      case go4 response' ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                      CommonServer.logAction1
                        DirectoryServer.closeFile10
                        DirectoryServer.getFilesFromFileServer2
                        (GHC.Types.[] @ GHC.Types.Char)
                        ipv6 } } } } }) -}
173676f433deec76961618ef16adbc04
  getFilesFromFileServer2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Done"#) -}
9c26bc9a5e9ff1afb7e2cdebf26c7a54
  getFilesFromFileServer3 ::
    CommonServer.Identity
    -> [DirectoryServer.FileMapping]
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          [DirectoryServer.FileMapping] #)
  {- Arity: 4, Strictness: <L,U><L,U><L,U><S,U>,
     Unfolding: (\ (id :: CommonServer.Identity)
                   (array :: [DirectoryServer.FileMapping])
                   (filename :: GHC.Base.String)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case CommonServer.logDatabase1
                        DirectoryServer.closeFile10
                        DirectoryServer.closeFile9
                        DirectoryServer.closeFile8
                        filename
                        s of ds1 { (#,#) ipv ipv1 ->
                 case Database.MongoDB.Connection.globalConnectTimeout
                        `cast`
                      (GHC.IORef.N:IORef[0] <Database.MongoDB.Connection.Secs>_N) of wild { GHC.STRef.STRef var# ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ Database.MongoDB.Connection.Secs
                        var#
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv3 of ww { GHC.Types.D# ww1 ->
                 case Database.MongoDB.Connection.$wconnect'
                        ww1
                        MongoDbConnector.connectToDatabase3
                        Database.MongoDB.Connection.defaultPort
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case ((DirectoryServer.closeFile7
                          DirectoryServer.closeFile6
                          (GHC.Types.:
                             @ (Database.MongoDB.Query.Selector, Data.Bson.Document,
                                [Database.MongoDB.Internal.Protocol.UpdateOption])
                             (GHC.Types.:
                                @ Data.Bson.Field
                                (case DirectoryServer.closeFile5 of dt { Data.Text.Internal.Text ipv6 ipv7 ipv8 ->
                                 Data.Bson.:= dt (Data.Bson.$fValChar_$cvalList filename) })
                                (GHC.Types.[] @ Data.Bson.Field),
                              Data.Bson.Generic.$w$cgenericToBSON1
                                @ (GHC.Generics.S1
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "fileName")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.Rec0 GHC.IO.FilePath)
                                   GHC.Generics.:*: (GHC.Generics.S1
                                                       ('GHC.Generics.MetaSel
                                                          ('GHC.Base.Just "identity")
                                                          'GHC.Generics.NoSourceUnpackedness
                                                          'GHC.Generics.NoSourceStrictness
                                                          'GHC.Generics.DecidedLazy)
                                                       (GHC.Generics.Rec0 CommonServer.Identity)
                                                     GHC.Generics.:*: GHC.Generics.S1
                                                                        ('GHC.Generics.MetaSel
                                                                           ('GHC.Base.Just "lock")
                                                                           'GHC.Generics.NoSourceUnpackedness
                                                                           'GHC.Generics.NoSourceStrictness
                                                                           'GHC.Generics.DecidedLazy)
                                                                        (GHC.Generics.Rec0
                                                                           DirectoryServer.FileLock)))
                                @ ('GHC.Generics.MetaCons
                                     "FileMapping" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                DirectoryServer.$fToBSONFileMapping6
                                  `cast`
                                (Sym (Data.Bson.Generic.N:GToBSON[0]
                                          <GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "fileName")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.Rec0 GHC.IO.FilePath)
                                           GHC.Generics.:*: (GHC.Generics.S1
                                                               ('GHC.Generics.MetaSel
                                                                  ('GHC.Base.Just "identity")
                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                  'GHC.Generics.NoSourceStrictness
                                                                  'GHC.Generics.DecidedLazy)
                                                               (GHC.Generics.Rec0
                                                                  CommonServer.Identity)
                                                             GHC.Generics.:*: GHC.Generics.S1
                                                                                ('GHC.Generics.MetaSel
                                                                                   ('GHC.Base.Just
                                                                                      "lock")
                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                   'GHC.Generics.DecidedLazy)
                                                                                (GHC.Generics.Rec0
                                                                                   DirectoryServer.FileLock))>_N))
                                DirectoryServer.$fToBSONFileMapping_$s$fConstructorMetaMetaCons
                                @ GHC.Prim.Any
                                1#
                                (GHC.Generics.:*:
                                   @ (GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Base.Just "fileName")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.K1 GHC.Generics.R GHC.IO.FilePath))
                                   @ (GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Base.Just "identity")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.K1 GHC.Generics.R CommonServer.Identity)
                                      GHC.Generics.:*: GHC.Generics.M1
                                                         GHC.Generics.S
                                                         ('GHC.Generics.MetaSel
                                                            ('GHC.Base.Just "lock")
                                                            'GHC.Generics.NoSourceUnpackedness
                                                            'GHC.Generics.NoSourceStrictness
                                                            'GHC.Generics.DecidedLazy)
                                                         (GHC.Generics.K1
                                                            GHC.Generics.R
                                                            DirectoryServer.FileLock))
                                   @ GHC.Prim.Any
                                   filename
                                     `cast`
                                   (Trans
                                        (Sym (GHC.Generics.N:K1[0]
                                                  <GHC.Generics.R>_P
                                                  <GHC.IO.FilePath>_R
                                                  <GHC.Prim.Any>_P))
                                        (Sym (GHC.Generics.N:M1[0]
                                                  <GHC.Generics.S>_P
                                                  <'GHC.Generics.MetaSel
                                                     ('GHC.Base.Just "fileName")
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy>_P
                                                  <GHC.Generics.K1
                                                     GHC.Generics.R
                                                     GHC.IO.FilePath>_R) <GHC.Prim.Any>_N))
                                   (GHC.Generics.:*:
                                      @ (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "identity")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1 GHC.Generics.R CommonServer.Identity))
                                      @ (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "lock")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1
                                              GHC.Generics.R DirectoryServer.FileLock))
                                      @ GHC.Prim.Any
                                      id
                                        `cast`
                                      (Trans
                                           (Sym (GHC.Generics.N:K1[0]
                                                     <GHC.Generics.R>_P
                                                     <CommonServer.Identity>_R
                                                     <GHC.Prim.Any>_P))
                                           (Sym (GHC.Generics.N:M1[0]
                                                     <GHC.Generics.S>_P
                                                     <'GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "identity")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy>_P
                                                     <GHC.Generics.K1
                                                        GHC.Generics.R
                                                        CommonServer.Identity>_R) <GHC.Prim.Any>_N))
                                      DirectoryServer.FileUnlocked
                                        `cast`
                                      (Trans
                                           (Sym (GHC.Generics.N:K1[0]
                                                     <GHC.Generics.R>_P
                                                     <DirectoryServer.FileLock>_R
                                                     <GHC.Prim.Any>_P))
                                           (Sym (GHC.Generics.N:M1[0]
                                                     <GHC.Generics.S>_P
                                                     <'GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "lock")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy>_P
                                                     <GHC.Generics.K1
                                                        GHC.Generics.R
                                                        DirectoryServer.FileLock>_R) <GHC.Prim.Any>_N))))
                                  `cast`
                                (Sym (GHC.Generics.N:M1[0]
                                          <GHC.Generics.C>_P
                                          <'GHC.Generics.MetaCons
                                             "FileMapping" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                          <GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "fileName")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1 GHC.Generics.R GHC.IO.FilePath)
                                           GHC.Generics.:*: (GHC.Generics.M1
                                                               GHC.Generics.S
                                                               ('GHC.Generics.MetaSel
                                                                  ('GHC.Base.Just "identity")
                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                  'GHC.Generics.NoSourceStrictness
                                                                  'GHC.Generics.DecidedLazy)
                                                               (GHC.Generics.K1
                                                                  GHC.Generics.R
                                                                  CommonServer.Identity)
                                                             GHC.Generics.:*: GHC.Generics.M1
                                                                                GHC.Generics.S
                                                                                ('GHC.Generics.MetaSel
                                                                                   ('GHC.Base.Just
                                                                                      "lock")
                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                   'GHC.Generics.DecidedLazy)
                                                                                (GHC.Generics.K1
                                                                                   GHC.Generics.R
                                                                                   DirectoryServer.FileLock))>_R) <GHC.Prim.Any>_N),
                              Database.MongoDB.Query.repsert1)
                             (GHC.Types.[]
                                @ (Database.MongoDB.Query.Selector, Data.Bson.Document,
                                   [Database.MongoDB.Internal.Protocol.UpdateOption]))))
                         `cast`
                       (Control.Monad.Trans.Reader.N:ReaderT[0]
                            <*>_N
                            <Database.MongoDB.Query.MongoContext>_R
                            <GHC.Types.IO>_R
                            <Database.MongoDB.Query.UpdateResult>_N)
                         (Database.MongoDB.Query.MongoContext
                            ipv5
                            Database.MongoDB.Query.master
                            MongoDbConnector.connectToDatabase2))
                        `cast`
                      (GHC.Types.N:IO[0] <Database.MongoDB.Query.UpdateResult>_R)
                        ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                 (# ipv6,
                    GHC.Types.:
                      @ DirectoryServer.FileMapping
                      (DirectoryServer.FileMapping
                         filename
                         id
                         DirectoryServer.FileUnlocked)
                      array #) } } } } } }) -}
e04b6579de3743031de292bf8ca9ac63
  getFilesFromFileServer4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "GET files"#) -}
7ccb4d902797022e1158a8ff4cb4cc2d
  identity :: DirectoryServer.FileMapping -> CommonServer.Identity
  RecSel Left DirectoryServer.FileMapping
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSL),1*U(A,1*U(U,U,U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: DirectoryServer.FileMapping) ->
                 case ds of wild { DirectoryServer.FileMapping ds1 ds2 ds3 ->
                 ds2 }) -}
df36bb6894aed55db01969ecb43cc103
  joinServer ::
    CommonServer.Identity
    -> CommonServerApi.ApiHandler CommonServer.Response
  {- Arity: 2, Strictness: <L,U(U,U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.directoryApp10
                  `cast`
                (<CommonServer.Identity>_R
                 ->_R Trans
                          (Sym (GHC.Types.N:IO[0]
                                    <Data.Either.Either
                                       Servant.Server.Internal.ServantErr.ServantErr
                                       CommonServer.Response>_R))
                          (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                    <Servant.Server.Internal.ServantErr.ServantErr>_N
                                    <GHC.Types.IO>_R
                                    <CommonServer.Response>_N))) -}
810a68a8087a88672503846a82190f46
  lock :: DirectoryServer.FileMapping -> DirectoryServer.FileLock
  RecSel Left DirectoryServer.FileMapping
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLS),1*U(A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: DirectoryServer.FileMapping) ->
                 case ds of wild { DirectoryServer.FileMapping ds1 ds2 ds3 ->
                 ds3 }) -}
6088122081b952fe2c32c05192bd29d1
  mkDirectoryServer :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.mkDirectoryServer1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <()>_R)) -}
ff4b41f67a24e94c7c15800318dd3bf7
  mkDirectoryServer1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case System.Directory.createDirectoryIfMissing1
                        GHC.Types.True
                        DirectoryServer.mkDirectoryServer9
                        s of ds1 { (#,#) ipv ipv1 ->
                 case (System.Win32.File.setCurrentDirectory
                         DirectoryServer.mkDirectoryServer9)
                        `cast`
                      (GHC.Types.N:IO[0] <()>_R)
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case CommonServer.logHeading1
                        DirectoryServer.closeFile10
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case CommonServer.logAction1
                        DirectoryServer.closeFile10
                        DirectoryServer.mkDirectoryServer8
                        DirectoryServer.mkDirectoryServer4
                        ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                 case DirectoryServer.deleteDatabases1
                        ipv6 of ds5 { (#,#) ipv8 ipv9 ->
                 Network.Wai.Handler.Warp.Run.$wrunSettings
                   DirectoryServer.mkDirectoryServer2
                   Network.Wai.Handler.Warp.Settings.defaultSettings16
                   Network.Wai.Handler.Warp.Settings.defaultOnException1
                     `cast`
                   (<GHC.Base.Maybe Network.Wai.Internal.Request>_R
                    ->_R <GHC.Exception.SomeException>_R
                    ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                   Network.Wai.Handler.Warp.Settings.defaultOnExceptionResponse
                   Network.Wai.Handler.Warp.Settings.defaultSettings14
                     `cast`
                   (<Network.Socket.Types.SockAddr>_R
                    ->_R Sym (GHC.Types.N:IO[0] <GHC.Types.Bool>_R))
                   Network.Wai.Handler.Warp.Settings.defaultSettings13
                     `cast`
                   (<Network.Socket.Types.SockAddr>_R
                    ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                   Network.Wai.Handler.Warp.Settings.defaultSettings12
                   (GHC.Base.Nothing @ Network.Wai.Handler.Warp.Timeout.Manager)
                   Network.Wai.Handler.Warp.Settings.defaultSettings11
                   Network.Wai.Handler.Warp.Settings.defaultSettings11
                   Network.Wai.Handler.Warp.Settings.defaultSettings9
                     `cast`
                   (Sym (GHC.Types.N:IO[0] <()>_R))
                   Network.Wai.Handler.Warp.Settings.defaultSettings10
                     `cast`
                   (<(forall a. GHC.Types.IO a -> GHC.Types.IO a)
                     -> GHC.Types.IO ()>_R
                    ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                   GHC.Types.False
                   Network.Wai.Handler.Warp.Settings.defaultSettings8
                     `cast`
                   (<GHC.Types.IO ()>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                   Network.Wai.Handler.Warp.Settings.defaultSettings6
                   Network.Wai.Handler.Warp.Settings.defaultSettings4
                   Network.Wai.Handler.Warp.Settings.ProxyProtocolNone
                   Network.Wai.Handler.Warp.Settings.defaultSettings3
                   GHC.Types.True
                   Network.Wai.Handler.Warp.Settings.defaultSettings2
                     `cast`
                   (<Network.Wai.Internal.Request>_R
                    ->_R <Network.HTTP.Types.Status.Status>_R
                    ->_R <GHC.Base.Maybe GHC.Integer.Type.Integer>_R
                    ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                   Network.Wai.Handler.Warp.Settings.defaultSettings1
                     `cast`
                   (<Network.Wai.Internal.Request>_R
                    ->_R <Data.ByteString.Internal.ByteString>_R
                    ->_R <GHC.Integer.Type.Integer>_R
                    ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                   (GHC.Base.Nothing @ GHC.Types.Int)
                   DirectoryServer.directoryApp
                   ipv8 } } } } }) -}
fd5aa5400a3b131a34ccfa13d9dcb3cb
  mkDirectoryServer2 :: Network.Wai.Handler.Warp.Types.Port
  {- Unfolding: (case Text.Read.readEither6
                        @ GHC.Types.Int
                        DirectoryServer.mkDirectoryServer3 of wild {
                   [] -> CommonServer.decryptPort2
                   : x ds
                   -> case ds of wild1 {
                        [] -> x : ipv ipv1 -> CommonServer.decryptPort1 } }) -}
562fca1832f60bbebb17ed8c2bda5a87
  mkDirectoryServer3 :: [(GHC.Types.Int, GHC.Base.String)]
  {- Unfolding: (Text.ParserCombinators.ReadP.run
                   @ GHC.Types.Int
                   CommonServer.decryptPort4
                   CommonServer.directoryServerIdentity1) -}
d74679e09013e7d3b112618865bc087a
  mkDirectoryServer4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   GHC.Show.shows8
                   DirectoryServer.mkDirectoryServer5) -}
a24ad04b8f4fae2b4dc273713db0720d
  mkDirectoryServer5 :: GHC.Base.String
  {- Unfolding: (GHC.Show.showLitString
                   DirectoryServer.mkDirectoryServer7
                   DirectoryServer.mkDirectoryServer6) -}
69f3140233edf825be41ca3ac647d0c8
  mkDirectoryServer6 :: [GHC.Types.Char]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   GHC.Show.shows8
                   (GHC.Types.[] @ GHC.Types.Char)) -}
30783baff5364d298f18d347a6868ad5
  mkDirectoryServer7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   CommonServer.directoryServerIdentity2
                   (GHC.CString.unpackAppendCString#
                      ":"#
                      CommonServer.directoryServerIdentity1)) -}
a94339513893813adafa18a8689cbdf6
  mkDirectoryServer8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Start"#) -}
3df0fee92acc436dd993a3824bfb4589
  mkDirectoryServer9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "res/DirectoryServer"#) -}
27db68a054a4337ba3b17a33fa875077
  openFile ::
    CommonServer.Ticket
    -> GHC.Base.String -> CommonServerApi.ApiHandler CommonServer.File
  {- Arity: 3, Strictness: <L,1*U(1*U,1*U)><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.directoryApp38
                  `cast`
                (<CommonServer.Ticket>_R
                 ->_R <GHC.Base.String>_R
                 ->_R Trans
                          (Sym (GHC.Types.N:IO[0]
                                    <Data.Either.Either
                                       Servant.Server.Internal.ServantErr.ServantErr
                                       CommonServer.File>_R))
                          (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                    <Servant.Server.Internal.ServantErr.ServantErr>_N
                                    <GHC.Types.IO>_R
                                    <CommonServer.File>_N))) -}
225f4c709b1bf59a85e42a4421d90546
  resources :: CommonServer.Resources
  {- Strictness: m,
     Unfolding: (CommonServer.Resources
                   DirectoryServer.mkDirectoryServer9) -}
2acdb6fb9962c0b6f762ec7f2ed45f55
  updateFileMapping ::
    GHC.Base.String -> DirectoryServer.FileLock -> GHC.Types.IO ()
  {- Arity: 3, Strictness: <L,U><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.closeFile4
                  `cast`
                (<GHC.Base.String>_R
                 ->_R <DirectoryServer.FileLock>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
a56b5f87bb08dd2a3781046aa9fc42e0
  uploadToFileServer ::
    CommonServer.Ticket
    -> CommonServer.File
    -> CommonServer.Identity
    -> GHC.Types.IO CommonServer.Response
  {- Arity: 4, Strictness: <L,A><L,1*U(1*U,1*U)><L,U(U,U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.uploadToFileServer1
                  `cast`
                (<CommonServer.Ticket>_R
                 ->_R <CommonServer.File>_R
                 ->_R <CommonServer.Identity>_R
                 ->_R Sym (GHC.Types.N:IO[0] <CommonServer.Response>_R)) -}
f3ad04d402bdfb2d9b3096c2b9863e16
  uploadToFileServer1 ::
    CommonServer.Ticket
    -> CommonServer.File
    -> CommonServer.Identity
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, CommonServer.Response #)
  {- Arity: 4, Strictness: <L,A><L,1*U(1*U,1*U)><L,U(U,U,U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, True)
                (\ (w :: CommonServer.Ticket)
                   (w1 :: CommonServer.File)
                   (w2 :: CommonServer.Identity)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 DirectoryServer.$wuploadToFileServer w1 w2 w3) -}
3464c70a24f5782871b63e2faad1e982
  upsertFileMapping ::
    CommonServer.Identity
    -> [DirectoryServer.FileMapping]
    -> GHC.Base.String
    -> GHC.Types.IO [DirectoryServer.FileMapping]
  {- Arity: 4, Strictness: <L,U><L,U><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.getFilesFromFileServer3
                  `cast`
                (<CommonServer.Identity>_R
                 ->_R <[DirectoryServer.FileMapping]>_R
                 ->_R <GHC.Base.String>_R
                 ->_R Sym (GHC.Types.N:IO[0] <[DirectoryServer.FileMapping]>_R)) -}
37e2314da303a00a12c9fe7f7ba551a1
  upsertFileServer :: CommonServer.Identity -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <L,U(U,U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.directoryApp13
                  `cast`
                (<CommonServer.Identity>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
instance GHC.Classes.Eq [DirectoryServer.FileLock]
  = DirectoryServer.$fEqFileLock
instance GHC.Classes.Eq [DirectoryServer.FileMapping]
  = DirectoryServer.$fEqFileMapping
instance Data.Bson.Generic.FromBSON [DirectoryServer.FileLock]
  = DirectoryServer.$fFromBSONFileLock
instance Data.Bson.Generic.FromBSON [DirectoryServer.FileMapping]
  = DirectoryServer.$fFromBSONFileMapping
instance Data.Aeson.Types.Class.FromJSON [DirectoryServer.FileLock]
  = DirectoryServer.$fFromJSONFileLock
instance Data.Aeson.Types.Class.FromJSON [DirectoryServer.FileMapping]
  = DirectoryServer.$fFromJSONFileMapping
instance GHC.Generics.Generic [DirectoryServer.FileLock]
  = DirectoryServer.$fGenericFileLock
instance GHC.Generics.Generic [DirectoryServer.FileMapping]
  = DirectoryServer.$fGenericFileMapping
instance GHC.Show.Show [DirectoryServer.FileLock]
  = DirectoryServer.$fShowFileLock
instance GHC.Show.Show [DirectoryServer.FileMapping]
  = DirectoryServer.$fShowFileMapping
instance Data.Bson.Generic.ToBSON [DirectoryServer.FileLock]
  = DirectoryServer.$fToBSONFileLock
instance Data.Bson.Generic.ToBSON [DirectoryServer.FileMapping]
  = DirectoryServer.$fToBSONFileMapping
instance Data.Aeson.Types.Class.ToJSON [DirectoryServer.FileLock]
  = DirectoryServer.$fToJSONFileLock
instance Data.Aeson.Types.Class.ToJSON [DirectoryServer.FileMapping]
  = DirectoryServer.$fToJSONFileMapping
family instance GHC.Generics.Rep [DirectoryServer.FileMapping]
  = DirectoryServer.Rep_FileMapping
family instance GHC.Generics.Rep [DirectoryServer.FileLock]
  = DirectoryServer.Rep_FileLock
"SPEC/DirectoryServer $dmtoBSON @ FileLock" [ALWAYS] forall ($dToBSON :: Data.Bson.Generic.ToBSON
                                                                           DirectoryServer.FileLock)
                                                            ($dGeneric :: GHC.Generics.Generic
                                                                            DirectoryServer.FileLock)
                                                            ($dGConstructorCount :: Data.Bson.Generic.GConstructorCount
                                                                                      (GHC.Generics.Rep
                                                                                         DirectoryServer.FileLock))
                                                            ($dGToBSON :: Data.Bson.Generic.GToBSON
                                                                            (GHC.Generics.Rep
                                                                               DirectoryServer.FileLock))
  Data.Bson.Generic.$dmtoBSON @ DirectoryServer.FileLock
                              $dToBSON
                              $dGeneric
                              $dGConstructorCount
                              $dGToBSON
  = DirectoryServer.$fFromBSONFileMapping_$s$dmtoBSON
"SPEC/DirectoryServer $dmtoBSON @ FileMapping" [ALWAYS] forall ($dToBSON :: Data.Bson.Generic.ToBSON
                                                                              DirectoryServer.FileMapping)
                                                               ($dGeneric :: GHC.Generics.Generic
                                                                               DirectoryServer.FileMapping)
                                                               ($dGConstructorCount :: Data.Bson.Generic.GConstructorCount
                                                                                         (GHC.Generics.Rep
                                                                                            DirectoryServer.FileMapping))
                                                               ($dGToBSON :: Data.Bson.Generic.GToBSON
                                                                               (GHC.Generics.Rep
                                                                                  DirectoryServer.FileMapping))
  Data.Bson.Generic.$dmtoBSON @ DirectoryServer.FileMapping
                              $dToBSON
                              $dGeneric
                              $dGConstructorCount
                              $dGToBSON
  = DirectoryServer.$fToBSONFileMapping_$s$dmtoBSON
"SPEC/DirectoryServer $fAllCTRender:a @ JSON @ '[] @ File" [ALWAYS] forall ($dAccept :: Servant.API.ContentTypes.Accept
                                                                                          Servant.API.ContentTypes.JSON)
                                                                           ($dAllMime :: Servant.API.ContentTypes.AllMime
                                                                                           '[])
                                                                           ($dAllMimeRender :: Servant.API.ContentTypes.AllMimeRender
                                                                                                 '[Servant.API.ContentTypes.JSON]
                                                                                                 CommonServer.File)
  Servant.API.ContentTypes.$fAllCTRender:a @ Servant.API.ContentTypes.JSON
                                           @ '[]
                                           @ CommonServer.File
                                           $dAccept
                                           $dAllMime
                                           $dAllMimeRender
  = DirectoryServer.$s$fAllCTRender:a4
"SPEC/DirectoryServer $fAllCTRender:a @ JSON @ '[] @ Response" [ALWAYS] forall ($dAccept :: Servant.API.ContentTypes.Accept
                                                                                              Servant.API.ContentTypes.JSON)
                                                                               ($dAllMime :: Servant.API.ContentTypes.AllMime
                                                                                               '[])
                                                                               ($dAllMimeRender :: Servant.API.ContentTypes.AllMimeRender
                                                                                                     '[Servant.API.ContentTypes.JSON]
                                                                                                     CommonServer.Response)
  Servant.API.ContentTypes.$fAllCTRender:a @ Servant.API.ContentTypes.JSON
                                           @ '[]
                                           @ CommonServer.Response
                                           $dAccept
                                           $dAllMime
                                           $dAllMimeRender
  = DirectoryServer.$s$fAllCTRender:a
"SPEC/DirectoryServer $fAllCTRender:a @ JSON @ '[] @ [FilePath]" [ALWAYS] forall ($dAccept :: Servant.API.ContentTypes.Accept
                                                                                                Servant.API.ContentTypes.JSON)
                                                                                 ($dAllMime :: Servant.API.ContentTypes.AllMime
                                                                                                 '[])
                                                                                 ($dAllMimeRender :: Servant.API.ContentTypes.AllMimeRender
                                                                                                       '[Servant.API.ContentTypes.JSON]
                                                                                                       [GHC.IO.FilePath])
  Servant.API.ContentTypes.$fAllCTRender:a @ Servant.API.ContentTypes.JSON
                                           @ '[]
                                           @ [GHC.IO.FilePath]
                                           $dAccept
                                           $dAllMime
                                           $dAllMimeRender
  = DirectoryServer.$s$fAllCTRender:a6
"SPEC/DirectoryServer $fAllMimeRender:a0 @ JSON @ File" [ALWAYS] forall ($dMimeRender :: Servant.API.ContentTypes.MimeRender
                                                                                           Servant.API.ContentTypes.JSON
                                                                                           CommonServer.File)
  Servant.API.ContentTypes.$fAllMimeRender:a0 @ Servant.API.ContentTypes.JSON
                                              @ CommonServer.File
                                              $dMimeRender
  = DirectoryServer.$s$fAllCTRender:a_$s$fAllMimeRender:a1
"SPEC/DirectoryServer $fAllMimeRender:a0 @ JSON @ Response" [ALWAYS] forall ($dMimeRender :: Servant.API.ContentTypes.MimeRender
                                                                                               Servant.API.ContentTypes.JSON
                                                                                               CommonServer.Response)
  Servant.API.ContentTypes.$fAllMimeRender:a0 @ Servant.API.ContentTypes.JSON
                                              @ CommonServer.Response
                                              $dMimeRender
  = DirectoryServer.$s$fAllCTRender:a_$s$fAllMimeRender:a0
"SPEC/DirectoryServer $fAllMimeRender:a0 @ JSON @ [FilePath]" [ALWAYS] forall ($dMimeRender :: Servant.API.ContentTypes.MimeRender
                                                                                                 Servant.API.ContentTypes.JSON
                                                                                                 [GHC.IO.FilePath])
  Servant.API.ContentTypes.$fAllMimeRender:a0 @ Servant.API.ContentTypes.JSON
                                              @ [GHC.IO.FilePath]
                                              $dMimeRender
  = DirectoryServer.$s$fAllCTRender:a_$s$fAllMimeRender:a2
"SPEC/DirectoryServer $fAllMimeRender:a0_$callMimeRender @ JSON @ [FilePath]" [ALWAYS] forall ($dMimeRender :: Servant.API.ContentTypes.MimeRender
                                                                                                                 Servant.API.ContentTypes.JSON
                                                                                                                 [GHC.IO.FilePath])
  Servant.API.ContentTypes.$fAllMimeRender:a0_$callMimeRender @ Servant.API.ContentTypes.JSON
                                                              @ [GHC.IO.FilePath]
                                                              $dMimeRender
  = DirectoryServer.$s$fAllCTRender:a_$s$fAllMimeRender:a0_$callMimeRender
"SPEC/DirectoryServer $fAllMimeUnrender:a @ JSON @ File @ '[]" [ALWAYS] forall ($dMimeUnrender :: Servant.API.ContentTypes.MimeUnrender
                                                                                                    Servant.API.ContentTypes.JSON
                                                                                                    CommonServer.File)
                                                                               ($dAllMimeUnrender :: Servant.API.ContentTypes.AllMimeUnrender
                                                                                                       '[]
                                                                                                       CommonServer.File)
  Servant.API.ContentTypes.$fAllMimeUnrender:a @ Servant.API.ContentTypes.JSON
                                               @ CommonServer.File
                                               @ '[]
                                               $dMimeUnrender
                                               $dAllMimeUnrender
  = DirectoryServer.$s$fAllMimeUnrender:a4
"SPEC/DirectoryServer $fAllMimeUnrender:a @ JSON @ Identity @ '[]" [ALWAYS] forall ($dMimeUnrender :: Servant.API.ContentTypes.MimeUnrender
                                                                                                        Servant.API.ContentTypes.JSON
                                                                                                        CommonServer.Identity)
                                                                                   ($dAllMimeUnrender :: Servant.API.ContentTypes.AllMimeUnrender
                                                                                                           '[]
                                                                                                           CommonServer.Identity)
  Servant.API.ContentTypes.$fAllMimeUnrender:a @ Servant.API.ContentTypes.JSON
                                               @ CommonServer.Identity
                                               @ '[]
                                               $dMimeUnrender
                                               $dAllMimeUnrender
  = DirectoryServer.$s$fAllMimeUnrender:a3
"SPEC/DirectoryServer $fAllMimeUnrender:a @ JSON @ Ticket @ '[]" [ALWAYS] forall ($dMimeUnrender :: Servant.API.ContentTypes.MimeUnrender
                                                                                                      Servant.API.ContentTypes.JSON
                                                                                                      CommonServer.Ticket)
                                                                                 ($dAllMimeUnrender :: Servant.API.ContentTypes.AllMimeUnrender
                                                                                                         '[]
                                                                                                         CommonServer.Ticket)
  Servant.API.ContentTypes.$fAllMimeUnrender:a @ Servant.API.ContentTypes.JSON
                                               @ CommonServer.Ticket
                                               @ '[]
                                               $dMimeUnrender
                                               $dAllMimeUnrender
  = DirectoryServer.$s$fAllMimeUnrender:a
"SPEC/DirectoryServer $fAllMimeUnrender:a @ JSON @ [Char] @ '[]" [ALWAYS] forall ($dMimeUnrender :: Servant.API.ContentTypes.MimeUnrender
                                                                                                      Servant.API.ContentTypes.JSON
                                                                                                      [GHC.Types.Char])
                                                                                 ($dAllMimeUnrender :: Servant.API.ContentTypes.AllMimeUnrender
                                                                                                         '[]
                                                                                                         [GHC.Types.Char])
  Servant.API.ContentTypes.$fAllMimeUnrender:a @ Servant.API.ContentTypes.JSON
                                               @ [GHC.Types.Char]
                                               @ '[]
                                               $dMimeUnrender
                                               $dAllMimeUnrender
  = DirectoryServer.$s$fAllMimeUnrender:a2
"SPEC/DirectoryServer $fConstructorMetaMetaCons @ "FileLocked" @ 'PrefixI @ 'False" [ALWAYS] forall ($dKnownSymbol :: GHC.TypeLits.KnownSymbol
                                                                                                                        "FileLocked")
                                                                                                    ($dSingI :: GHC.Generics.SingI
                                                                                                                  'GHC.Generics.PrefixI)
                                                                                                    ($dSingI1 :: GHC.Generics.SingI
                                                                                                                   'GHC.Types.False)
  GHC.Generics.$fConstructorMetaMetaCons @ "FileLocked"
                                         @ 'GHC.Generics.PrefixI
                                         @ 'GHC.Types.False
                                         $dKnownSymbol
                                         $dSingI
                                         $dSingI1
  = DirectoryServer.$fFromBSONFileMapping_$s$fConstructorMetaMetaCons2
"SPEC/DirectoryServer $fConstructorMetaMetaCons @ "FileMapping" @ 'PrefixI @ 'True" [ALWAYS] forall ($dKnownSymbol :: GHC.TypeLits.KnownSymbol
                                                                                                                        "FileMapping")
                                                                                                    ($dSingI :: GHC.Generics.SingI
                                                                                                                  'GHC.Generics.PrefixI)
                                                                                                    ($dSingI1 :: GHC.Generics.SingI
                                                                                                                   'GHC.Types.True)
  GHC.Generics.$fConstructorMetaMetaCons @ "FileMapping"
                                         @ 'GHC.Generics.PrefixI
                                         @ 'GHC.Types.True
                                         $dKnownSymbol
                                         $dSingI
                                         $dSingI1
  = DirectoryServer.$fToBSONFileMapping_$s$fConstructorMetaMetaCons
"SPEC/DirectoryServer $fConstructorMetaMetaCons @ "FileReadOnly" @ 'PrefixI @ 'False" [ALWAYS] forall ($dKnownSymbol :: GHC.TypeLits.KnownSymbol
                                                                                                                          "FileReadOnly")
                                                                                                      ($dSingI :: GHC.Generics.SingI
                                                                                                                    'GHC.Generics.PrefixI)
                                                                                                      ($dSingI1 :: GHC.Generics.SingI
                                                                                                                     'GHC.Types.False)
  GHC.Generics.$fConstructorMetaMetaCons @ "FileReadOnly"
                                         @ 'GHC.Generics.PrefixI
                                         @ 'GHC.Types.False
                                         $dKnownSymbol
                                         $dSingI
                                         $dSingI1
  = DirectoryServer.$fFromBSONFileMapping_$s$fConstructorMetaMetaCons
"SPEC/DirectoryServer $fConstructorMetaMetaCons @ "FileUnlocked" @ 'PrefixI @ 'False" [ALWAYS] forall ($dKnownSymbol :: GHC.TypeLits.KnownSymbol
                                                                                                                          "FileUnlocked")
                                                                                                      ($dSingI :: GHC.Generics.SingI
                                                                                                                    'GHC.Generics.PrefixI)
                                                                                                      ($dSingI1 :: GHC.Generics.SingI
                                                                                                                     'GHC.Types.False)
  GHC.Generics.$fConstructorMetaMetaCons @ "FileUnlocked"
                                         @ 'GHC.Generics.PrefixI
                                         @ 'GHC.Types.False
                                         $dKnownSymbol
                                         $dSingI
                                         $dSingI1
  = DirectoryServer.$fFromBSONFileMapping_$s$fConstructorMetaMetaCons1
"SPEC/DirectoryServer $fMimeRenderTYPEJSONa @ File" [ALWAYS] forall ($dToJSON :: Data.Aeson.Types.Class.ToJSON
                                                                                   CommonServer.File)
  Servant.API.ContentTypes.$fMimeRenderTYPEJSONa @ CommonServer.File
                                                 $dToJSON
  = DirectoryServer.$s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa1
"SPEC/DirectoryServer $fMimeRenderTYPEJSONa @ Response" [ALWAYS] forall ($dToJSON :: Data.Aeson.Types.Class.ToJSON
                                                                                       CommonServer.Response)
  Servant.API.ContentTypes.$fMimeRenderTYPEJSONa @ CommonServer.Response
                                                 $dToJSON
  = DirectoryServer.$s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa
"SPEC/DirectoryServer $fMimeRenderTYPEJSONa @ [FilePath]" [ALWAYS] forall ($dToJSON :: Data.Aeson.Types.Class.ToJSON
                                                                                         [GHC.IO.FilePath])
  Servant.API.ContentTypes.$fMimeRenderTYPEJSONa @ [GHC.IO.FilePath]
                                                 $dToJSON
  = DirectoryServer.$s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa2
"SPEC/DirectoryServer $fMimeRenderTYPEJSONa_$cmimeRender @ File" [ALWAYS] forall ($dToJSON :: Data.Aeson.Types.Class.ToJSON
                                                                                                CommonServer.File)
  Servant.API.ContentTypes.$fMimeRenderTYPEJSONa_$cmimeRender @ CommonServer.File
                                                              $dToJSON
  = DirectoryServer.$s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa_$cmimeRender1
"SPEC/DirectoryServer $fMimeRenderTYPEJSONa_$cmimeRender @ Response" [ALWAYS] forall ($dToJSON :: Data.Aeson.Types.Class.ToJSON
                                                                                                    CommonServer.Response)
  Servant.API.ContentTypes.$fMimeRenderTYPEJSONa_$cmimeRender @ CommonServer.Response
                                                              $dToJSON
  = DirectoryServer.$s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa_$cmimeRender
"SPEC/DirectoryServer $fMimeRenderTYPEJSONa_$cmimeRender @ [FilePath]" [ALWAYS] forall ($dToJSON :: Data.Aeson.Types.Class.ToJSON
                                                                                                      [GHC.IO.FilePath])
  Servant.API.ContentTypes.$fMimeRenderTYPEJSONa_$cmimeRender @ [GHC.IO.FilePath]
                                                              $dToJSON
  = DirectoryServer.$s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa_$cmimeRender2
"SPEC/DirectoryServer $fMimeUnrenderTYPEJSONa @ File" [ALWAYS] forall ($dFromJSON :: Data.Aeson.Types.Class.FromJSON
                                                                                       CommonServer.File)
  Servant.API.ContentTypes.$fMimeUnrenderTYPEJSONa @ CommonServer.File
                                                   $dFromJSON
  = DirectoryServer.$s$fAllMimeUnrender:a_$s$fMimeUnrenderTYPEJSONa3
"SPEC/DirectoryServer $fMimeUnrenderTYPEJSONa @ Identity" [ALWAYS] forall ($dFromJSON :: Data.Aeson.Types.Class.FromJSON
                                                                                           CommonServer.Identity)
  Servant.API.ContentTypes.$fMimeUnrenderTYPEJSONa @ CommonServer.Identity
                                                   $dFromJSON
  = DirectoryServer.$s$fAllMimeUnrender:a_$s$fMimeUnrenderTYPEJSONa2
"SPEC/DirectoryServer $fMimeUnrenderTYPEJSONa @ Ticket" [ALWAYS] forall ($dFromJSON :: Data.Aeson.Types.Class.FromJSON
                                                                                         CommonServer.Ticket)
  Servant.API.ContentTypes.$fMimeUnrenderTYPEJSONa @ CommonServer.Ticket
                                                   $dFromJSON
  = DirectoryServer.$s$fAllMimeUnrender:a_$s$fMimeUnrenderTYPEJSONa
"SPEC/DirectoryServer $fMimeUnrenderTYPEJSONa @ [Char]" [ALWAYS] forall ($dFromJSON :: Data.Aeson.Types.Class.FromJSON
                                                                                         [GHC.Types.Char])
  Servant.API.ContentTypes.$fMimeUnrenderTYPEJSONa @ [GHC.Types.Char]
                                                   $dFromJSON
  = DirectoryServer.$s$fAllMimeUnrender:a_$s$fMimeUnrenderTYPEJSONa1
"SPEC/DirectoryServer $fMimeUnrenderTYPEJSONa_$cmimeUnrender @ File" [ALWAYS] forall ($dFromJSON :: Data.Aeson.Types.Class.FromJSON
                                                                                                      CommonServer.File)
  Servant.API.ContentTypes.$fMimeUnrenderTYPEJSONa_$cmimeUnrender @ CommonServer.File
                                                                  $dFromJSON
  = DirectoryServer.$s$fAllMimeUnrender:a_$s$fMimeUnrenderTYPEJSONa_$cmimeUnrender3
"SPEC/DirectoryServer $fMimeUnrenderTYPEJSONa_$cmimeUnrender @ Identity" [ALWAYS] forall ($dFromJSON :: Data.Aeson.Types.Class.FromJSON
                                                                                                          CommonServer.Identity)
  Servant.API.ContentTypes.$fMimeUnrenderTYPEJSONa_$cmimeUnrender @ CommonServer.Identity
                                                                  $dFromJSON
  = DirectoryServer.$s$fAllMimeUnrender:a_$s$fMimeUnrenderTYPEJSONa_$cmimeUnrender2
"SPEC/DirectoryServer $fMimeUnrenderTYPEJSONa_$cmimeUnrender @ Ticket" [ALWAYS] forall ($dFromJSON :: Data.Aeson.Types.Class.FromJSON
                                                                                                        CommonServer.Ticket)
  Servant.API.ContentTypes.$fMimeUnrenderTYPEJSONa_$cmimeUnrender @ CommonServer.Ticket
                                                                  $dFromJSON
  = DirectoryServer.$s$fAllMimeUnrender:a_$s$fMimeUnrenderTYPEJSONa_$cmimeUnrender
"SPEC/DirectoryServer $fMimeUnrenderTYPEJSONa_$cmimeUnrender @ [Char]" [ALWAYS] forall ($dFromJSON :: Data.Aeson.Types.Class.FromJSON
                                                                                                        [GHC.Types.Char])
  Servant.API.ContentTypes.$fMimeUnrenderTYPEJSONa_$cmimeUnrender @ [GHC.Types.Char]
                                                                  $dFromJSON
  = DirectoryServer.$s$fAllMimeUnrender:a_$s$fMimeUnrenderTYPEJSONa_$cmimeUnrender1
"SPEC/DirectoryServer $fSelectorMetaMetaSel @ ('Just
                                                "identity") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                             ('GHC.Base.Just
                                                                                                                                                                                                                "identity"))
                                                                                                                                                                                               ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                              'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                               ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                              'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                               ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                              'GHC.Generics.DecidedLazy)
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Base.Just "identity")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     $dSingI
                                     $dSingI1
                                     $dSingI2
                                     $dSingI3
  = DirectoryServer.$fFromBSONFileMapping_$s$fSelectorMetaMetaSel1
"SPEC/DirectoryServer $fSelectorMetaMetaSel @ ('Just
                                                "lock") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                         ('GHC.Base.Just
                                                                                                                                                                                                            "lock"))
                                                                                                                                                                                           ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                          'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                           ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                          'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                           ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                          'GHC.Generics.DecidedLazy)
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Base.Just "lock")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     $dSingI
                                     $dSingI1
                                     $dSingI2
                                     $dSingI3
  = DirectoryServer.$fFromBSONFileMapping_$s$fSelectorMetaMetaSel
"SPEC/DirectoryServer $fSelectorMetaMetaSel_$cselName @ ('Just
                                                          "identity") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                                                 ('GHC.Base.Just
                                                                                                                                                                                                                                    "identity"))
                                                                                                                                                                                                                   ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                                                  'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                                                   ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                                                  'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                                                   ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                                                  'GHC.Generics.DecidedLazy)
  GHC.Generics.$fSelectorMetaMetaSel_$cselName @ ('GHC.Base.Just
                                                    "identity")
                                               @ 'GHC.Generics.NoSourceUnpackedness
                                               @ 'GHC.Generics.NoSourceStrictness
                                               @ 'GHC.Generics.DecidedLazy
                                               $dSingI
                                               $dSingI1
                                               $dSingI2
                                               $dSingI3
  = DirectoryServer.$fFromBSONFileMapping_$s$fSelectorMetaMetaSel_$cselName1
"SPEC/DirectoryServer $fSelectorMetaMetaSel_$cselName @ ('Just
                                                          "lock") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                                             ('GHC.Base.Just
                                                                                                                                                                                                                                "lock"))
                                                                                                                                                                                                               ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                                              'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                                               ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                                              'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                                               ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                                              'GHC.Generics.DecidedLazy)
  GHC.Generics.$fSelectorMetaMetaSel_$cselName @ ('GHC.Base.Just
                                                    "lock")
                                               @ 'GHC.Generics.NoSourceUnpackedness
                                               @ 'GHC.Generics.NoSourceStrictness
                                               @ 'GHC.Generics.DecidedLazy
                                               $dSingI
                                               $dSingI1
                                               $dSingI2
                                               $dSingI3
  = DirectoryServer.$fFromBSONFileMapping_$s$fSelectorMetaMetaSel_$cselName
"SPEC/DirectoryServer $fToJSON[] @ [Char]" [ALWAYS] forall ($dToJSON :: Data.Aeson.Types.Class.ToJSON
                                                                          [GHC.Types.Char])
  Data.Aeson.Types.Instances.$fToJSON[] @ [GHC.Types.Char] $dToJSON
  = DirectoryServer.$s$fAllCTRender:a_$s$fToJSON[]
"SPEC/DirectoryServer $fVala @ FileLock" [ALWAYS] forall ($dFromBSON :: Data.Bson.Generic.FromBSON
                                                                          DirectoryServer.FileLock)
                                                         ($dToBSON :: Data.Bson.Generic.ToBSON
                                                                        DirectoryServer.FileLock)
                                                         ($dTypeable :: Data.Typeable.Internal.Typeable
                                                                          DirectoryServer.FileLock)
                                                         ($dShow :: GHC.Show.Show
                                                                      DirectoryServer.FileLock)
                                                         ($dEq :: GHC.Classes.Eq
                                                                    DirectoryServer.FileLock)
  Data.Bson.Generic.$fVala @ DirectoryServer.FileLock
                           $dFromBSON
                           $dToBSON
                           $dTypeable
                           $dShow
                           $dEq
  = DirectoryServer.$fFromBSONFileMapping_$s$fVala
"SPEC/DirectoryServer $fVala_$ccast' @ FileLock" [ALWAYS] forall ($dFromBSON :: Data.Bson.Generic.FromBSON
                                                                                  DirectoryServer.FileLock)
                                                                 ($dToBSON :: Data.Bson.Generic.ToBSON
                                                                                DirectoryServer.FileLock)
                                                                 ($dTypeable :: Data.Typeable.Internal.Typeable
                                                                                  DirectoryServer.FileLock)
                                                                 ($dShow :: GHC.Show.Show
                                                                              DirectoryServer.FileLock)
                                                                 ($dEq :: GHC.Classes.Eq
                                                                            DirectoryServer.FileLock)
  Data.Bson.Generic.$fVala_$ccast' @ DirectoryServer.FileLock
                                   $dFromBSON
                                   $dToBSON
                                   $dTypeable
                                   $dShow
                                   $dEq
  = DirectoryServer.$fFromBSONFileMapping_$s$fVala_$ccast'
"SPEC/DirectoryServer $fVala_$cp1Val @ FileLock" [ALWAYS] forall ($dFromBSON :: Data.Bson.Generic.FromBSON
                                                                                  DirectoryServer.FileLock)
                                                                 ($dToBSON :: Data.Bson.Generic.ToBSON
                                                                                DirectoryServer.FileLock)
                                                                 ($dTypeable :: Data.Typeable.Internal.Typeable
                                                                                  DirectoryServer.FileLock)
                                                                 ($dShow :: GHC.Show.Show
                                                                              DirectoryServer.FileLock)
                                                                 ($dEq :: GHC.Classes.Eq
                                                                            DirectoryServer.FileLock)
  Data.Bson.Generic.$fVala_$cp1Val @ DirectoryServer.FileLock
                                   $dFromBSON
                                   $dToBSON
                                   $dTypeable
                                   $dShow
                                   $dEq
  = DirectoryServer.$fFromBSONFileMapping_$s$fVala_$cp1Val
"SPEC/DirectoryServer $fVala_$cp2Val @ FileLock" [ALWAYS] forall ($dFromBSON :: Data.Bson.Generic.FromBSON
                                                                                  DirectoryServer.FileLock)
                                                                 ($dToBSON :: Data.Bson.Generic.ToBSON
                                                                                DirectoryServer.FileLock)
                                                                 ($dTypeable :: Data.Typeable.Internal.Typeable
                                                                                  DirectoryServer.FileLock)
                                                                 ($dShow :: GHC.Show.Show
                                                                              DirectoryServer.FileLock)
                                                                 ($dEq :: GHC.Classes.Eq
                                                                            DirectoryServer.FileLock)
  Data.Bson.Generic.$fVala_$cp2Val @ DirectoryServer.FileLock
                                   $dFromBSON
                                   $dToBSON
                                   $dTypeable
                                   $dShow
                                   $dEq
  = DirectoryServer.$fFromBSONFileMapping_$s$fVala_$cp2Val
"SPEC/DirectoryServer $fVala_$cp3Val @ FileLock" [ALWAYS] forall ($dFromBSON :: Data.Bson.Generic.FromBSON
                                                                                  DirectoryServer.FileLock)
                                                                 ($dToBSON :: Data.Bson.Generic.ToBSON
                                                                                DirectoryServer.FileLock)
                                                                 ($dTypeable :: Data.Typeable.Internal.Typeable
                                                                                  DirectoryServer.FileLock)
                                                                 ($dShow :: GHC.Show.Show
                                                                              DirectoryServer.FileLock)
                                                                 ($dEq :: GHC.Classes.Eq
                                                                            DirectoryServer.FileLock)
  Data.Bson.Generic.$fVala_$cp3Val @ DirectoryServer.FileLock
                                   $dFromBSON
                                   $dToBSON
                                   $dTypeable
                                   $dShow
                                   $dEq
  = DirectoryServer.$fFromBSONFileMapping_$s$fVala_$cp3Val
"SPEC/DirectoryServer $fVala_$cvalList @ FileLock" [ALWAYS] forall ($dFromBSON :: Data.Bson.Generic.FromBSON
                                                                                    DirectoryServer.FileLock)
                                                                   ($dToBSON :: Data.Bson.Generic.ToBSON
                                                                                  DirectoryServer.FileLock)
                                                                   ($dTypeable :: Data.Typeable.Internal.Typeable
                                                                                    DirectoryServer.FileLock)
                                                                   ($dShow :: GHC.Show.Show
                                                                                DirectoryServer.FileLock)
                                                                   ($dEq :: GHC.Classes.Eq
                                                                              DirectoryServer.FileLock)
  Data.Bson.Generic.$fVala_$cvalList @ DirectoryServer.FileLock
                                     $dFromBSON
                                     $dToBSON
                                     $dTypeable
                                     $dShow
                                     $dEq
  = DirectoryServer.$fFromBSONFileMapping_$s$fVala_$cvalList
"SPEC/DirectoryServer $fVala_$cvalMaybe @ FileLock" [ALWAYS] forall ($dFromBSON :: Data.Bson.Generic.FromBSON
                                                                                     DirectoryServer.FileLock)
                                                                    ($dToBSON :: Data.Bson.Generic.ToBSON
                                                                                   DirectoryServer.FileLock)
                                                                    ($dTypeable :: Data.Typeable.Internal.Typeable
                                                                                     DirectoryServer.FileLock)
                                                                    ($dShow :: GHC.Show.Show
                                                                                 DirectoryServer.FileLock)
                                                                    ($dEq :: GHC.Classes.Eq
                                                                               DirectoryServer.FileLock)
  Data.Bson.Generic.$fVala_$cvalMaybe @ DirectoryServer.FileLock
                                      $dFromBSON
                                      $dToBSON
                                      $dTypeable
                                      $dShow
                                      $dEq
  = DirectoryServer.$fFromBSONFileMapping_$s$fVala_$cvalMaybe
"SPEC/DirectoryServer constructorCount @ FileLock" [ALWAYS] forall ($dGeneric :: GHC.Generics.Generic
                                                                                   DirectoryServer.FileLock)
                                                                   ($dGConstructorCount :: Data.Bson.Generic.GConstructorCount
                                                                                             (GHC.Generics.Rep
                                                                                                DirectoryServer.FileLock))
  Data.Bson.Generic.constructorCount @ DirectoryServer.FileLock
                                     $dGeneric
                                     $dGConstructorCount
  = DirectoryServer.$fFromBSONFileMapping_$sconstructorCount
"SPEC/DirectoryServer constructorCount @ FileMapping" [ALWAYS] forall ($dGeneric :: GHC.Generics.Generic
                                                                                      DirectoryServer.FileMapping)
                                                                      ($dGConstructorCount :: Data.Bson.Generic.GConstructorCount
                                                                                                (GHC.Generics.Rep
                                                                                                   DirectoryServer.FileMapping))
  Data.Bson.Generic.constructorCount @ DirectoryServer.FileMapping
                                     $dGeneric
                                     $dGConstructorCount
  = DirectoryServer.$fToBSONFileMapping_$sconstructorCount
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

