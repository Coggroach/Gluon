
==================== FINAL INTERFACE ====================
2017-02-02 20:47:38.7976842 UTC

interface Gluon-0.1.0.0-1cMXiYagSaXAuhpJfJwOMe:MongoDbConnector 8001
  interface hash: 99fc5b8e84bd67486ce123fb6569f8de
  ABI hash: fbf11599989513a0a6d755dbe58ebf6a
  export-list hash: 0383b5cb1f24e7c9349f3b3569d8d2ff
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 746dba3a46960b377f64c0f9e44cd9b9
  sig of: Nothing
  used TH splices: False
  where
exports:
  MongoDbConnector.defEnv
  MongoDbConnector.drainCursor
  MongoDbConnector.mongoDbDatabase
  MongoDbConnector.mongoDbIp
  MongoDbConnector.mongoDbPort
  MongoDbConnector.withMongoDbConnection
module dependencies:
package dependencies: MonadRandom-0.4.2.3@MonadRandom-0.4.2.3-8TfCm6PGvGYB7omozORhov
                      Win32-2.3.1.1@Win32-2.3.1.1 array-0.5.1.1@array-0.5.1.1
                      base-4.9.0.0
                      base16-bytestring-0.1.1.6@base16-bytestring-0.1.1.6-5dPoF8dzhwzBaEB2MvnmIS
                      base64-bytestring-1.0.0.1@base64-bytestring-1.0.0.1-In9M41tLtcS9QYt3QpGpNY
                      binary-0.8.3.0@binary-0.8.3.0
                      bson-0.3.2.3@bson-0.3.2.3-EE4NjCypFvQ16toPJxQaT3
                      byteable-0.1.1@byteable-0.1.1-15aIBCArSOBEnGxArzrDTM
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      cipher-aes-0.2.11@cipher-aes-0.2.11-6IDqXzfBW6B3WK2bKJbiBh
                      containers-0.5.7.1@containers-0.5.7.1
                      cprng-aes-0.6.1@cprng-aes-0.6.1-FC7oaZWVuSwGLsSRmNtnfS
                      crypto-cipher-types-0.0.9@crypto-cipher-types-0.0.9-Iwzx9devSK6HQoOjujg46u
                      crypto-random-0.0.9@crypto-random-0.0.9-AGKuDxkGmdkICMALIbcYDi
                      cryptohash-0.11.9@cryptohash-0.11.9-AKA83W6XJLuJ6ooDzY2r0l
                      cryptonite-0.19@cryptonite-0.19-JQTQGTq5BGQJS9F2vRxlj
                      data-binary-ieee754-0.4.4@data-binary-ieee754-0.4.4-F1HjhwdV1xx5grS0eMjeg2
                      deepseq-1.4.2.0@deepseq-1.4.2.0
                      exceptions-0.8.3@exceptions-0.8.3-7py7fmRxowDFpHmiHGKrTb
                      ghc-boot-th-8.0.1@ghc-boot-th-8.0.1 ghc-prim-0.5.0.0
                      hashable-1.2.4.0@hashable-1.2.4.0-EMu4H7FB10MAl6hwKw992G
                      hashtables-1.2.1.0@hashtables-1.2.1.0-97BixhaJIWTIDAaThqJujl
                      hslogger-1.2.10@hslogger-1.2.10-sT57JmCNO02KPQ07k0Jv6
                      integer-gmp-1.0.0.1
                      lifted-base-0.2.3.8@lifted-base-0.2.3.8-KLkd0w1UJqu6nE8oVTTEBy
                      memory-0.13@memory-0.13-ABHR5331zHK9scHPRr7afU
                      mmorph-1.0.9@mmorph-1.0.9-DmSwQqk5nLj7roLAcydGz
                      monad-control-1.0.1.0@monad-control-1.0.1.0-HoNEBoNfniX3vjSfkI7WTT
                      mongoDB-2.1.1.1@mongoDB-2.1.1.1-8pQlEjBJ8J0LRyS8YhkcGi
                      mtl-2.2.1@mtl-2.2.1-6qsR1PHUy5lL47Hpoa4jCM
                      network-2.6.3.1@network-2.6.3.1-nK9qnsiJR03CWuPIGMmX
                      nonce-1.0.2@nonce-1.0.2-5AJC5Z1QNmbDHXkdC0qzs0
                      parsec-3.1.11@parsec-3.1.11-BCos4GEVCuDB8dnOCBHO6X
                      primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa
                      random-1.1@random-1.1-54KmMHXjttlERYcr1mvsAe
                      random-shuffle-0.0.4@random-shuffle-0.0.4-LfeDYNPfwrQ2o9p6tw2M9l
                      resourcet-1.1.8.1@resourcet-1.1.8.1-1XWaZ7RmVde330DM5PRI3Z
                      securemem-0.1.9@securemem-0.1.9-AlUbMorzPNe4lwnV15ASIa
                      stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF
                      template-haskell-2.11.0.0
                      text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s
                      time-1.6.0.1@time-1.6.0.1 transformers-0.5.2.0@transformers-0.5.2.0
                      transformers-base-0.4.4@transformers-base-0.4.4-25SoAegOdaF8rLEnnb5jPI
                      vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6
orphans: MonadRandom-0.4.2.3@MonadRandom-0.4.2.3-8TfCm6PGvGYB7omozORhov:Control.Monad.Random
         base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         hashable-1.2.4.0@hashable-1.2.4.0-EMu4H7FB10MAl6hwKw992G:Data.Hashable.Generic
         mongoDB-2.1.1.1@mongoDB-2.1.1.1-8pQlEjBJ8J0LRyS8YhkcGi:Database.MongoDB.Internal.Util
         network-2.6.3.1@network-2.6.3.1-nK9qnsiJR03CWuPIGMmX:Network.Socket
         stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF:Control.Monad.STM
         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text
         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text.Lazy
         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text.Show
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Fusion.Bundle
         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Unboxed
family instance modules: base-4.9.0.0:Control.Applicative
                         base-4.9.0.0:Data.Complex base-4.9.0.0:Data.Either
                         base-4.9.0.0:Data.Functor.Compose base-4.9.0.0:Data.Functor.Const
                         base-4.9.0.0:Data.Functor.Identity
                         base-4.9.0.0:Data.Functor.Product base-4.9.0.0:Data.List.NonEmpty
                         base-4.9.0.0:Data.Monoid base-4.9.0.0:Data.Semigroup
                         base-4.9.0.0:Data.Type.Equality base-4.9.0.0:Data.Version
                         base-4.9.0.0:Data.Void base-4.9.0.0:GHC.Exts
                         base-4.9.0.0:GHC.Generics base-4.9.0.0:GHC.IO.Exception
                         base-4.9.0.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         ghc-boot-th-8.0.1@ghc-boot-th-8.0.1:GHC.LanguageExtensions.Type
                         monad-control-1.0.1.0@monad-control-1.0.1.0-HoNEBoNfniX3vjSfkI7WTT:Control.Monad.Trans.Control
                         primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa:Control.Monad.Primitive
                         resourcet-1.1.8.1@resourcet-1.1.8.1-1XWaZ7RmVde330DM5PRI3Z:Control.Monad.Trans.Resource.Internal
                         template-haskell-2.11.0.0:Language.Haskell.TH.Syntax
                         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text
                         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text.Lazy
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Primitive
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Unboxed
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Unboxed.Base
import  -/  base-4.9.0.0:Control.Monad b6b2f076948b5e8acd6d95beb4d22bfc
import  -/  base-4.9.0.0:Control.Monad.IO.Class 6093ce5ace985d5ea81901bb51e28805
import  -/  base-4.9.0.0:Data.Foldable 3cbed01c922be29649c33015287c82ca
import  -/  base-4.9.0.0:GHC.Base dd8044a8d640eee51828c17c476a6ba7
import  -/  base-4.9.0.0:GHC.Show 0b5845243cb2ec62b57dd6963d276ec6
import  -/  base-4.9.0.0:Prelude 2d9cd8b0ec3d728f62b734df888d2e34
import  -/  base-4.9.0.0:System.Environment b460b4a8ded59bf876fca87a5a3550f2
import  -/  base-4.9.0.0:Text.Read 575a1becf4a56881b7def2de5a4c3776
import  -/  bson-0.3.2.3@bson-0.3.2.3-EE4NjCypFvQ16toPJxQaT3:Data.Bson 9dcb4fcd7c61220f1f6ae15ef9a1c054
import  -/  ghc-prim-0.5.0.0:GHC.Types 7378e41b7749213c8c88ceb6b0665d4c
import  -/  hslogger-1.2.10@hslogger-1.2.10-sT57JmCNO02KPQ07k0Jv6:System.Log.Logger 9750954b51f6cb928dbf2952a7e908d4
import  -/  integer-gmp-1.0.0.1:GHC.Integer.Type bc99d7d6ca3e6f7b722927a29e227674
import  -/  mongoDB-2.1.1.1@mongoDB-2.1.1.1-8pQlEjBJ8J0LRyS8YhkcGi:Database.MongoDB 1e4125e4412f09f4fc240a6f540ad3a8
import  -/  mongoDB-2.1.1.1@mongoDB-2.1.1.1-8pQlEjBJ8J0LRyS8YhkcGi:Database.MongoDB.Connection f8e93dd587becd56646ff60d54ef03e1
import  -/  mongoDB-2.1.1.1@mongoDB-2.1.1.1-8pQlEjBJ8J0LRyS8YhkcGi:Database.MongoDB.Internal.Protocol 00070c87ea0f4be8d360d2513a48200a
import  -/  mongoDB-2.1.1.1@mongoDB-2.1.1.1-8pQlEjBJ8J0LRyS8YhkcGi:Database.MongoDB.Query b4ba7e1d7397a420856343870367af87
import  -/  resourcet-1.1.8.1@resourcet-1.1.8.1-1XWaZ7RmVde330DM5PRI3Z:Control.Monad.Trans.Resource 43ad99d9dc3f44283ad3f4dab0f4ed29
import  -/  text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text 8dbacab9fc008bc20f8ced1c7c1f4b82
import  -/  time-1.6.0.1@time-1.6.0.1:Data.Time.Clock 23d666c4496b6f7bf555419424731ccb
import  -/  time-1.6.0.1@time-1.6.0.1:Data.Time.Format 6cdceb8cd3a2bb55a28d431357c4ce3d
83928cd51e92a67e6e1832c69b1cd703
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   MongoDbConnector.$trModule2
                   MongoDbConnector.$trModule1) -}
ed2a44303ab9756da236f4f10bba494c
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "MongoDbConnector"#) -}
5c160cc53e185b51a0399aba353713ab
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "Gluon-0.1.0.0-1cMXiYagSaXAuhpJfJwOMe"#) -}
7ae184c464c446bc324548b53ed6226b
  defEnv ::
    GHC.Show.Show a =>
    GHC.Base.String
    -> (GHC.Base.String -> a) -> a -> GHC.Types.Bool -> GHC.Types.IO a
  {- Arity: 6, Strictness: <L,A><L,1*U><L,1*C1(U)><L,U><L,A><S,U>,
     Unfolding: InlineRule (0, True, True)
                MongoDbConnector.defEnv3
                  `cast`
                (forall (a :: <*>_N).
                 <GHC.Show.Show a>_R
                 ->_R <GHC.Base.String>_R
                 ->_R <GHC.Base.String -> a>_R
                 ->_R <a>_R
                 ->_R <GHC.Types.Bool>_R
                 ->_R Sym (GHC.Types.N:IO[0] <a>_R)) -}
f5283f55bf43fcf33167a606155c69a2
  defEnv3 ::
    GHC.Show.Show a =>
    GHC.Base.String
    -> (GHC.Base.String -> a)
    -> a
    -> GHC.Types.Bool
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
  {- Arity: 6, Strictness: <L,A><L,1*U><L,1*C1(U)><L,U><L,A><S,U>,
     Unfolding: InlineRule (6, True, False)
                (\ @ a
                   ($dShow :: GHC.Show.Show a)
                   (env :: GHC.Base.String)
                   (fn :: GHC.Base.String -> a)
                   (def :: a)
                   (doWarn :: GHC.Types.Bool)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Foreign.Marshal.Array.withArrayLen0
                         @ Foreign.C.Types.CWchar
                         @ (GHC.Base.Maybe [GHC.Types.Char])
                         Foreign.C.Types.$fStorableCWchar
                         Foreign.C.String.newCWString2
                           `cast`
                         (Sym (Foreign.C.Types.N:CWchar[0]))
                         (Foreign.C.String.withCWString_go env)
                         System.Environment.getEnv4
                           `cast`
                         (<GHC.Types.Int>_R
                          ->_R <Foreign.C.String.CWString>_R
                          ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.Maybe [GHC.Types.Char]>_R)))
                        `cast`
                      (GHC.Types.N:IO[0] <GHC.Base.Maybe GHC.Base.String>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   GHC.Base.Nothing -> (# ipv, def #)
                   GHC.Base.Just s1 -> (# ipv, fn s1 #) } }) -}
c608d362f8613304a083c6406f23da0e
  drainCursor ::
    Database.MongoDB.Query.Cursor
    -> Database.MongoDB.Query.Action GHC.Types.IO [Data.Bson.Document]
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (cur :: Database.MongoDB.Query.Cursor) ->
                 MongoDbConnector.drainCursor_drainCursor'
                   cur
                   (GHC.Types.[] @ Data.Bson.Document)) -}
c51182d61072d956347fb20043bf6672
  drainCursor_drainCursor' ::
    Database.MongoDB.Query.Cursor
    -> [Data.Bson.Document]
    -> Control.Monad.Trans.Reader.ReaderT
         Database.MongoDB.Query.MongoContext
         GHC.Types.IO
         [Data.Bson.Document]
  {- Arity: 2, Strictness: <L,U><L,U> -}
56a2220e223ee7921c7b108aba117a15
  mongoDbDatabase :: GHC.Types.IO GHC.Base.String
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                MongoDbConnector.mongoDbDatabase1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <[GHC.Types.Char]>_R)) -}
b1db9d1a5173e124192dfdf8ecad9572
  mongoDbDatabase1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Types.Char] #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Foreign.Marshal.Array.withArrayLen0
                         @ Foreign.C.Types.CWchar
                         @ (GHC.Base.Maybe [GHC.Types.Char])
                         Foreign.C.Types.$fStorableCWchar
                         Foreign.C.String.newCWString2
                           `cast`
                         (Sym (Foreign.C.Types.N:CWchar[0]))
                         MongoDbConnector.mongoDbDatabase3
                         System.Environment.getEnv4
                           `cast`
                         (<GHC.Types.Int>_R
                          ->_R <Foreign.C.String.CWString>_R
                          ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.Maybe [GHC.Types.Char]>_R)))
                        `cast`
                      (GHC.Types.N:IO[0] <GHC.Base.Maybe GHC.Base.String>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   GHC.Base.Nothing -> (# ipv, MongoDbConnector.mongoDbDatabase2 #)
                   GHC.Base.Just s1 -> (# ipv, s1 #) } }) -}
eaf61a11177fcc09dc4402e3a9c2a3f5
  mongoDbDatabase2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "USEHASKELLDB"#) -}
ca2374b6e84f6c535574c270f72e3cde
  mongoDbDatabase3 :: [Foreign.C.Types.CWchar]
  {- Unfolding: (Foreign.C.String.withCWString_go
                   MongoDbConnector.mongoDbDatabase4) -}
a943d84063ff0f44278ddba2e31ab2f0
  mongoDbDatabase4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "MONGODB_DATABASE"#) -}
1a73697cf39f45208c49b1a5e21d7582
  mongoDbIp :: GHC.Types.IO GHC.Base.String
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                MongoDbConnector.mongoDbIp1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <[GHC.Types.Char]>_R)) -}
1d8fd6f9bfa7d5b3ec28533b83a00fd8
  mongoDbIp1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Types.Char] #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Foreign.Marshal.Array.withArrayLen0
                         @ Foreign.C.Types.CWchar
                         @ (GHC.Base.Maybe [GHC.Types.Char])
                         Foreign.C.Types.$fStorableCWchar
                         Foreign.C.String.newCWString2
                           `cast`
                         (Sym (Foreign.C.Types.N:CWchar[0]))
                         MongoDbConnector.mongoDbIp3
                         System.Environment.getEnv4
                           `cast`
                         (<GHC.Types.Int>_R
                          ->_R <Foreign.C.String.CWString>_R
                          ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.Maybe [GHC.Types.Char]>_R)))
                        `cast`
                      (GHC.Types.N:IO[0] <GHC.Base.Maybe GHC.Base.String>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   GHC.Base.Nothing -> (# ipv, MongoDbConnector.mongoDbIp2 #)
                   GHC.Base.Just s1 -> (# ipv, s1 #) } }) -}
7a24a8f7014311133f3ddc320303874d
  mongoDbIp2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "127.0.0.1"#) -}
57d4f96dfacc7181ebed31eec7160923
  mongoDbIp3 :: [Foreign.C.Types.CWchar]
  {- Unfolding: (Foreign.C.String.withCWString_go
                   MongoDbConnector.mongoDbIp4) -}
1842afb708c263be10b57aaf7892f86c
  mongoDbIp4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "MONGODB_IP"#) -}
2d3fe431219ddefaff78f5f81fbbc3fa
  mongoDbPort :: GHC.Types.IO GHC.Integer.Type.Integer
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                MongoDbConnector.mongoDbPort1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <GHC.Integer.Type.Integer>_R)) -}
165a84a3fa6eb300198c45aa36f35528
  mongoDbPort1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          GHC.Integer.Type.Integer #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Foreign.Marshal.Array.withArrayLen0
                         @ Foreign.C.Types.CWchar
                         @ (GHC.Base.Maybe [GHC.Types.Char])
                         Foreign.C.Types.$fStorableCWchar
                         Foreign.C.String.newCWString2
                           `cast`
                         (Sym (Foreign.C.Types.N:CWchar[0]))
                         MongoDbConnector.mongoDbPort6
                         System.Environment.getEnv4
                           `cast`
                         (<GHC.Types.Int>_R
                          ->_R <Foreign.C.String.CWString>_R
                          ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.Maybe [GHC.Types.Char]>_R)))
                        `cast`
                      (GHC.Types.N:IO[0] <GHC.Base.Maybe GHC.Base.String>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   GHC.Base.Nothing -> (# ipv, MongoDbConnector.mongoDbPort5 #)
                   GHC.Base.Just s1
                   -> (# ipv,
                         case Text.Read.readEither6
                                @ GHC.Integer.Type.Integer
                                (Text.ParserCombinators.ReadP.run
                                   @ GHC.Integer.Type.Integer
                                   MongoDbConnector.mongoDbPort4
                                   s1) of wild1 {
                           [] -> MongoDbConnector.mongoDbPort3
                           : x ds
                           -> case ds of wild2 {
                                [] -> x : ipv2 ipv3 -> MongoDbConnector.mongoDbPort2 } } #) } }) -}
c36b4af1de6bfdefe698e0bc4065c3ce
  mongoDbPort2 :: GHC.Integer.Type.Integer
  {- Strictness: x -}
89577830312e112515536acf02730aa7
  mongoDbPort3 :: GHC.Integer.Type.Integer
  {- Strictness: x -}
56833d1b09e7d75372fae254c9fdcc41
  mongoDbPort4 ::
    Text.ParserCombinators.ReadP.P GHC.Integer.Type.Integer
  {- Unfolding: ((GHC.Read.$fReadInteger3
                    GHC.Read.$fReadInteger_$sconvertInt
                    Text.ParserCombinators.ReadPrec.minPrec)
                   `cast`
                 (Text.ParserCombinators.ReadP.N:ReadP[0]
                      <GHC.Integer.Type.Integer>_R)
                   @ GHC.Integer.Type.Integer
                   (Text.Read.readEither5 @ GHC.Integer.Type.Integer)) -}
da6aa9aab7d12a67078d612713e2588c
  mongoDbPort5 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (27017) -}
34b360de794e4cc858f8cda6efd2aa6c
  mongoDbPort6 :: [Foreign.C.Types.CWchar]
  {- Unfolding: (Foreign.C.String.withCWString_go
                   MongoDbConnector.mongoDbPort7) -}
437e63b83e471478a5b7f2daac3ef163
  mongoDbPort7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "MONGODB_PORT"#) -}
4ba81412e9715abcba0533fd92ec6050
  withMongoDbConnection ::
    Database.MongoDB.Query.Action GHC.Types.IO a -> GHC.Types.IO a
  {- Arity: 2, Strictness: <L,1*C1(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                MongoDbConnector.withMongoDbConnection1
                  `cast`
                (forall (a :: <*>_N).
                 <Database.MongoDB.Query.Action GHC.Types.IO a>_R
                 ->_R Sym (GHC.Types.N:IO[0] <a>_R)) -}
ca6c46184e8c3d1d35a9d497c2169729
  withMongoDbConnection1 ::
    Database.MongoDB.Query.Action GHC.Types.IO a
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
  {- Arity: 2, Strictness: <L,1*C1(U)><S,U> -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

